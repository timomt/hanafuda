<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="fedora" name="GameSpec" tests="29" errors="0" failures="0" skipped="0" time="0.113" timestamp="2024-12-06T17:57:10">
          <properties>
      <property name="java.specification.version" value="21"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://www.redhat.com/"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-21-openjdk-21.0.5.0.11-1.fc41.x86_64/lib"/><property name="sun.java.command" value="/home/timo/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.10.2/sbt-1.10.2.zip/sbt/bin/sbt-launch.jar clean coverage test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2024-10-15"/><property name="java.home" value="/usr/lib/jvm/java-21-openjdk-21.0.5.0.11-1.fc41.x86_64"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="21.0.5+11"/><property name="user.name" value="timo"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/timo/.cache/JNA/temp/jna6089055905459322696.tmp"/><property name="java.vendor.version" value="(Red_Hat-21.0.5.0.11-1)"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="21.0.5"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="native.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="stderr.encoding" value="UTF-8"/><property name="java.vendor" value="Red Hat, Inc."/><property name="scala.ext.dirs" value="/home/timo/.sbt/1.0/java9-rt-ext-red_hat__inc__21_0_5"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="java.class.path" value="/home/timo/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.10.2/sbt-1.10.2.zip/sbt/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Red Hat, Inc."/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Berlin"/><property name="java.vm.specification.version" value="21"/><property name="os.name" value="Linux"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="US"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/timo"/><property name="user.language" value="en"/><property name="sbt.script" value="/home/timo/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.10.2/sbt-1.10.2.zip/sbt/bin/sbt"/><property name="sbt.ipcsocket.tmpdir" value="/run/user/1000/.sbt6f62beca/ipcsocket"/><property name="swoval.tmpdir" value="/run/user/1000/.sbt6f62beca/swoval"/><property name="jline.esc.timeout" value="0"/><property name="stdout.encoding" value="UTF-8"/><property name="path.separator" value=":"/><property name="os.version" value="6.11.10-300.fc41.x86_64"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib64:/lib64:/usr/lib:/lib:/usr/lib64/llvm18/lib:/usr/lib64/octave/8.4.0:/usr/lib64/pipewire-0.3/jack:/usr/lib64/iscsi:/usr/lib64/llvm16/lib:/usr/lib/llvm16/lib"/><property name="java.vendor.url.bug" value="https://bugzilla.redhat.com/enter_bug.cgi?product=Fedora&amp;component=java-21-openjdk&amp;version=39"/><property name="user.dir" value="/home/timo/Development/se/Hanafuda"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="21.0.5+11"/><property name="java.class.version" value="65.0"/>
    </properties>
          <testcase classname="GameSpec" name="updateGameStateWithDisplayType[GameStatePlanned] should set displayType attribute correctly" time="0.033">
                      
                    </testcase><testcase classname="GameSpec" name="updateGameStateWithError should return a copy with the provided stderr included" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStatePlanned] should return error on invalid input" time="0.019">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStatePlanned] should only discard as last resort" time="0.022">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStatePlanned] should discard properly" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStateRandom] should return error on invalid input" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStateRandom] should only discard as last resort" time="0.0">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStateRandom] should discard properly" time="0.003">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStateRandom] should check for koi-koi" time="0.003">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStatePlanned] should return error for invalid input" time="0.009">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStatePlanned] should match default rules properly" time="0.002">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStatePlanned] should match 3/4 rule properly" time="0.002">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateRandom] should return error for invalid input" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateRandom] should match default rules properly" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateRandom] should match 3/4 rule properly" time="0.008">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateRandom] should check for koi-koi in default match" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateRandom] should check for koi-koi in 3/4 rule" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateRandom] should proceed to summary if deck is empty or both players hands are empty" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="updateGameStateWithDisplayType[GameStateRandom] should set displayType attribute correctly" time="0.0">
                      
                    </testcase><testcase classname="GameSpec" name="updateGameStateWithDisplayType[GameStatePendingKoiKoi] should set displayType attribute correctly" time="0.0">
                      
                    </testcase><testcase classname="GameSpec" name="updateGameStateWithError[GameStatePendingKoiKoi], handleDiscard and handleMatch should return Some in stderr" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="GameStateSummary should initialize regular values to None or empty" time="0.0">
                      
                    </testcase><testcase classname="GameSpec" name="updateGameStateWithDisplayType[GameStateSummary] should set displayType attribute correctly" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateSummary] should return error in stderr" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStateSummary] should return error in stderr" time="0.001">
                      
                    </testcase><testcase classname="GameSpec" name="GameStateUninitialized should initialize regular values to None or empty" time="0.0">
                      
                    </testcase><testcase classname="GameSpec" name="updateGameStateWithDisplayType[GameStateUninitialized] should set displayType attribute correctly" time="0.0">
                      
                    </testcase><testcase classname="GameSpec" name="handleMatch[GameStateUninitialized] should return error in stderr" time="0.0">
                      
                    </testcase><testcase classname="GameSpec" name="handleDiscard[GameStateUninitialized] should return error in stderr" time="0.0">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>