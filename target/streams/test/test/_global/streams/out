[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(CardTypeSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(TUIManagerSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(CombinationSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(model.GameManagerSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(ObservableSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(GameSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(CommandSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(DeckSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(GameControllerSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(CardMonthSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(CardPlantSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(CardSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(CardNameSpec, org.scalatest.tools.Framework$$anon$1@11d653cb, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGameSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdateGameStateWithDisplayType[GameStatePlanned][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set displayType attribute correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdateGameStateWithError[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a copy with the provided stderr included[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleDiscard[GameStatePlanned][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error on invalid input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should only discard as last resort[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should discard properly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleDiscard[GameStateRandom][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error on invalid input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should only discard as last resort[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should discard properly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should check for koi-koi[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleMatch[GameStatePlanned][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error for invalid input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should match default rules properly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should match 3/4 rule properly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleMatch[GameStateRandom][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error for invalid input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should match default rules properly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should match 3/4 rule properly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should check for koi-koi in default match[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should check for koi-koi in 3/4 rule[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should proceed to summary if deck is empty or both players hands are empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdateGameStateWithDisplayType[GameStateRandom][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set displayType attribute correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdateGameStateWithDisplayType[GameStatePendingKoiKoi][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set displayType attribute correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdateGameStateWithError[GameStatePendingKoiKoi], handleDiscard and handleMatch[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return Some in stderr[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGameStateSummary[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should initialize regular values to None or empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdateGameStateWithDisplayType[GameStateSummary][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set displayType attribute correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleMatch[GameStateSummary][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error in stderr[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleDiscard[GameStateSummary][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error in stderr[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGameStateUninitialized[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should initialize regular values to None or empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdateGameStateWithDisplayType[GameStateUninitialized][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set displayType attribute correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleMatch[GameStateUninitialized][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error in stderr[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mhandleDiscard[GameStateUninitialized][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return error in stderr[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCardPlantSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- CardPlant should return correct unicode for each plant[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGameManagerSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mnewGame()[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a game initialized with the given player names[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not deal a full month[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should group 3 cards of the same month together[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle instant win conditions[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32minitializePlayers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should correctly initialize a list of 2 Players[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mkoiKoiHandler[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return instance of GameStatePendingKoiKoi if koi-koi not already called[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should double the points of the caller in case of a successful call[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set the points of the caller to 0 and double the points of opponent if call failed[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mkoiKoiCallHandler[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should continue planned game with calledKoiKoi attribute set[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCardTypeSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- CardType should return correct unicode for each card type[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCardSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- Card should return correct unicode representation for all combinations[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mDeckSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mA default Deck[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have 48 cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have 4 cards of each month[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have 5 Hikari cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have 9 Tane cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have 10 Tanzaku cards, 4 of which plain, 3 poetry, 3 blue[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have 24 Kasu cards, all of them plain except lightning[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPoll[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return a card and a deck without that exact card[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return None and the same deck if the deck is empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPoll Multiple[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should poll n cards from the deck[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return an empty list and the same deck if the deck is empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCombinationSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll Combinations[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 0 for no yaku[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGokoCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 10 points for all five 20-point cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mShikoCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 8 points for all 20-point cards except Ono no Michikaze[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAmeShikoCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 7 points for any four 20-point cards including Ono no Michikaze[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSankoCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 6 points for any three 20-point cards excluding Ono no Michikaze[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTsukimiZakeCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5 points for Moon and Sake[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mHanamiZakeCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5 points for Curtain and Sake[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mInoshiKachoCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5 points for Boar, Deer, and Butterflies[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTaneCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 point for any five 10-point cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAkatanAotanCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 10 points for all three Red Poetry Tanzaku cards and all three Blue Tanzaku cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAkatanCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5 points for all three Red Poetry Tanzaku cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAotanCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5 points for all three Blue Tanzaku cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTanzakuCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 point for any five 5-point cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mKasuCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 point for any ten 1-point cards[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTeshiCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 6 points for being dealt four cards of the same suit[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mKuttsukiCombination[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 6 points for being dealt four pairs of cards with matching suits[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mObservableSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn Observable[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should allow observers to be added[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should allow observers to be removed[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should notify all observers of a new GameState[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCardMonthSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- CardMonth should return correct unicode for each month[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCommandSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCommandManager[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return some in stderr if undo called on empty stack[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return some in stderr if redo called on empty stack[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCommand[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should throw exception if undo called before execute[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTUIManagerSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should output game[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should output combinations[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should output help[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should output spoiler[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mprintBoard[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should print the board correctly (size > 8 && size mod 2 != 0)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should print the board correctly (size > 8 && size mod 2 == 0)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should print the board correctly (size < 8 && size >= 5)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- print board with queued correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- print board with matched cards correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- print board with two matched cards correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle stdout correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle stderr correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mupdate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should call printBoard and print the correct output for a game state[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should update the TUI correctly for an empty game state[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should update the TUI correctly for a non-empty game state[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mclearScreen[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should clear the screen correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mprintHelp[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should print the help text correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mprintSpoiler[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should print the spoiler text correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mprintOverview[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should printOverview/ combinations correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcolorizeOverviewCard[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should colorize the cards correctly for each player[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mprintSummary[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should print the summary text correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCardNameSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- CardName should return correct unicode for each card name[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGameControllerSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGameController[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should do nothing on invalid input before start[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'start Player1 Player2'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return stderr on invalid input after start[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle pending koikoi correctly (koi-koi) input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle pending koikoi correctly (finish) input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should handle pending koikoi correctly (_) input[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should initialize a new game[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'help'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'continue'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'match 1 2'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'match 1'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'discard 1'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'discard'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'new'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should process input 'combinations'[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should undo moves correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should redo moves correctly[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 2 seconds, 625 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 113[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 13, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 113, failed 0, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll tests passed.[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	DeckSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	CommandSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	CardMonthSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	CardSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	model.GameManagerSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	CardPlantSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	ObservableSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	CardNameSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	CombinationSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	CardTypeSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	TUIManagerSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	GameControllerSpec[0m
[0m[[0m[0mdebug[0m] [0m[0m	GameSpec[0m
