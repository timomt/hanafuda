# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
src/main/scala/controller/Command.scala
controller
Command
Trait
controller.Command
undo
866
973
29
getOrElse
Apply
false
0
false
previousState.getOrElse(throw new IllegalStateException("Undo called before execute. Call execute first."))

1
src/main/scala/controller/Command.scala
controller
Command
Trait
controller.Command
undo
890
972
29
throw
Apply
false
0
false
throw new IllegalStateException("Undo called before execute. Call execute first.")

2
src/main/scala/controller/Command.scala
controller
Command
Trait
controller.Command
undo
896
972
29
<init>
Apply
false
0
false
new IllegalStateException("Undo called before execute. Call execute first.")

3
src/main/scala/controller/Command.scala
controller
Command
Trait
controller.Command
undo
809
817
28
undo
DefDef
false
0
false
def undo

4
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
<init>
1170
1211
40
apply
Apply
false
0
false
scala.collection.mutable.Stack[Command]()

5
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
<init>
1302
1343
45
apply
Apply
false
0
false
scala.collection.mutable.Stack[Command]()

6
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
executeCommand
1685
1714
55
execute
Apply
false
0
false
command.execute(currentState)

7
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
executeCommand
1682
1682
55
apply
Apply
true
0
false


8
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
executeCommand
1723
1754
56
push
Apply
false
0
false
undoStack.push(executedCommand)

9
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
executeCommand
1763
1780
57
clear
Apply
false
0
false
redoStack.clear()

10
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
executeCommand
1566
1584
54
executeCommand
DefDef
false
0
false
def executeCommand

11
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
2056
2074
68
nonEmpty
Select
false
0
false
undoStack.nonEmpty

12
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
2104
2119
69
pop
Apply
false
0
false
undoStack.pop()

13
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
2147
2173
70
undo
Apply
false
0
false
command.undo(currentState)

14
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
2186
2209
71
push
Apply
false
0
false
redoStack.push(command)

15
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
2076
2240
68
<none>
Block
true
0
false
{\n            val command = undoStack.pop()\n            val newState = command.undo(currentState)\n            redoStack.push(command)\n            newState\n        }

16
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
2260
2326
74
updateGameStateWithError
Apply
false
0
false
currentState.updateGameStateWithError("There is nothing to undo.")

17
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
2246
2336
73
<none>
Block
true
0
false
{\n            currentState.updateGameStateWithError("There is nothing to undo.")\n        }

18
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
undo
1995
2003
67
undo
DefDef
false
0
false
def undo

19
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2593
2611
85
nonEmpty
Select
false
0
false
redoStack.nonEmpty

20
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2641
2656
86
pop
Apply
false
0
false
redoStack.pop()

21
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2703
2732
87
execute
Apply
false
0
false
command.execute(currentState)

22
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2700
2700
87
apply
Apply
true
0
false


23
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2745
2776
88
push
Apply
false
0
false
undoStack.push(executedCommand)

24
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2613
2807
85
<none>
Block
true
0
false
{\n            val command = redoStack.pop()\n            val (newState, executedCommand) = command.execute(currentState)\n            undoStack.push(executedCommand)\n            newState\n        }

25
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2827
2893
91
updateGameStateWithError
Apply
false
0
false
currentState.updateGameStateWithError("There is nothing to redo.")

26
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2813
2903
90
<none>
Block
true
0
false
{\n            currentState.updateGameStateWithError("There is nothing to redo.")\n        }

27
src/main/scala/controller/Command.scala
controller
CommandManager
Class
controller.CommandManager
redo
2532
2540
84
redo
DefDef
false
0
false
def redo

28
src/main/scala/controller/Command.scala
controller
StartGameCommand
Class
controller.StartGameCommand
execute
3286
3332
105
newGame
Apply
false
0
false
GameManager.newGame(firstPlayer, secondPlayer)

29
src/main/scala/controller/Command.scala
controller
StartGameCommand
Class
controller.StartGameCommand
execute
3286
3305
105
newGame$default$3
Select
false
0
false
GameManager.newGame

30
src/main/scala/controller/Command.scala
controller
StartGameCommand
Class
controller.StartGameCommand
execute
3286
3305
105
newGame$default$4
Select
false
0
false
GameManager.newGame

31
src/main/scala/controller/Command.scala
controller
StartGameCommand
Class
controller.StartGameCommand
execute
3286
3305
105
newGame$default$5
Select
false
0
false
GameManager.newGame

32
src/main/scala/controller/Command.scala
controller
StartGameCommand
Class
controller.StartGameCommand
execute
3286
3305
105
newGame$default$6
Select
false
0
false
GameManager.newGame

33
src/main/scala/controller/Command.scala
controller
StartGameCommand
Class
controller.StartGameCommand
execute
3286
3305
105
newGame$default$7
Select
false
0
false
GameManager.newGame

34
src/main/scala/controller/Command.scala
controller
StartGameCommand
Class
controller.StartGameCommand
execute
3148
3168
103
execute
DefDef
false
0
false
override def execute

35
src/main/scala/controller/Command.scala
controller
HelpCommand
Class
controller.HelpCommand
execute
3597
3658
116
updateGameStateWithDisplayType
Apply
false
0
false
currentState.updateGameStateWithDisplayType(DisplayType.HELP)

36
src/main/scala/controller/Command.scala
controller
HelpCommand
Class
controller.HelpCommand
execute
3459
3479
114
execute
DefDef
false
0
false
override def execute

37
src/main/scala/controller/Command.scala
controller
CombinationsCommand
Class
controller.CombinationsCommand
execute
3939
4008
127
updateGameStateWithDisplayType
Apply
false
0
false
currentState.updateGameStateWithDisplayType(DisplayType.COMBINATIONS)

38
src/main/scala/controller/Command.scala
controller
CombinationsCommand
Class
controller.CombinationsCommand
execute
3801
3821
125
execute
DefDef
false
0
false
override def execute

39
src/main/scala/controller/Command.scala
controller
KoiKoiCommand
Class
controller.KoiKoiCommand
execute
4270
4313
138
koiKoiCallHandler
Apply
false
0
false
GameManager.koiKoiCallHandler(currentState)

40
src/main/scala/controller/Command.scala
controller
KoiKoiCommand
Class
controller.KoiKoiCommand
execute
4132
4152
136
execute
DefDef
false
0
false
override def execute

41
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4573
4626
149
evaluateScore
Apply
false
0
false
GameManager.evaluateScore(currentState.players, 1, 1)

42
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4599
4619
149
players
Select
false
0
false
currentState.players

43
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4570
4570
149
apply
Apply
true
0
false


44
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4650
4764
150
handleKoiKoi
Apply
false
0
false
GameManager.handleKoiKoi(currentState.players, firstS, secS, board = currentState.board, deck = currentState.deck)

45
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4675
4695
150
players
Select
false
0
false
currentState.players

46
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4719
4737
150
board
Select
false
0
false
currentState.board

47
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4746
4763
150
deck
Select
false
0
false
currentState.deck

48
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4650
4674
150
handleKoiKoi$default$6
Select
false
0
false
GameManager.handleKoiKoi

49
src/main/scala/controller/Command.scala
controller
FinishCommand
Class
controller.FinishCommand
execute
4429
4449
147
execute
DefDef
false
0
false
override def execute

50
src/main/scala/controller/Command.scala
controller
ContinueCommand
Class
controller.ContinueCommand
execute
5022
5083
161
updateGameStateWithDisplayType
Apply
false
0
false
currentState.updateGameStateWithDisplayType(DisplayType.GAME)

51
src/main/scala/controller/Command.scala
controller
ContinueCommand
Class
controller.ContinueCommand
execute
4884
4904
159
execute
DefDef
false
0
false
override def execute

52
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5357
5502
172
newGame
Apply
false
0
false
GameManager.newGame(currentState.players.head.name, currentState.players(1).name, currentState.players.head.score, currentState.players(1).score)

53
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5377
5397
172
players
Select
false
0
false
currentState.players

54
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5377
5402
172
head
Select
false
0
false
currentState.players.head

55
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5409
5432
172
apply
Apply
false
0
false
currentState.players(1)

56
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5409
5429
172
players
Select
false
0
false
currentState.players

57
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5439
5459
172
players
Select
false
0
false
currentState.players

58
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5439
5464
172
head
Select
false
0
false
currentState.players.head

59
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5472
5495
172
apply
Apply
false
0
false
currentState.players(1)

60
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5472
5492
172
players
Select
false
0
false
currentState.players

61
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5357
5376
172
newGame$default$5
Select
false
0
false
GameManager.newGame

62
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5357
5376
172
newGame$default$6
Select
false
0
false
GameManager.newGame

63
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5357
5376
172
newGame$default$7
Select
false
0
false
GameManager.newGame

64
src/main/scala/controller/Command.scala
controller
NewCommand
Class
controller.NewCommand
execute
5219
5239
170
execute
DefDef
false
0
false
override def execute

65
src/main/scala/controller/Command.scala
controller
MatchCommand
Class
controller.MatchCommand
execute
5934
5976
186
handleMatch
Apply
false
0
false
currentState.handleMatch(xString, yString)

66
src/main/scala/controller/Command.scala
controller
MatchCommand
Class
controller.MatchCommand
execute
5796
5816
184
execute
DefDef
false
0
false
override def execute

67
src/main/scala/controller/Command.scala
controller
DiscardCommand
Class
controller.DiscardCommand
execute
6329
6364
199
handleDiscard
Apply
false
0
false
currentState.handleDiscard(xString)

68
src/main/scala/controller/Command.scala
controller
DiscardCommand
Class
controller.DiscardCommand
execute
6191
6211
197
execute
DefDef
false
0
false
override def execute

69
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
<init>
486
506
15
<init>
Apply
false
0
false
new CommandManager()

70
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
812
823
26
exit
Apply
false
0
false
sys.exit(0)

71
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
793
823
25
<none>
Block
true
0
false
=>\n                sys.exit(0)

72
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
868
925
29
executeCommand
Apply
false
0
false
commandManager.executeCommand(new HelpCommand, gameState)

73
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
898
913
29
<init>
Apply
false
0
false
new HelpCommand

74
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
849
925
28
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new HelpCommand, gameState)

75
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
970
1000
32
undo
Apply
false
0
false
commandManager.undo(gameState)

76
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
951
1000
31
<none>
Block
true
0
false
=>\n                commandManager.undo(gameState)

77
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1045
1075
35
redo
Apply
false
0
false
commandManager.redo(gameState)

78
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1026
1075
34
<none>
Block
true
0
false
=>\n                commandManager.redo(gameState)

79
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1277
1324
40
<init>
Apply
false
0
false
new StartGameCommand(firstPlayer, secondPlayer)

80
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1349
1398
41
executeCommand
Apply
false
0
false
commandManager.executeCommand(command, gameState)

81
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1263
1398
40
<none>
Block
true
0
false
val command = new StartGameCommand(firstPlayer, secondPlayer)\n                        commandManager.executeCommand(command, gameState)

82
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1429
1498
42
updateGameStateWithError
Apply
false
0
false
gameState.updateGameStateWithError("You have to start a game first.")

83
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1426
1498
42
<none>
Block
true
0
false
=> gameState.updateGameStateWithError("You have to start a game first.")

84
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1146
1516
37
<none>
Block
true
0
false
=>\n                i match {\n                    case s"start $firstPlayer $secondPlayer" =>\n                        val command = new StartGameCommand(firstPlayer, secondPlayer)\n                        commandManager.executeCommand(command, gameState)\n                    case _ => gameState.updateGameStateWithError("You have to start a game first.")\n                }

85
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1577
1642
46
executeCommand
Apply
false
0
false
commandManager.executeCommand(new CombinationsCommand, gameState)

86
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1607
1630
46
<init>
Apply
false
0
false
new CombinationsCommand

87
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1558
1642
45
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new CombinationsCommand, gameState)

88
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1804
1863
51
executeCommand
Apply
false
0
false
commandManager.executeCommand(new KoiKoiCommand, gameState)

89
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1834
1851
51
<init>
Apply
false
0
false
new KoiKoiCommand

90
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1777
1863
50
<none>
Block
true
0
false
=>\n                        commandManager.executeCommand(new KoiKoiCommand, gameState)

91
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1925
1984
53
executeCommand
Apply
false
0
false
commandManager.executeCommand(new FinishCommand, gameState)

92
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1955
1972
53
<init>
Apply
false
0
false
new FinishCommand

93
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1898
1984
52
<none>
Block
true
0
false
=>\n                        commandManager.executeCommand(new FinishCommand, gameState)

94
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2039
2127
55
updateGameStateWithError
Apply
false
0
false
gameState.updateGameStateWithError("You have to either call \\"koi-koi\\" or \\"finish\\".")

95
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2012
2127
54
<none>
Block
true
0
false
=>\n                        gameState.updateGameStateWithError("You have to either call \\"koi-koi\\" or \\"finish\\".")

96
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
1713
2145
48
<none>
Block
true
0
false
=>\n                i match {\n                    case "koi-koi" =>\n                        commandManager.executeCommand(new KoiKoiCommand, gameState)\n                    case "finish" =>\n                        commandManager.executeCommand(new FinishCommand, gameState)\n                    case _ =>\n                        gameState.updateGameStateWithError("You have to either call \\"koi-koi\\" or \\"finish\\".")\n                }

97
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2202
2263
59
executeCommand
Apply
false
0
false
commandManager.executeCommand(new ContinueCommand, gameState)

98
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2232
2251
59
<init>
Apply
false
0
false
new ContinueCommand

99
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2183
2263
58
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new ContinueCommand, gameState)

100
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2316
2380
62
executeCommand
Apply
false
0
false
commandManager.executeCommand(new MatchCommand(x, y), gameState)

101
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2346
2368
62
<init>
Apply
false
0
false
new MatchCommand(x, y)

102
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2297
2380
61
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new MatchCommand(x, y), gameState)

103
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2430
2496
65
executeCommand
Apply
false
0
false
commandManager.executeCommand(new MatchCommand(y, "0"), gameState)

104
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2460
2484
65
<init>
Apply
false
0
false
new MatchCommand(y, "0")

105
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2411
2496
64
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new MatchCommand(y, "0"), gameState)

106
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2548
2611
68
executeCommand
Apply
false
0
false
commandManager.executeCommand(new DiscardCommand(x), gameState)

107
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2578
2599
68
<init>
Apply
false
0
false
new DiscardCommand(x)

108
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2529
2611
67
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new DiscardCommand(x), gameState)

109
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2660
2725
71
executeCommand
Apply
false
0
false
commandManager.executeCommand(new DiscardCommand("0"), gameState)

110
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2690
2713
71
<init>
Apply
false
0
false
new DiscardCommand("0")

111
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2641
2725
70
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new DiscardCommand("0"), gameState)

112
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2769
2825
74
executeCommand
Apply
false
0
false
commandManager.executeCommand(new NewCommand, gameState)

113
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2799
2813
74
<init>
Apply
false
0
false
new NewCommand

114
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2750
2825
73
<none>
Block
true
0
false
=>\n                commandManager.executeCommand(new NewCommand, gameState)

115
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2865
2929
77
updateGameStateWithError
Apply
false
0
false
gameState.updateGameStateWithError("Wrong usage, see \\"help\\".")

116
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2846
2929
76
<none>
Block
true
0
false
=>\n                gameState.updateGameStateWithError("Wrong usage, see \\"help\\".")

117
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
2948
2974
79
notifyObservers
Apply
false
0
false
notifyObservers(gameState)

118
src/main/scala/controller/GameController.scala
controller
GameController
Object
controller.GameController
processInput
693
709
23
processInput
DefDef
false
0
false
def processInput

119
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
<init>
481
489
24
apply
Apply
false
0
false
Vector()

120
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
add
651
667
31
:+
Apply
false
0
false
subscribers :+ s

121
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
add
608
615
31
add
DefDef
false
0
false
def add

122
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
remove
840
874
38
filterNot
Apply
false
0
false
subscribers.filterNot(o => o == s)

123
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
remove
794
804
38
remove
DefDef
false
0
false
def remove

124
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
notifyObservers
1077
1122
45
foreach
Apply
false
0
false
subscribers.foreach(o => o.update(gameState))

125
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
$anonfun
1102
1121
45
update
Apply
false
0
false
o.update(gameState)

126
src/main/scala/controller/Observable.scala
controller
Observable
Class
controller.Observable
notifyObservers
1027
1046
45
notifyObservers
DefDef
false
0
false
def notifyObservers

127
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
453
464
16
<none>
Block
true
0
false
=> " Pine "

128
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
483
494
17
<none>
Block
true
0
false
=> " Plum "

129
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
515
526
18
<none>
Block
true
0
false
=> "Cherry"

130
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
549
560
19
<none>
Block
true
0
false
=> "Wist. "

131
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
579
590
20
<none>
Block
true
0
false
=> " Iris "

132
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
610
621
21
<none>
Block
true
0
false
=> "Peony "

133
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
647
658
22
<none>
Block
true
0
false
=> " Bush "

134
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
685
696
23
<none>
Block
true
0
false
=> "Grass "

135
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
724
735
24
<none>
Block
true
0
false
=> "Chrys."

136
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
756
767
25
<none>
Block
true
0
false
=> "Willow"

137
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
791
802
26
<none>
Block
true
0
false
=> "Paul. "

138
src/main/scala/model/Card.scala
model
CardPlant
Class
model.CardPlant
unicode
400
411
15
unicode
DefDef
false
0
false
def unicode

139
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1286
1297
44
<none>
Block
true
0
false
=> " Jan. "

140
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1320
1331
45
<none>
Block
true
0
false
=> " Feb. "

141
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1351
1362
46
<none>
Block
true
0
false
=> " Mar. "

142
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1382
1393
47
<none>
Block
true
0
false
=> " Apr. "

143
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1411
1422
48
<none>
Block
true
0
false
=> " May  "

144
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1441
1452
49
<none>
Block
true
0
false
=> " Jun. "

145
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1471
1482
50
<none>
Block
true
0
false
=> " Jul. "

146
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1503
1514
51
<none>
Block
true
0
false
=> " Aug. "

147
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1538
1549
52
<none>
Block
true
0
false
=> " Sep. "

148
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1571
1582
53
<none>
Block
true
0
false
=> " Oct. "

149
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1605
1616
54
<none>
Block
true
0
false
=> " Nov. "

150
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1639
1650
55
<none>
Block
true
0
false
=> " Dec. "

151
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1666
1671
56
<none>
Block
true
0
false
=> ""

152
src/main/scala/model/Card.scala
model
CardMonth
Class
model.CardMonth
unicode
1230
1241
43
unicode
DefDef
false
0
false
def unicode

153
src/main/scala/model/Card.scala
model
CardType
Class
model.CardType
unicode
2090
2101
74
<none>
Block
true
0
false
=> "Hikari"

154
src/main/scala/model/Card.scala
model
CardType
Class
model.CardType
unicode
2120
2131
75
<none>
Block
true
0
false
=> " Tane "

155
src/main/scala/model/Card.scala
model
CardType
Class
model.CardType
unicode
2153
2164
76
<none>
Block
true
0
false
=> "Tanz. "

156
src/main/scala/model/Card.scala
model
CardType
Class
model.CardType
unicode
2183
2194
77
<none>
Block
true
0
false
=> " Kasu "

157
src/main/scala/model/Card.scala
model
CardType
Class
model.CardType
unicode
2210
2215
78
<none>
Block
true
0
false
=> ""

158
src/main/scala/model/Card.scala
model
CardType
Class
model.CardType
unicode
2035
2046
73
unicode
DefDef
false
0
false
def unicode

159
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2784
2795
98
<none>
Block
true
0
false
=> "Plane "

160
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2815
2826
99
<none>
Block
true
0
false
=> "Crane "

161
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2852
2863
100
<none>
Block
true
0
false
=> "Night."

162
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2892
2903
101
<none>
Block
true
0
false
=> "Po_tan"

163
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2925
2936
102
<none>
Block
true
0
false
=> "Curt. "

164
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2957
2968
103
<none>
Block
true
0
false
=> "Cuckoo"

165
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2989
3000
104
<none>
Block
true
0
false
=> "Bridge"

166
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3026
3037
105
<none>
Block
true
0
false
=> "Butter"

167
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3064
3075
106
<none>
Block
true
0
false
=> "Bl_tan"

168
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3094
3105
107
<none>
Block
true
0
false
=> " Boar "

169
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3124
3135
108
<none>
Block
true
0
false
=> " Moon "

170
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3155
3166
109
<none>
Block
true
0
false
=> "Geese "

171
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3189
3200
110
<none>
Block
true
0
false
=> "Sake_c"

172
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3219
3230
111
<none>
Block
true
0
false
=> " Deer "

173
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3249
3260
112
<none>
Block
true
0
false
=> " Rain "

174
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3282
3293
113
<none>
Block
true
0
false
=> "Swall."

175
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3317
3328
114
<none>
Block
true
0
false
=> "Light."

176
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3350
3361
115
<none>
Block
true
0
false
=> "Phoen."

177
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
3377
3382
116
<none>
Block
true
0
false
=> ""

178
src/main/scala/model/Card.scala
model
CardName
Class
model.CardName
unicode
2730
2741
97
unicode
DefDef
false
0
false
def unicode

179
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4075
4247
138
wrapRefArray
Apply
false
0
false
s"""╔══════╗\n           |║${month.unicode}║\n           |║${cardType.unicode}║\n           |║${cardName.unicode}║\n           |╚══════╝\n           |""".stripMargin.split("\\n")

180
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4075
4247
143
split
Apply
false
0
false
s"""╔══════╗\n           |║${month.unicode}║\n           |║${cardType.unicode}║\n           |║${cardName.unicode}║\n           |╚══════╝\n           |""".stripMargin.split("\\n")

181
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4075
4223
138
augmentString
Apply
false
0
false
s"""╔══════╗\n           |║${month.unicode}║\n           |║${cardType.unicode}║\n           |║${cardName.unicode}║\n           |╚══════╝\n           |"""

182
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4075
4223
138
s
Apply
false
0
false
s"""╔══════╗\n           |║${month.unicode}║\n           |║${cardType.unicode}║\n           |║${cardName.unicode}║\n           |╚══════╝\n           |"""

183
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4103
4116
139
unicode
Select
false
0
false
month.unicode

184
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4134
4150
140
unicode
Select
false
0
false
cardType.unicode

185
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4168
4184
141
unicode
Select
false
0
false
cardName.unicode

186
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4075
4235
143
stripMargin
Select
false
0
false
s"""╔══════╗\n           |║${month.unicode}║\n           |║${cardType.unicode}║\n           |║${cardName.unicode}║\n           |╚══════╝\n           |""".stripMargin

187
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4075
4254
143
toList
Select
false
0
false
s"""╔══════╗\n           |║${month.unicode}║\n           |║${cardType.unicode}║\n           |║${cardName.unicode}║\n           |╚══════╝\n           |""".stripMargin.split("\\n").toList

188
src/main/scala/model/Card.scala
model
Card
Class
model.Card
unicode
4037
4048
137
unicode
DefDef
false
0
false
def unicode

189
src/main/scala/model/Card.scala
model
Card
Object
model.Card
$lessinit$greater$default$4
3767
3767
129
$lessinit$greater$default$4
DefDef
false
0
false


190
src/main/scala/model/Combination.scala
model
GokoCombination
Object
model.GokoCombination
evaluate
1979
2398
53
apply
Apply
false
0
false
List(\n            Card(CardMonth.JANUARY, CardType.HIKARI, CardName.CRANE, false, 1),\n            Card(CardMonth.MARCH, CardType.HIKARI, CardName.CURTAIN, false, 9),\n            Card(CardMonth.AUGUST, CardType.HIKARI, CardName.MOON, false, 29),\n            Card(CardMonth.NOVEMBER, CardType.HIKARI, CardName.RAIN, false, 41),\n            Card(CardMonth.DECEMBER, CardType.HIKARI, CardName.PHOENIX, false, 45),\n        )

191
src/main/scala/model/Combination.scala
model
GokoCombination
Object
model.GokoCombination
evaluate
2410
2469
60
forall
Apply
false
0
false
hikariCards.forall(c => containsCard(player.side.cards, c))

192
src/main/scala/model/Combination.scala
model
GokoCombination
Object
model.GokoCombination
$anonfun
2434
2468
60
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

193
src/main/scala/model/Combination.scala
model
GokoCombination
Object
model.GokoCombination
evaluate
2475
2481
60
points
Ident
true
0
false
points

194
src/main/scala/model/Combination.scala
model
GokoCombination
Object
model.GokoCombination
evaluate
2487
2488
60
<none>
Literal
true
0
false
0

195
src/main/scala/model/Combination.scala
model
GokoCombination
Object
model.GokoCombination
evaluate
1906
1927
52
evaluate
DefDef
false
0
false
override def evaluate

196
src/main/scala/model/Combination.scala
model
ShikoCombination
Object
model.ShikoCombination
evaluate
2871
3209
73
apply
Apply
false
0
false
List(\n            Card(CardMonth.JANUARY, CardType.HIKARI, CardName.CRANE, false, 1),\n            Card(CardMonth.MARCH, CardType.HIKARI, CardName.CURTAIN, false, 9),\n            Card(CardMonth.AUGUST, CardType.HIKARI, CardName.MOON, false, 29),\n            Card(CardMonth.DECEMBER, CardType.HIKARI, CardName.PHOENIX, false, 45),\n        )

197
src/main/scala/model/Combination.scala
model
ShikoCombination
Object
model.ShikoCombination
evaluate
3221
3279
79
forall
Apply
false
0
false
shikoCards.forall(c => containsCard(player.side.cards, c))

198
src/main/scala/model/Combination.scala
model
ShikoCombination
Object
model.ShikoCombination
$anonfun
3244
3278
79
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

199
src/main/scala/model/Combination.scala
model
ShikoCombination
Object
model.ShikoCombination
evaluate
3285
3291
79
points
Ident
true
0
false
points

200
src/main/scala/model/Combination.scala
model
ShikoCombination
Object
model.ShikoCombination
evaluate
3297
3298
79
<none>
Literal
true
0
false
0

201
src/main/scala/model/Combination.scala
model
ShikoCombination
Object
model.ShikoCombination
evaluate
2799
2820
72
evaluate
DefDef
false
0
false
override def evaluate

202
src/main/scala/model/Combination.scala
model
AmeShikoCombination
Object
model.AmeShikoCombination
evaluate
3704
3758
92
count
Apply
false
0
false
player.side.cards.count(_.cardType == CardType.HIKARI)

203
src/main/scala/model/Combination.scala
model
AmeShikoCombination
Object
model.AmeShikoCombination
evaluate
3779
3879
93
containsCard
Apply
false
0
false
containsCard(player.side.cards, Card(CardMonth.NOVEMBER, CardType.HIKARI, CardName.RAIN, false, 41))

204
src/main/scala/model/Combination.scala
model
AmeShikoCombination
Object
model.AmeShikoCombination
evaluate
3893
3899
94
points
Ident
true
0
false
points

205
src/main/scala/model/Combination.scala
model
AmeShikoCombination
Object
model.AmeShikoCombination
evaluate
3905
3906
94
<none>
Literal
true
0
false
0

206
src/main/scala/model/Combination.scala
model
AmeShikoCombination
Object
model.AmeShikoCombination
evaluate
3646
3667
91
evaluate
DefDef
false
0
false
override def evaluate

207
src/main/scala/model/Combination.scala
model
SankoCombination
Object
model.SankoCombination
evaluate
4285
4339
107
count
Apply
false
0
false
player.side.cards.count(_.cardType == CardType.HIKARI)

208
src/main/scala/model/Combination.scala
model
SankoCombination
Object
model.SankoCombination
evaluate
4361
4461
108
containsCard
Apply
false
0
false
containsCard(player.side.cards, Card(CardMonth.NOVEMBER, CardType.HIKARI, CardName.RAIN, false, 41))

209
src/main/scala/model/Combination.scala
model
SankoCombination
Object
model.SankoCombination
evaluate
4475
4481
109
points
Ident
true
0
false
points

210
src/main/scala/model/Combination.scala
model
SankoCombination
Object
model.SankoCombination
evaluate
4487
4488
109
<none>
Literal
true
0
false
0

211
src/main/scala/model/Combination.scala
model
SankoCombination
Object
model.SankoCombination
evaluate
4227
4248
106
evaluate
DefDef
false
0
false
override def evaluate

212
src/main/scala/model/Combination.scala
model
TsukimiZakeCombination
Object
model.TsukimiZakeCombination
evaluate
4909
5086
122
apply
Apply
false
0
false
List(\n            Card(CardMonth.AUGUST, CardType.HIKARI, CardName.MOON, false, 29),\n            Card(CardMonth.SEPTEMBER, CardType.TANE, CardName.SAKE_CUP, false, 33)\n        )

213
src/main/scala/model/Combination.scala
model
TsukimiZakeCombination
Object
model.TsukimiZakeCombination
evaluate
5098
5153
126
forall
Apply
false
0
false
tzCards.forall(c => containsCard(player.side.cards, c))

214
src/main/scala/model/Combination.scala
model
TsukimiZakeCombination
Object
model.TsukimiZakeCombination
$anonfun
5118
5152
126
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

215
src/main/scala/model/Combination.scala
model
TsukimiZakeCombination
Object
model.TsukimiZakeCombination
evaluate
5159
5165
126
points
Ident
true
0
false
points

216
src/main/scala/model/Combination.scala
model
TsukimiZakeCombination
Object
model.TsukimiZakeCombination
evaluate
5171
5172
126
<none>
Literal
true
0
false
0

217
src/main/scala/model/Combination.scala
model
TsukimiZakeCombination
Object
model.TsukimiZakeCombination
evaluate
4840
4861
121
evaluate
DefDef
false
0
false
override def evaluate

218
src/main/scala/model/Combination.scala
model
HanamiZakeCombination
Object
model.HanamiZakeCombination
evaluate
5603
5781
139
apply
Apply
false
0
false
List(\n            Card(CardMonth.MARCH, CardType.HIKARI, CardName.CURTAIN, false, 9),\n            Card(CardMonth.SEPTEMBER, CardType.TANE, CardName.SAKE_CUP, false, 33)\n        )

219
src/main/scala/model/Combination.scala
model
HanamiZakeCombination
Object
model.HanamiZakeCombination
evaluate
5793
5848
143
forall
Apply
false
0
false
tzCards.forall(c => containsCard(player.side.cards, c))

220
src/main/scala/model/Combination.scala
model
HanamiZakeCombination
Object
model.HanamiZakeCombination
$anonfun
5813
5847
143
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

221
src/main/scala/model/Combination.scala
model
HanamiZakeCombination
Object
model.HanamiZakeCombination
evaluate
5854
5860
143
points
Ident
true
0
false
points

222
src/main/scala/model/Combination.scala
model
HanamiZakeCombination
Object
model.HanamiZakeCombination
evaluate
5866
5867
143
<none>
Literal
true
0
false
0

223
src/main/scala/model/Combination.scala
model
HanamiZakeCombination
Object
model.HanamiZakeCombination
evaluate
5534
5555
138
evaluate
DefDef
false
0
false
override def evaluate

224
src/main/scala/model/Combination.scala
model
InoshiKachoCombination
Object
model.InoshiKachoCombination
evaluate
6279
6528
156
apply
Apply
false
0
false
List(\n            Card(CardMonth.JULY, CardType.TANE, CardName.BOAR, false, 25),\n            Card(CardMonth.OCTOBER, CardType.TANE, CardName.DEER, false, 37),\n            Card(CardMonth.JUNE, CardType.TANE, CardName.BUTTERFLIES, false, 21)\n        )

225
src/main/scala/model/Combination.scala
model
InoshiKachoCombination
Object
model.InoshiKachoCombination
evaluate
6540
6595
161
forall
Apply
false
0
false
tzCards.forall(c => containsCard(player.side.cards, c))

226
src/main/scala/model/Combination.scala
model
InoshiKachoCombination
Object
model.InoshiKachoCombination
$anonfun
6560
6594
161
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

227
src/main/scala/model/Combination.scala
model
InoshiKachoCombination
Object
model.InoshiKachoCombination
evaluate
6601
6607
161
points
Ident
true
0
false
points

228
src/main/scala/model/Combination.scala
model
InoshiKachoCombination
Object
model.InoshiKachoCombination
evaluate
6613
6614
161
<none>
Literal
true
0
false
0

229
src/main/scala/model/Combination.scala
model
InoshiKachoCombination
Object
model.InoshiKachoCombination
evaluate
6210
6231
155
evaluate
DefDef
false
0
false
override def evaluate

230
src/main/scala/model/Combination.scala
model
TaneCombination
Object
model.TaneCombination
evaluate
7082
7134
175
count
Apply
false
0
false
player.side.cards.count(_.cardType == CardType.TANE)

231
src/main/scala/model/Combination.scala
model
TaneCombination
Object
model.TaneCombination
evaluate
7171
7189
176
-
Apply
true
0
false
firstCardCount - 4

232
src/main/scala/model/Combination.scala
model
TaneCombination
Object
model.TaneCombination
evaluate
7195
7196
176
<none>
Literal
true
0
false
0

233
src/main/scala/model/Combination.scala
model
TaneCombination
Object
model.TaneCombination
evaluate
7006
7027
174
evaluate
DefDef
false
0
false
override def evaluate

234
src/main/scala/model/Combination.scala
model
AkatanAotanCombination
Object
model.AkatanAotanCombination
evaluate
7736
8286
190
apply
Apply
false
0
false
List(\n            Card(CardMonth.JANUARY, CardType.TANZAKU, CardName.POETRY_TANZAKU, false, 2),\n            Card(CardMonth.FEBRUARY, CardType.TANZAKU, CardName.POETRY_TANZAKU, false, 6),\n            Card(CardMonth.MARCH, CardType.TANZAKU, CardName.POETRY_TANZAKU, false, 10),\n            Card(CardMonth.JUNE, CardType.TANZAKU, CardName.BLUE_TANZAKU, false, 22),\n            Card(CardMonth.SEPTEMBER, CardType.TANZAKU, CardName.BLUE_TANZAKU, false, 34),\n            Card(CardMonth.OCTOBER, CardType.TANZAKU, CardName.BLUE_TANZAKU, false, 38)\n        )

235
src/main/scala/model/Combination.scala
model
AkatanAotanCombination
Object
model.AkatanAotanCombination
evaluate
8298
8353
198
forall
Apply
false
0
false
aaCards.forall(c => containsCard(player.side.cards, c))

236
src/main/scala/model/Combination.scala
model
AkatanAotanCombination
Object
model.AkatanAotanCombination
$anonfun
8318
8352
198
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

237
src/main/scala/model/Combination.scala
model
AkatanAotanCombination
Object
model.AkatanAotanCombination
evaluate
8359
8365
198
points
Ident
true
0
false
points

238
src/main/scala/model/Combination.scala
model
AkatanAotanCombination
Object
model.AkatanAotanCombination
evaluate
8371
8372
198
<none>
Literal
true
0
false
0

239
src/main/scala/model/Combination.scala
model
AkatanAotanCombination
Object
model.AkatanAotanCombination
evaluate
7667
7688
189
evaluate
DefDef
false
0
false
override def evaluate

240
src/main/scala/model/Combination.scala
model
AkatanCombination
Object
model.AkatanCombination
evaluate
8756
9040
211
apply
Apply
false
0
false
List(\n            Card(CardMonth.JANUARY, CardType.TANZAKU, CardName.POETRY_TANZAKU, false, 2),\n            Card(CardMonth.FEBRUARY, CardType.TANZAKU, CardName.POETRY_TANZAKU, false, 6),\n            Card(CardMonth.MARCH, CardType.TANZAKU, CardName.POETRY_TANZAKU, false, 10)\n        )

241
src/main/scala/model/Combination.scala
model
AkatanCombination
Object
model.AkatanCombination
evaluate
9052
9106
216
forall
Apply
false
0
false
aCards.forall(c => containsCard(player.side.cards, c))

242
src/main/scala/model/Combination.scala
model
AkatanCombination
Object
model.AkatanCombination
$anonfun
9071
9105
216
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

243
src/main/scala/model/Combination.scala
model
AkatanCombination
Object
model.AkatanCombination
evaluate
9112
9118
216
points
Ident
true
0
false
points

244
src/main/scala/model/Combination.scala
model
AkatanCombination
Object
model.AkatanCombination
evaluate
9124
9125
216
<none>
Literal
true
0
false
0

245
src/main/scala/model/Combination.scala
model
AkatanCombination
Object
model.AkatanCombination
evaluate
8688
8709
210
evaluate
DefDef
false
0
false
override def evaluate

246
src/main/scala/model/Combination.scala
model
AotanCombination
Object
model.AotanCombination
evaluate
9500
9780
229
apply
Apply
false
0
false
List(\n            Card(CardMonth.JUNE, CardType.TANZAKU, CardName.BLUE_TANZAKU, false, 22),\n            Card(CardMonth.SEPTEMBER, CardType.TANZAKU, CardName.BLUE_TANZAKU, false, 34),\n            Card(CardMonth.OCTOBER, CardType.TANZAKU, CardName.BLUE_TANZAKU, false, 38)\n        )

247
src/main/scala/model/Combination.scala
model
AotanCombination
Object
model.AotanCombination
evaluate
9792
9846
234
forall
Apply
false
0
false
aCards.forall(c => containsCard(player.side.cards, c))

248
src/main/scala/model/Combination.scala
model
AotanCombination
Object
model.AotanCombination
$anonfun
9811
9845
234
containsCard
Apply
false
0
false
containsCard(player.side.cards, c)

249
src/main/scala/model/Combination.scala
model
AotanCombination
Object
model.AotanCombination
evaluate
9852
9858
234
points
Ident
true
0
false
points

250
src/main/scala/model/Combination.scala
model
AotanCombination
Object
model.AotanCombination
evaluate
9864
9865
234
<none>
Literal
true
0
false
0

251
src/main/scala/model/Combination.scala
model
AotanCombination
Object
model.AotanCombination
evaluate
9432
9453
228
evaluate
DefDef
false
0
false
override def evaluate

252
src/main/scala/model/Combination.scala
model
TanzakuCombination
Object
model.TanzakuCombination
evaluate
10348
10403
248
count
Apply
false
0
false
player.side.cards.count(_.cardType == CardType.TANZAKU)

253
src/main/scala/model/Combination.scala
model
TanzakuCombination
Object
model.TanzakuCombination
evaluate
10440
10458
249
-
Apply
true
0
false
firstCardCount - 4

254
src/main/scala/model/Combination.scala
model
TanzakuCombination
Object
model.TanzakuCombination
evaluate
10464
10465
249
<none>
Literal
true
0
false
0

255
src/main/scala/model/Combination.scala
model
TanzakuCombination
Object
model.TanzakuCombination
evaluate
10272
10293
247
evaluate
DefDef
false
0
false
override def evaluate

256
src/main/scala/model/Combination.scala
model
KasuCombination
Object
model.KasuCombination
evaluate
10950
11002
263
count
Apply
false
0
false
player.side.cards.count(_.cardType == CardType.KASU)

257
src/main/scala/model/Combination.scala
model
KasuCombination
Object
model.KasuCombination
evaluate
11040
11058
264
-
Apply
true
0
false
firstCardCount - 9

258
src/main/scala/model/Combination.scala
model
KasuCombination
Object
model.KasuCombination
evaluate
11064
11065
264
<none>
Literal
true
0
false
0

259
src/main/scala/model/Combination.scala
model
KasuCombination
Object
model.KasuCombination
evaluate
10874
10895
262
evaluate
DefDef
false
0
false
override def evaluate

260
src/main/scala/model/Combination.scala
model
TeshiCombination
Object
model.TeshiCombination
evaluate
11554
11626
280
exists
Apply
false
0
false
CardMonth.values.exists(m => player.hand.cards.count(_.month == m) == 4)

261
src/main/scala/model/Combination.scala
model
TeshiCombination
Object
model.TeshiCombination
evaluate
11554
11570
280
refArrayOps
Apply
false
0
false
CardMonth.values

262
src/main/scala/model/Combination.scala
model
TeshiCombination
Object
model.TeshiCombination
$anonfun
11583
11620
280
count
Apply
false
0
false
player.hand.cards.count(_.month == m)

263
src/main/scala/model/Combination.scala
model
TeshiCombination
Object
model.TeshiCombination
evaluate
11632
11638
280
points
Ident
true
0
false
points

264
src/main/scala/model/Combination.scala
model
TeshiCombination
Object
model.TeshiCombination
evaluate
11644
11645
280
<none>
Literal
true
0
false
0

265
src/main/scala/model/Combination.scala
model
TeshiCombination
Object
model.TeshiCombination
evaluate
11496
11517
279
evaluate
DefDef
false
0
false
override def evaluate

266
src/main/scala/model/Combination.scala
model
KuttsukiCombination
Object
model.KuttsukiCombination
evaluate
12090
12116
293
nonEmpty
Select
false
0
false
player.hand.cards.nonEmpty

267
src/main/scala/model/Combination.scala
model
KuttsukiCombination
Object
model.KuttsukiCombination
evaluate
12120
12199
293
forall
Apply
false
0
false
player.hand.cards.forall(c => player.hand.cards.count(_.month == c.month) == 2)

268
src/main/scala/model/Combination.scala
model
KuttsukiCombination
Object
model.KuttsukiCombination
$anonfun
12150
12193
293
count
Apply
false
0
false
player.hand.cards.count(_.month == c.month)

269
src/main/scala/model/Combination.scala
model
KuttsukiCombination
Object
model.KuttsukiCombination
evaluate
12205
12211
293
points
Ident
true
0
false
points

270
src/main/scala/model/Combination.scala
model
KuttsukiCombination
Object
model.KuttsukiCombination
evaluate
12217
12218
293
<none>
Literal
true
0
false
0

271
src/main/scala/model/Combination.scala
model
KuttsukiCombination
Object
model.KuttsukiCombination
evaluate
12032
12053
292
evaluate
DefDef
false
0
false
override def evaluate

272
src/main/scala/model/Combination.scala
model
Combination$package
Object
model.Combination$package
containsCard
320
422
11
exists
Apply
false
0
false
cards.exists(c => card.cardType == c.cardType && card.cardName == c.cardName && c.month == card.month)

273
src/main/scala/model/Combination.scala
model
Combination$package
Object
model.Combination$package
containsCard
255
271
10
containsCard
DefDef
false
0
false
def containsCard

274
src/main/scala/model/Combination.scala
model
Combination$package
Object
model.Combination$package
<init>
1098
1380
29
apply
Apply
false
0
false
List(\n    GokoCombination, ShikoCombination, AmeShikoCombination,\n    SankoCombination, TsukimiZakeCombination, HanamiZakeCombination,\n    InoshiKachoCombination, TaneCombination, AkatanAotanCombination,\n    AkatanCombination, AotanCombination, TanzakuCombination, KasuCombination\n)

275
src/main/scala/model/Combination.scala
model
Combination$package
Object
model.Combination$package
<init>
1475
1524
37
apply
Apply
false
0
false
List(\n    TeshiCombination, KuttsukiCombination\n)

276
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
449
4222
22
apply
Apply
false
0
false
List(\n        // Index 0 reserved for card back\n        Card(CardMonth.JANUARY, CardType.HIKARI, CardName.CRANE, index = 1),\n        Card(CardMonth.JANUARY, CardType.TANZAKU, CardName.POETRY_TANZAKU, index = 2),\n        Card(CardMonth.JANUARY, CardType.KASU, CardName.PLAIN, index = 3),\n        Card(CardMonth.JANUARY, CardType.KASU, CardName.PLAIN, index = 4),\n\n        Card(CardMonth.FEBRUARY, CardType.TANE, CardName.NIGHTINGALE, index = 5),\n        Card(CardMonth.FEBRUARY, CardType.TANZAKU, CardName.POETRY_TANZAKU, index = 6),\n        Card(CardMonth.FEBRUARY, CardType.KASU, CardName.PLAIN, index = 7),\n        Card(CardMonth.FEBRUARY, CardType.KASU, CardName.PLAIN, index = 8),\n\n        Card(CardMonth.MARCH, CardType.HIKARI, CardName.CURTAIN, index = 9),\n        Card(CardMonth.MARCH, CardType.TANZAKU, CardName.POETRY_TANZAKU, index = 10),\n        Card(CardMonth.MARCH, CardType.KASU, CardName.PLAIN, index = 11),\n        Card(CardMonth.MARCH, CardType.KASU, CardName.PLAIN, index = 12),\n\n        Card(CardMonth.APRIL, CardType.TANE, CardName.CUCKOO, index = 13),\n        Card(CardMonth.APRIL, CardType.TANZAKU, CardName.PLAIN, index = 14),\n        Card(CardMonth.APRIL, CardType.KASU, CardName.PLAIN, index = 15),\n        Card(CardMonth.APRIL, CardType.KASU, CardName.PLAIN, index = 16),\n\n        Card(CardMonth.MAY, CardType.TANE, CardName.BRIDGE, index = 17),\n        Card(CardMonth.MAY, CardType.TANZAKU, CardName.PLAIN, index = 18),\n        Card(CardMonth.MAY, CardType.KASU, CardName.PLAIN, index = 19),\n        Card(CardMonth.MAY, CardType.KASU, CardName.PLAIN, index = 20),\n\n        Card(CardMonth.JUNE, CardType.TANE, CardName.BUTTERFLIES, index = 21),\n        Card(CardMonth.JUNE, CardType.TANZAKU, CardName.BLUE_TANZAKU, index = 22),\n        Card(CardMonth.JUNE, CardType.KASU, CardName.PLAIN, index = 23),\n        Card(CardMonth.JUNE, CardType.KASU, CardName.PLAIN, index = 24),\n\n        Card(CardMonth.JULY, CardType.TANE, CardName.BOAR, index = 25),\n        Card(CardMonth.JULY, CardType.TANZAKU, CardName.PLAIN, index = 26),\n        Card(CardMonth.JULY, CardType.KASU, CardName.PLAIN, index = 27),\n        Card(CardMonth.JULY, CardType.KASU, CardName.PLAIN, index = 28),\n\n        Card(CardMonth.AUGUST, CardType.HIKARI, CardName.MOON, index = 29),\n        Card(CardMonth.AUGUST, CardType.TANE, CardName.GEESE, index = 30),\n        Card(CardMonth.AUGUST, CardType.KASU, CardName.PLAIN, index = 31),\n        Card(CardMonth.AUGUST, CardType.KASU, CardName.PLAIN, index = 32),\n\n        Card(CardMonth.SEPTEMBER, CardType.TANE, CardName.SAKE_CUP, index = 33),\n        Card(CardMonth.SEPTEMBER, CardType.TANZAKU, CardName.BLUE_TANZAKU, index = 34),\n        Card(CardMonth.SEPTEMBER, CardType.KASU, CardName.PLAIN, index = 35),\n        Card(CardMonth.SEPTEMBER, CardType.KASU, CardName.PLAIN, index = 36),\n\n        Card(CardMonth.OCTOBER, CardType.TANE, CardName.DEER, index = 37),\n        Card(CardMonth.OCTOBER, CardType.TANZAKU, CardName.BLUE_TANZAKU, index = 38),\n        Card(CardMonth.OCTOBER, CardType.KASU, CardName.PLAIN, index = 39),\n        Card(CardMonth.OCTOBER, CardType.KASU, CardName.PLAIN, index = 40),\n\n        Card(CardMonth.NOVEMBER, CardType.HIKARI, CardName.RAIN, index = 41),\n        Card(CardMonth.NOVEMBER, CardType.TANE, CardName.SWALLOW, index = 42),\n        Card(CardMonth.NOVEMBER, CardType.TANZAKU, CardName.PLAIN, index = 43),\n        Card(CardMonth.NOVEMBER, CardType.KASU, CardName.LIGHTNING, index = 44),\n\n        Card(CardMonth.DECEMBER, CardType.HIKARI, CardName.PHOENIX, index = 45),\n        Card(CardMonth.DECEMBER, CardType.KASU, CardName.PLAIN, index = 46),\n        Card(CardMonth.DECEMBER, CardType.KASU, CardName.PLAIN, index = 47),\n        Card(CardMonth.DECEMBER, CardType.KASU, CardName.PLAIN, index = 48)\n    )

277
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
505
509
24
$lessinit$greater$default$4
Select
false
0
false
Card

278
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
582
586
25
$lessinit$greater$default$4
Select
false
0
false
Card

279
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
669
673
26
$lessinit$greater$default$4
Select
false
0
false
Card

280
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
744
748
27
$lessinit$greater$default$4
Select
false
0
false
Card

281
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
820
824
29
$lessinit$greater$default$4
Select
false
0
false
Card

282
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
902
906
30
$lessinit$greater$default$4
Select
false
0
false
Card

283
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
990
994
31
$lessinit$greater$default$4
Select
false
0
false
Card

284
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1066
1070
32
$lessinit$greater$default$4
Select
false
0
false
Card

285
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1143
1147
34
$lessinit$greater$default$4
Select
false
0
false
Card

286
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1220
1224
35
$lessinit$greater$default$4
Select
false
0
false
Card

287
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1306
1310
36
$lessinit$greater$default$4
Select
false
0
false
Card

288
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1380
1384
37
$lessinit$greater$default$4
Select
false
0
false
Card

289
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1455
1459
39
$lessinit$greater$default$4
Select
false
0
false
Card

290
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1530
1534
40
$lessinit$greater$default$4
Select
false
0
false
Card

291
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1607
1611
41
$lessinit$greater$default$4
Select
false
0
false
Card

292
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1681
1685
42
$lessinit$greater$default$4
Select
false
0
false
Card

293
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1756
1760
44
$lessinit$greater$default$4
Select
false
0
false
Card

294
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1829
1833
45
$lessinit$greater$default$4
Select
false
0
false
Card

295
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1904
1908
46
$lessinit$greater$default$4
Select
false
0
false
Card

296
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
1976
1980
47
$lessinit$greater$default$4
Select
false
0
false
Card

297
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2049
2053
49
$lessinit$greater$default$4
Select
false
0
false
Card

298
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2128
2132
50
$lessinit$greater$default$4
Select
false
0
false
Card

299
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2211
2215
51
$lessinit$greater$default$4
Select
false
0
false
Card

300
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2284
2288
52
$lessinit$greater$default$4
Select
false
0
false
Card

301
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2358
2362
54
$lessinit$greater$default$4
Select
false
0
false
Card

302
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2430
2434
55
$lessinit$greater$default$4
Select
false
0
false
Card

303
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2506
2510
56
$lessinit$greater$default$4
Select
false
0
false
Card

304
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2579
2583
57
$lessinit$greater$default$4
Select
false
0
false
Card

305
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2653
2657
59
$lessinit$greater$default$4
Select
false
0
false
Card

306
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2729
2733
60
$lessinit$greater$default$4
Select
false
0
false
Card

307
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2804
2808
61
$lessinit$greater$default$4
Select
false
0
false
Card

308
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2879
2883
62
$lessinit$greater$default$4
Select
false
0
false
Card

309
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
2955
2959
64
$lessinit$greater$default$4
Select
false
0
false
Card

310
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3036
3040
65
$lessinit$greater$default$4
Select
false
0
false
Card

311
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3124
3128
66
$lessinit$greater$default$4
Select
false
0
false
Card

312
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3202
3206
67
$lessinit$greater$default$4
Select
false
0
false
Card

313
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3281
3285
69
$lessinit$greater$default$4
Select
false
0
false
Card

314
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3356
3360
70
$lessinit$greater$default$4
Select
false
0
false
Card

315
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3442
3446
71
$lessinit$greater$default$4
Select
false
0
false
Card

316
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3518
3522
72
$lessinit$greater$default$4
Select
false
0
false
Card

317
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3595
3599
74
$lessinit$greater$default$4
Select
false
0
false
Card

318
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3673
3677
75
$lessinit$greater$default$4
Select
false
0
false
Card

319
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3752
3756
76
$lessinit$greater$default$4
Select
false
0
false
Card

320
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3832
3836
77
$lessinit$greater$default$4
Select
false
0
false
Card

321
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3914
3918
79
$lessinit$greater$default$4
Select
false
0
false
Card

322
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
3995
3999
80
$lessinit$greater$default$4
Select
false
0
false
Card

323
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
4072
4076
81
$lessinit$greater$default$4
Select
false
0
false
Card

324
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
4149
4153
82
$lessinit$greater$default$4
Select
false
0
false
Card

325
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
defaultDeck
418
433
22
defaultDeck
DefDef
false
0
false
def defaultDeck

326
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4551
4569
92
isEmpty
Select
false
0
false
deck.cards.isEmpty

327
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4571
4607
92
<none>
Block
true
0
false
{\n            (None, deck)\n        }

328
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4638
4671
95
nextInt
Apply
false
0
false
Random.nextInt(deck.cards.length)

329
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4653
4670
95
length
Select
false
0
false
deck.cards.length

330
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4695
4711
96
apply
Apply
false
0
false
deck.cards(rand)

331
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4742
4779
97
patch
Apply
false
0
false
deck.cards.patch(rand, List.empty, 1)

332
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4765
4775
97
empty
Select
false
0
false
List.empty

333
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4613
4791
94
<none>
Block
true
0
false
{\n            val rand = Random.nextInt(deck.cards.length)\n            val card = deck.cards(rand)\n            (Some(card), Deck(deck.cards.patch(rand, List.empty, 1)))\n        }

334
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
poll
4492
4500
91
poll
DefDef
false
0
false
def poll

335
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
pollMultiple
5142
5443
109
foldLeft
Apply
false
0
false
(1 to n).foldLeft((List.empty[Card], deck)) { case ((cards, currentDeck), _) =>\n            val (polledCard, polledDeck) = poll(currentDeck)\n            polledCard match {\n                case Some(c) => (cards :+ c, polledDeck)\n                case None => (cards, polledDeck)\n            }\n        }

336
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
pollMultiple
5143
5149
109
to
Apply
false
0
false
1 to n

337
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
pollMultiple
5143
5144
109
intWrapper
Apply
false
0
false
1

338
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
pollMultiple
5161
5171
109
empty
Select
false
0
false
List.empty

339
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
$anonfun
5265
5282
110
poll
Apply
false
0
false
poll(currentDeck)

340
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
$anonfun
5262
5262
110
apply
Apply
true
0
false


341
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
$anonfun
5347
5357
112
:+
Apply
false
0
false
cards :+ c

342
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
$anonfun
5343
5370
112
<none>
Block
true
0
false
=> (cards :+ c, polledDeck)

343
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
$anonfun
5397
5419
113
<none>
Block
true
0
false
=> (cards, polledDeck)

344
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
$anonfun
5219
5433
109
<none>
Block
true
0
false
=>\n            val (polledCard, polledDeck) = poll(currentDeck)\n            polledCard match {\n                case Some(c) => (cards :+ c, polledDeck)\n                case None => (cards, polledDeck)\n            }

345
src/main/scala/model/Deck.scala
model
Deck
Object
model.Deck
pollMultiple
5073
5089
108
pollMultiple
DefDef
false
0
false
def pollMultiple

346
src/main/scala/model/Game.scala
model
GameState
Trait
model.GameState
matchedDeck
2101
2116
47
matchedDeck
DefDef
false
0
false
def matchedDeck

347
src/main/scala/model/Game.scala
model
GameState
Trait
model.GameState
queuedCard
2142
2156
48
queuedCard
DefDef
false
0
false
def queuedCard

348
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
updateGameStateWithError
3121
3149
70
updateGameStateWithError
DefDef
false
0
false
def updateGameStateWithError

349
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
updateGameStateWithDisplayType
3377
3411
78
updateGameStateWithDisplayType
DefDef
false
0
false
def updateGameStateWithDisplayType

350
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
3969
3996
91
getOrElse
Apply
false
0
false
xS.toIntOption.getOrElse(0)

351
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
3969
3971
91
augmentString
Apply
false
0
false
xS

352
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
3969
3983
91
toIntOption
Select
false
0
false
xS.toIntOption

353
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4024
4041
92
head
Select
false
0
false
this.players.head

354
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4024
4057
92
size
Select
false
0
false
this.players.head.hand.cards.size

355
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4202
4282
94
exists
Apply
false
0
false
this.board.cards.exists(c => c.month == this.players.head.hand.cards(x-1).month)

356
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
$anonfun
4242
4275
94
apply
Apply
false
0
false
this.players.head.hand.cards(x-1)

357
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
$anonfun
4242
4259
94
head
Select
false
0
false
this.players.head

358
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4302
4399
95
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError("You can not discard a card when it is possible to match, look closer.")

359
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4284
4413
94
<none>
Block
true
0
false
{\n                updateGameStateWithError("You can not discard a card when it is possible to match, look closer.")\n            }

360
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4480
4497
97
head
Select
false
0
false
this.players.head

361
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4515
4562
97
patch
Apply
false
0
false
this.players.head.hand.cards.patch(x-1, Nil, 1)

362
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4515
4532
97
head
Select
false
0
false
this.players.head

363
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4605
4665
98
appended
Apply
false
0
false
this.board.cards.appended(this.players.head.hand.cards(x-1))

364
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4631
4664
98
apply
Apply
false
0
false
this.players.head.hand.cards(x-1)

365
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4631
4648
98
head
Select
false
0
false
this.players.head

366
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4718
4738
99
poll
Apply
false
0
false
Deck.poll(this.deck)

367
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4715
4715
99
apply
Apply
true
0
false


368
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4802
4838
101
apply
Apply
false
0
false
List(updatedPlayer, this.players(1))

369
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4822
4837
101
apply
Apply
false
0
false
this.players(1)

370
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4986
5003
105
get
Select
false
0
false
updatedQueued.get

371
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
5040
5050
106
empty
Select
false
0
false
List.empty

372
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
5087
5108
107
s
Apply
false
0
false
s"Discarded card $x."

373
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4419
5193
96
<none>
Block
true
0
false
{    // Discard is valid\n                val updatedPlayer = this.players.head.copy(hand = Deck(this.players.head.hand.cards.patch(x-1, Nil, 1)))\n                val updatedBoard = Deck(this.board.cards.appended(this.players.head.hand.cards(x-1)))\n                val (updatedQueued, updatedDeck) = Deck.poll(this.deck)\n                GameStateRandom(\n                    players = List(updatedPlayer, this.players(1)),\n                    board = updatedBoard,\n                    deck = updatedDeck,\n                    stderr = None,\n                    queued = updatedQueued.get,\n                    matched = Deck(List.empty),\n                    stdout = Some(s"Discarded card $x."),\n                    displayType = DisplayType.GAME\n                )\n            }

374
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
4059
5203
92
<none>
Block
true
0
false
{  // Selected card has to be valid\n            /* Discarding a card is only possible if there is no matching card on board */\n            if (this.board.cards.exists(c => c.month == this.players.head.hand.cards(x-1).month)) {\n                updateGameStateWithError("You can not discard a card when it is possible to match, look closer.")\n            } else {    // Discard is valid\n                val updatedPlayer = this.players.head.copy(hand = Deck(this.players.head.hand.cards.patch(x-1, Nil, 1)))\n                val updatedBoard = Deck(this.board.cards.appended(this.players.head.hand.cards(x-1)))\n                val (updatedQueued, updatedDeck) = Deck.poll(this.deck)\n                GameStateRandom(\n                    players = List(updatedPlayer, this.players(1)),\n                    board = updatedBoard,\n                    deck = updatedDeck,\n                    stderr = None,\n                    queued = updatedQueued.get,\n                    matched = Deck(List.empty),\n                    stdout = Some(s"Discarded card $x."),\n                    displayType = DisplayType.GAME\n                )\n            }\n        }

375
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
5294
5371
112
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError("You have to provide a valid number, see \\"help\\".")

376
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
5209
5381
111
<none>
Block
true
0
false
{    // Discard is not valid since xS is either invalid or out of bounds\n            updateGameStateWithError("You have to provide a valid number, see \\"help\\".")\n        }

377
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleDiscard
3899
3925
90
handleDiscard
DefDef
false
0
false
override def handleDiscard

378
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
5891
5918
124
getOrElse
Apply
false
0
false
xS.toIntOption.getOrElse(0)

379
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
5891
5893
124
augmentString
Apply
false
0
false
xS

380
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
5891
5905
124
toIntOption
Select
false
0
false
xS.toIntOption

381
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
5935
5962
125
getOrElse
Apply
false
0
false
yS.toIntOption.getOrElse(0)

382
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
5935
5937
125
augmentString
Apply
false
0
false
yS

383
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
5935
5949
125
toIntOption
Select
false
0
false
yS.toIntOption

384
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6031
6052
128
size
Select
false
0
false
this.board.cards.size

385
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6060
6077
128
head
Select
false
0
false
this.players.head

386
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6060
6093
128
size
Select
false
0
false
this.players.head.hand.cards.size

387
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6109
6185
129
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError("You have to provide valid numbers, see \\"help\\".")

388
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6095
6195
128
<none>
Block
true
0
false
{\n            updateGameStateWithError("You have to provide valid numbers, see \\"help\\".")\n        }

389
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6219
6254
131
apply
Apply
false
0
false
this.players.head.hand.cards(x - 1)

390
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6219
6236
131
head
Select
false
0
false
this.players.head

391
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6264
6287
131
apply
Apply
false
0
false
this.board.cards(y - 1)

392
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6366
6386
132
poll
Apply
false
0
false
Deck.poll(this.deck)

393
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6363
6363
132
apply
Apply
true
0
false


394
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6407
6430
133
apply
Apply
false
0
false
this.board.cards(y - 1)

395
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6508
6839
134
apply
Apply
false
0
false
List(this.players.head.copy(\n                        hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1)),\n                        side = Deck(List(this.players.head.hand.cards(x - 1)).appendedAll(this.board.cards.filter(c => c.month == this.players.head.hand.cards(x - 1).month)))\n                    ), this.players(1))

396
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6513
6530
134
head
Select
false
0
false
this.players.head

397
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6573
6622
135
patch
Apply
false
0
false
this.players.head.hand.cards.patch(x - 1, Nil, 1)

398
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6573
6590
135
head
Select
false
0
false
this.players.head

399
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6661
6798
136
appendedAll
Apply
false
0
false
List(this.players.head.hand.cards(x - 1)).appendedAll(this.board.cards.filter(c => c.month == this.players.head.hand.cards(x - 1).month))

400
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6661
6702
136
apply
Apply
false
0
false
List(this.players.head.hand.cards(x - 1))

401
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6666
6701
136
apply
Apply
false
0
false
this.players.head.hand.cards(x - 1)

402
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6666
6683
136
head
Select
false
0
false
this.players.head

403
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6715
6797
136
filter
Apply
false
0
false
this.board.cards.filter(c => c.month == this.players.head.hand.cards(x - 1).month)

404
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
$anonfun
6755
6790
136
apply
Apply
false
0
false
this.players.head.hand.cards(x - 1)

405
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
$anonfun
6755
6772
136
head
Select
false
0
false
this.players.head

406
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6823
6838
137
apply
Apply
false
0
false
this.players(1)

407
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6964
7049
140
filterNot
Apply
false
0
false
this.board.cards.filterNot(c => c.month == this.players.head.hand.cards(x - 1).month)

408
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
$anonfun
7007
7042
140
apply
Apply
false
0
false
this.players.head.hand.cards(x - 1)

409
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
$anonfun
7007
7024
140
head
Select
false
0
false
this.players.head

410
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7090
7162
141
s
Apply
false
0
false
s"Matched a whole month (${this.players.head.hand.cards(x - 1).month})."

411
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7117
7152
141
apply
Apply
false
0
false
this.players.head.hand.cards(x - 1)

412
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7117
7134
141
head
Select
false
0
false
this.players.head

413
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7287
7297
144
empty
Select
false
0
false
List.empty

414
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7333
7350
145
get
Select
false
0
false
updatedQueued.get

415
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6440
7446
133
<none>
Block
true
0
false
{ // Collect a whole month\n                    val updatedPlayers = List(this.players.head.copy(\n                        hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1)),\n                        side = Deck(List(this.players.head.hand.cards(x - 1)).appendedAll(this.board.cards.filter(c => c.month == this.players.head.hand.cards(x - 1).month)))\n                    ), this.players(1))\n                    GameStateRandom(\n                        players = updatedPlayers,\n                        board = Deck(this.board.cards.filterNot(c => c.month == this.players.head.hand.cards(x - 1).month)),\n                        stdout = Some(s"Matched a whole month (${this.players.head.hand.cards(x - 1).month})."),\n                        stderr = None,\n                        deck = updatedDeck,\n                        matched = Deck(List.empty),\n                        queued = updatedQueued.get,\n                        displayType = DisplayType.GAME\n                    )\n                }

416
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7517
7583
149
apply
Apply
false
0
false
List(this.players.head.hand.cards(x - 1), this.board.cards(y - 1))

417
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7522
7557
149
apply
Apply
false
0
false
this.players.head.hand.cards(x - 1)

418
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7522
7539
149
head
Select
false
0
false
this.players.head

419
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7559
7582
149
apply
Apply
false
0
false
this.board.cards(y - 1)

420
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7629
7666
150
patch
Apply
false
0
false
this.board.cards.patch(y - 1, Nil, 1)

421
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7709
7818
151
apply
Apply
false
0
false
List(this.players.head.copy(hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1))), this.players(1))

422
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7714
7731
151
head
Select
false
0
false
this.players.head

423
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7749
7798
151
patch
Apply
false
0
false
this.players.head.hand.cards.patch(x - 1, Nil, 1)

424
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7749
7766
151
head
Select
false
0
false
this.players.head

425
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7802
7817
151
apply
Apply
false
0
false
this.players(1)

426
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8040
8062
156
s
Apply
false
0
false
s"Matched $x with $y."

427
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8181
8198
159
get
Select
false
0
false
updatedQueued.get

428
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
7452
8294
148
<none>
Block
true
0
false
{ // Default match\n                    val updatedMatched = Deck(List(this.players.head.hand.cards(x - 1), this.board.cards(y - 1)))\n                    val updatedBoard = Deck(this.board.cards.patch(y - 1, Nil, 1))\n                    val updatedPlayers = List(this.players.head.copy(hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1))), this.players(1))\n                    GameStateRandom(\n                        players = updatedPlayers,\n                        board = updatedBoard,\n                        matched = updatedMatched,\n                        stdout = Some(s"Matched $x with $y."),\n                        stderr = None,\n                        deck = updatedDeck,\n                        queued = updatedQueued.get,\n                        displayType = DisplayType.GAME\n                    )\n                }

429
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6295
8308
131
<none>
Block
true
0
false
{ // Match is valid\n                val (updatedQueued, updatedDeck) = Deck.poll(this.deck)\n                if (this.board.cards(y - 1).grouped) { // Collect a whole month\n                    val updatedPlayers = List(this.players.head.copy(\n                        hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1)),\n                        side = Deck(List(this.players.head.hand.cards(x - 1)).appendedAll(this.board.cards.filter(c => c.month == this.players.head.hand.cards(x - 1).month)))\n                    ), this.players(1))\n                    GameStateRandom(\n                        players = updatedPlayers,\n                        board = Deck(this.board.cards.filterNot(c => c.month == this.players.head.hand.cards(x - 1).month)),\n                        stdout = Some(s"Matched a whole month (${this.players.head.hand.cards(x - 1).month})."),\n                        stderr = None,\n                        deck = updatedDeck,\n                        matched = Deck(List.empty),\n                        queued = updatedQueued.get,\n                        displayType = DisplayType.GAME\n                    )\n                } else { // Default match\n                    val updatedMatched = Deck(List(this.players.head.hand.cards(x - 1), this.board.cards(y - 1)))\n                    val updatedBoard = Deck(this.board.cards.patch(y - 1, Nil, 1))\n                    val updatedPlayers = List(this.players.head.copy(hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1))), this.players(1))\n                    GameStateRandom(\n                        players = updatedPlayers,\n                        board = updatedBoard,\n                        matched = updatedMatched,\n                        stdout = Some(s"Matched $x with $y."),\n                        stderr = None,\n                        deck = updatedDeck,\n                        queued = updatedQueued.get,\n                        displayType = DisplayType.GAME\n                    )\n                }\n            }

430
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8373
8530
164
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError(s"You can not match cards of different months (${this.players.head.hand.cards(x - 1).month} and ${this.board.cards(y - 1).month}).")

431
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8398
8529
164
s
Apply
false
0
false
s"You can not match cards of different months (${this.players.head.hand.cards(x - 1).month} and ${this.board.cards(y - 1).month})."

432
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8447
8482
164
apply
Apply
false
0
false
this.players.head.hand.cards(x - 1)

433
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8447
8464
164
head
Select
false
0
false
this.players.head

434
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8496
8519
164
apply
Apply
false
0
false
this.board.cards(y - 1)

435
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
8314
8544
163
<none>
Block
true
0
false
{ // Match is not valid (different months)\n                updateGameStateWithError(s"You can not match cards of different months (${this.players.head.hand.cards(x - 1).month} and ${this.board.cards(y - 1).month}).")\n            }

436
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
6201
8554
130
<none>
Block
true
0
false
{\n            if (this.players.head.hand.cards(x - 1).month == this.board.cards(y - 1).month) { // Match is valid\n                val (updatedQueued, updatedDeck) = Deck.poll(this.deck)\n                if (this.board.cards(y - 1).grouped) { // Collect a whole month\n                    val updatedPlayers = List(this.players.head.copy(\n                        hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1)),\n                        side = Deck(List(this.players.head.hand.cards(x - 1)).appendedAll(this.board.cards.filter(c => c.month == this.players.head.hand.cards(x - 1).month)))\n                    ), this.players(1))\n                    GameStateRandom(\n                        players = updatedPlayers,\n                        board = Deck(this.board.cards.filterNot(c => c.month == this.players.head.hand.cards(x - 1).month)),\n                        stdout = Some(s"Matched a whole month (${this.players.head.hand.cards(x - 1).month})."),\n                        stderr = None,\n                        deck = updatedDeck,\n                        matched = Deck(List.empty),\n                        queued = updatedQueued.get,\n                        displayType = DisplayType.GAME\n                    )\n                } else { // Default match\n                    val updatedMatched = Deck(List(this.players.head.hand.cards(x - 1), this.board.cards(y - 1)))\n                    val updatedBoard = Deck(this.board.cards.patch(y - 1, Nil, 1))\n                    val updatedPlayers = List(this.players.head.copy(hand = Deck(this.players.head.hand.cards.patch(x - 1, Nil, 1))), this.players(1))\n                    GameStateRandom(\n                        players = updatedPlayers,\n                        board = updatedBoard,\n                        matched = updatedMatched,\n                        stdout = Some(s"Matched $x with $y."),\n                        stderr = None,\n                        deck = updatedDeck,\n                        queued = updatedQueued.get,\n                        displayType = DisplayType.GAME\n                    )\n                }\n            } else { // Match is not valid (different months)\n                updateGameStateWithError(s"You can not match cards of different months (${this.players.head.hand.cards(x - 1).month} and ${this.board.cards(y - 1).month}).")\n            }\n        }

437
src/main/scala/model/Game.scala
model
GameStatePlanned
Class
model.GameStatePlanned
handleMatch
5811
5835
123
handleMatch
DefDef
false
0
false
override def handleMatch

438
src/main/scala/model/Game.scala
model
GameStatePlanned
Object
model.GameStatePlanned
$lessinit$greater$default$4
2925
2925
65
$lessinit$greater$default$4
DefDef
false
0
false


439
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
matchedDeck
9405
9429
186
matchedDeck
DefDef
false
0
false
override def matchedDeck

440
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
queuedCard
9464
9487
187
queuedCard
DefDef
false
0
false
override def queuedCard

441
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
updateGameStateWithDisplayType
9639
9673
193
updateGameStateWithDisplayType
DefDef
false
0
false
def updateGameStateWithDisplayType

442
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
updateGameStateWithError
9869
9897
201
updateGameStateWithError
DefDef
false
0
false
def updateGameStateWithError

443
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10593
10651
215
exists
Apply
false
0
false
this.board.cards.exists(c => c.month == this.queued.month)

444
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10667
10764
216
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError("You can not discard a card when it is possible to match, look closer.")

445
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10653
10774
215
<none>
Block
true
0
false
{\n            updateGameStateWithError("You can not discard a card when it is possible to match, look closer.")\n        }

446
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10838
10988
218
apply
Apply
false
0
false
List(this.players(1), this.players.head.copy(\n                side = Deck(this.players.head.side.cards.appendedAll(this.matched.cards))\n            ))

447
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10843
10858
218
apply
Apply
false
0
false
this.players(1)

448
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10860
10877
218
head
Select
false
0
false
this.players.head

449
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10912
10972
219
appendedAll
Apply
false
0
false
this.players.head.side.cards.appendedAll(this.matched.cards)

450
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10912
10929
219
head
Select
false
0
false
this.players.head

451
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11025
11063
221
appended
Apply
false
0
false
this.board.cards.appended(this.queued)

452
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11190
11213
223
isEmpty
Select
false
0
false
this.deck.cards.isEmpty

453
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11233
11252
224
head
Select
false
0
false
updatedPlayers.head

454
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11233
11271
224
isEmpty
Select
false
0
false
updatedPlayers.head.hand.cards.isEmpty

455
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11275
11292
224
apply
Apply
false
0
false
updatedPlayers(1)

456
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11275
11311
224
isEmpty
Select
false
0
false
updatedPlayers(1).hand.cards.isEmpty

457
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11331
11469
225
handleKoiKoi
Apply
false
0
false
GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, board = updatedBoard, deck = this.deck, true)

458
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11372
11391
225
head
Select
false
0
false
updatedPlayers.head

459
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11399
11416
225
apply
Apply
false
0
false
updatedPlayers(1)

460
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11313
11483
224
<none>
Block
true
0
false
{\n                GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, board = updatedBoard, deck = this.deck, true)\n            }

461
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11493
11546
226
playerHasScoredNewYaku
Apply
false
0
false
GameManager.playerHasScoredNewYaku(updatedPlayers(1))

462
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11528
11545
226
apply
Apply
false
0
false
updatedPlayers(1)

463
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11611
11761
227
koiKoiHandler
Apply
false
0
false
GameManager.koiKoiHandler(this.copy(\n                    players = updatedPlayers.reverse,\n                    board = updatedBoard\n                ))

464
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11678
11700
228
reverse
Select
false
0
false
updatedPlayers.reverse

465
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11548
11775
226
<none>
Block
true
0
false
{    /* Check if a player has scored a yaku */\n                GameManager.koiKoiHandler(this.copy(\n                    players = updatedPlayers.reverse,\n                    board = updatedBoard\n                ))\n            }

466
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11781
12149
231
<none>
Block
true
0
false
{    /* Discard as usual */\n                GameStatePlanned(\n                    deck = this.deck,\n                    players = updatedPlayers,\n                    board = updatedBoard,\n                    stdout = Some("Discarded drawn card."),\n                    stderr = None,\n                    displayType = DisplayType.SPOILER\n                )\n            }

467
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
11489
12149
226
<none>
If
true
0
false
if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {    /* Check if a player has scored a yaku */\n                GameManager.koiKoiHandler(this.copy(\n                    players = updatedPlayers.reverse,\n                    board = updatedBoard\n                ))\n            } else {    /* Discard as usual */\n                GameStatePlanned(\n                    deck = this.deck,\n                    players = updatedPlayers,\n                    board = updatedBoard,\n                    stdout = Some("Discarded drawn card."),\n                    stderr = None,\n                    displayType = DisplayType.SPOILER\n                )\n            }

468
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10780
12159
217
<none>
Block
true
0
false
{    // Discard is valid\n            val updatedPlayers = List(this.players(1), this.players.head.copy(\n                side = Deck(this.players.head.side.cards.appendedAll(this.matched.cards))\n            ))\n            val updatedBoard = Deck(this.board.cards.appended(this.queued))\n            /* Evaluate the score for the current state if either the deck or both players hand are empty */\n            if (this.deck.cards.isEmpty\n                || updatedPlayers.head.hand.cards.isEmpty && updatedPlayers(1).hand.cards.isEmpty) {\n                GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, board = updatedBoard, deck = this.deck, true)\n            } else if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {    /* Check if a player has scored a yaku */\n                GameManager.koiKoiHandler(this.copy(\n                    players = updatedPlayers.reverse,\n                    board = updatedBoard\n                ))\n            } else {    /* Discard as usual */\n                GameStatePlanned(\n                    deck = this.deck,\n                    players = updatedPlayers,\n                    board = updatedBoard,\n                    stdout = Some("Discarded drawn card."),\n                    stderr = None,\n                    displayType = DisplayType.SPOILER\n                )\n            }\n        }

469
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleDiscard
10440
10466
213
handleDiscard
DefDef
false
0
false
override def handleDiscard

470
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12665
12692
252
getOrElse
Apply
false
0
false
yS.toIntOption.getOrElse(0)

471
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12665
12667
252
augmentString
Apply
false
0
false
yS

472
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12665
12679
252
toIntOption
Select
false
0
false
yS.toIntOption

473
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12752
12773
255
size
Select
false
0
false
this.board.cards.size

474
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12789
12866
256
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError("You have to provide a valid number, see \\"help\\".")

475
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12775
12876
255
<none>
Block
true
0
false
{\n            updateGameStateWithError("You have to provide a valid number, see \\"help\\".")\n        }

476
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12921
12944
258
apply
Apply
false
0
false
this.board.cards(y - 1)

477
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13053
13076
260
apply
Apply
false
0
false
this.board.cards(y - 1)

478
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13129
13476
261
apply
Apply
false
0
false
List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appended(this.queued)\n                            .appendedAll(this.matched.cards)\n                            .appendedAll(this.board.cards.filter(c => c.month == this.queued.month)))\n                    ))

479
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13134
13149
261
apply
Apply
false
0
false
this.players(1)

480
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13151
13168
261
head
Select
false
0
false
this.players.head

481
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13211
13452
265
appendedAll
Apply
false
0
false
this.players.head.side.cards\n                            .appended(this.queued)\n                            .appendedAll(this.matched.cards)\n                            .appendedAll(this.board.cards.filter(c => c.month == this.queued.month))

482
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13211
13351
264
appendedAll
Apply
false
0
false
this.players.head.side.cards\n                            .appended(this.queued)\n                            .appendedAll(this.matched.cards)

483
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13211
13290
263
appended
Apply
false
0
false
this.players.head.side.cards\n                            .appended(this.queued)

484
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13211
13228
262
head
Select
false
0
false
this.players.head

485
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13393
13451
265
filter
Apply
false
0
false
this.board.cards.filter(c => c.month == this.queued.month)

486
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13521
13582
267
filterNot
Apply
false
0
false
this.board.cards.filterNot(c => c.month == this.queued.month)

487
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13725
13748
269
isEmpty
Select
false
0
false
this.deck.cards.isEmpty

488
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13776
13795
270
head
Select
false
0
false
updatedPlayers.head

489
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13776
13814
270
isEmpty
Select
false
0
false
updatedPlayers.head.hand.cards.isEmpty

490
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13818
13835
270
apply
Apply
false
0
false
updatedPlayers(1)

491
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13818
13854
270
isEmpty
Select
false
0
false
updatedPlayers(1).hand.cards.isEmpty

492
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13923
13942
271
head
Select
false
0
false
updatedPlayers.head

493
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13950
13967
271
apply
Apply
false
0
false
updatedPlayers(1)

494
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13882
14020
271
handleKoiKoi
Apply
false
0
false
GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)

495
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13856
14042
270
<none>
Block
true
0
false
{\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    }

496
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14052
14105
272
playerHasScoredNewYaku
Apply
false
0
false
GameManager.playerHasScoredNewYaku(updatedPlayers(1))

497
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14087
14104
272
apply
Apply
false
0
false
updatedPlayers(1)

498
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14178
14352
273
koiKoiHandler
Apply
false
0
false
GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))

499
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14253
14275
274
reverse
Select
false
0
false
updatedPlayers.reverse

500
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14107
14374
272
<none>
Block
true
0
false
{    /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    }

501
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14655
14703
282
s
Apply
false
0
false
s"Matched a whole month (${this.queued.month})."

502
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14380
14858
277
<none>
Block
true
0
false
{    /* State after whole month match */\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched a whole month (${this.queued.month})."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }

503
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14048
14858
272
<none>
If
true
0
false
if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {    /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {    /* State after whole month match */\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched a whole month (${this.queued.month})."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }

504
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
13086
14876
260
<none>
Block
true
0
false
{\n                    val updatedPlayers = List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appended(this.queued)\n                            .appendedAll(this.matched.cards)\n                            .appendedAll(this.board.cards.filter(c => c.month == this.queued.month)))\n                    ))\n                    val updatedBoard = Deck(this.board.cards.filterNot(c => c.month == this.queued.month))\n                    /* Evaluate the score for the current state if either the deck or both players hand are empty */\n                    if (this.deck.cards.isEmpty\n                        || updatedPlayers.head.hand.cards.isEmpty && updatedPlayers(1).hand.cards.isEmpty) {\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    } else if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {    /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {    /* State after whole month match */\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched a whole month (${this.queued.month})."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }\n                }

505
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14942
15222
288
apply
Apply
false
0
false
List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appendedAll(List(this.queued, this.board.cards(y - 1)))\n                            .appendedAll(this.matched.cards))\n                    ))

506
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14947
14962
288
apply
Apply
false
0
false
this.players(1)

507
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14964
14981
288
head
Select
false
0
false
this.players.head

508
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15024
15198
291
appendedAll
Apply
false
0
false
this.players.head.side.cards\n                            .appendedAll(List(this.queued, this.board.cards(y - 1)))\n                            .appendedAll(this.matched.cards)

509
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15024
15137
290
appendedAll
Apply
false
0
false
this.players.head.side.cards\n                            .appendedAll(List(this.queued, this.board.cards(y - 1)))

510
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15024
15041
289
head
Select
false
0
false
this.players.head

511
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15094
15136
290
apply
Apply
false
0
false
List(this.queued, this.board.cards(y - 1))

512
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15112
15135
290
apply
Apply
false
0
false
this.board.cards(y - 1)

513
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15267
15304
293
patch
Apply
false
0
false
this.board.cards.patch(y - 1, Nil, 1)

514
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15447
15470
295
isEmpty
Select
false
0
false
this.deck.cards.isEmpty

515
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15498
15517
296
head
Select
false
0
false
updatedPlayers.head

516
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15498
15536
296
isEmpty
Select
false
0
false
updatedPlayers.head.hand.cards.isEmpty

517
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15540
15557
296
apply
Apply
false
0
false
updatedPlayers(1)

518
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15540
15576
296
isEmpty
Select
false
0
false
updatedPlayers(1).hand.cards.isEmpty

519
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15645
15664
297
head
Select
false
0
false
updatedPlayers.head

520
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15672
15689
297
apply
Apply
false
0
false
updatedPlayers(1)

521
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15604
15742
297
handleKoiKoi
Apply
false
0
false
GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)

522
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15578
15764
296
<none>
Block
true
0
false
{\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    }

523
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15774
15827
298
playerHasScoredNewYaku
Apply
false
0
false
GameManager.playerHasScoredNewYaku(updatedPlayers(1))

524
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15809
15826
298
apply
Apply
false
0
false
updatedPlayers(1)

525
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15902
16076
299
koiKoiHandler
Apply
false
0
false
GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))

526
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15977
15999
300
reverse
Select
false
0
false
updatedPlayers.reverse

527
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15829
16098
298
<none>
Block
true
0
false
{      /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    }

528
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
16340
16370
308
s
Apply
false
0
false
s"Matched drawn card with $y."

529
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
16104
16525
303
<none>
Block
true
0
false
{\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched drawn card with $y."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }

530
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
15770
16525
298
<none>
If
true
0
false
if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {      /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched drawn card with $y."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }

531
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
14882
16543
287
<none>
Block
true
0
false
{ // Default match\n                    val updatedPlayers = List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appendedAll(List(this.queued, this.board.cards(y - 1)))\n                            .appendedAll(this.matched.cards))\n                    ))\n                    val updatedBoard = Deck(this.board.cards.patch(y - 1, Nil, 1))\n                    /* Evaluate the score for the current state if either the deck or both players hand are empty */\n                    if (this.deck.cards.isEmpty\n                        || updatedPlayers.head.hand.cards.isEmpty && updatedPlayers(1).hand.cards.isEmpty) {\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    } else if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {      /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched drawn card with $y."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }\n                }

532
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12952
16557
258
<none>
Block
true
0
false
{ // Valid match\n                /* Check if a whole month has been collected */\n                if (this.board.cards(y - 1).grouped) {\n                    val updatedPlayers = List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appended(this.queued)\n                            .appendedAll(this.matched.cards)\n                            .appendedAll(this.board.cards.filter(c => c.month == this.queued.month)))\n                    ))\n                    val updatedBoard = Deck(this.board.cards.filterNot(c => c.month == this.queued.month))\n                    /* Evaluate the score for the current state if either the deck or both players hand are empty */\n                    if (this.deck.cards.isEmpty\n                        || updatedPlayers.head.hand.cards.isEmpty && updatedPlayers(1).hand.cards.isEmpty) {\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    } else if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {    /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {    /* State after whole month match */\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched a whole month (${this.queued.month})."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }\n                } else { // Default match\n                    val updatedPlayers = List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appendedAll(List(this.queued, this.board.cards(y - 1)))\n                            .appendedAll(this.matched.cards))\n                    ))\n                    val updatedBoard = Deck(this.board.cards.patch(y - 1, Nil, 1))\n                    /* Evaluate the score for the current state if either the deck or both players hand are empty */\n                    if (this.deck.cards.isEmpty\n                        || updatedPlayers.head.hand.cards.isEmpty && updatedPlayers(1).hand.cards.isEmpty) {\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    } else if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {      /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched drawn card with $y."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }\n                }\n            }

533
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
16603
16736
315
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError(s"You can not match cards of different months (${this.queued.month} and ${this.board.cards(y - 1).month}).")

534
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
16628
16735
315
s
Apply
false
0
false
s"You can not match cards of different months (${this.queued.month} and ${this.board.cards(y - 1).month})."

535
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
16702
16725
315
apply
Apply
false
0
false
this.board.cards(y - 1)

536
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
16563
16750
314
<none>
Block
true
0
false
{ // Match is not valid\n                updateGameStateWithError(s"You can not match cards of different months (${this.queued.month} and ${this.board.cards(y - 1).month}).")\n            }

537
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12882
16760
257
<none>
Block
true
0
false
{\n            if (this.queued.month == this.board.cards(y - 1).month) { // Valid match\n                /* Check if a whole month has been collected */\n                if (this.board.cards(y - 1).grouped) {\n                    val updatedPlayers = List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appended(this.queued)\n                            .appendedAll(this.matched.cards)\n                            .appendedAll(this.board.cards.filter(c => c.month == this.queued.month)))\n                    ))\n                    val updatedBoard = Deck(this.board.cards.filterNot(c => c.month == this.queued.month))\n                    /* Evaluate the score for the current state if either the deck or both players hand are empty */\n                    if (this.deck.cards.isEmpty\n                        || updatedPlayers.head.hand.cards.isEmpty && updatedPlayers(1).hand.cards.isEmpty) {\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    } else if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {    /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {    /* State after whole month match */\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched a whole month (${this.queued.month})."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }\n                } else { // Default match\n                    val updatedPlayers = List(this.players(1), this.players.head.copy(\n                        side = Deck(this.players.head.side.cards\n                            .appendedAll(List(this.queued, this.board.cards(y - 1)))\n                            .appendedAll(this.matched.cards))\n                    ))\n                    val updatedBoard = Deck(this.board.cards.patch(y - 1, Nil, 1))\n                    /* Evaluate the score for the current state if either the deck or both players hand are empty */\n                    if (this.deck.cards.isEmpty\n                        || updatedPlayers.head.hand.cards.isEmpty && updatedPlayers(1).hand.cards.isEmpty) {\n                        GameManager.handleKoiKoi(updatedPlayers, updatedPlayers.head.score, updatedPlayers(1).score, deck = this.deck, board = updatedBoard, true)\n                    } else if (GameManager.playerHasScoredNewYaku(updatedPlayers(1))) {      /* Check if a player has scored a yaku */\n                        GameManager.koiKoiHandler(this.copy(\n                            players = updatedPlayers.reverse,\n                            board = updatedBoard\n                        ))\n                    } else {\n                        GameStatePlanned(\n                            deck = this.deck,\n                            players = updatedPlayers,\n                            board = updatedBoard,\n                            stdout = Some(s"Matched drawn card with $y."),\n                            stderr = None,\n                            displayType = DisplayType.SPOILER\n                        )\n                    }\n                }\n            } else { // Match is not valid\n                updateGameStateWithError(s"You can not match cards of different months (${this.queued.month} and ${this.board.cards(y - 1).month}).")\n            }\n        }

538
src/main/scala/model/Game.scala
model
GameStateRandom
Class
model.GameStateRandom
handleMatch
12585
12609
251
handleMatch
DefDef
false
0
false
override def handleMatch

539
src/main/scala/model/Game.scala
model
GameStateRandom
Object
model.GameStateRandom
$lessinit$greater$default$6
9215
9215
182
$lessinit$greater$default$6
DefDef
false
0
false


540
src/main/scala/model/Game.scala
model
GameStatePendingKoiKoi
Class
model.GameStatePendingKoiKoi
updateGameStateWithDisplayType
17513
17547
336
updateGameStateWithDisplayType
DefDef
false
0
false
def updateGameStateWithDisplayType

541
src/main/scala/model/Game.scala
model
GameStatePendingKoiKoi
Class
model.GameStatePendingKoiKoi
updateGameStateWithError
17742
17770
344
updateGameStateWithError
DefDef
false
0
false
def updateGameStateWithError

542
src/main/scala/model/Game.scala
model
GameStatePendingKoiKoi
Class
model.GameStatePendingKoiKoi
handleDiscard
18133
18216
353
updateGameStateWithError
Apply
false
0
false
this.updateGameStateWithError("You have to either call \\"koi-koi\\" or \\"finish\\".")

543
src/main/scala/model/Game.scala
model
GameStatePendingKoiKoi
Class
model.GameStatePendingKoiKoi
handleDiscard
18071
18097
352
handleDiscard
DefDef
false
0
false
override def handleDiscard

544
src/main/scala/model/Game.scala
model
GameStatePendingKoiKoi
Class
model.GameStatePendingKoiKoi
handleMatch
18456
18539
361
updateGameStateWithError
Apply
false
0
false
this.updateGameStateWithError("You have to either call \\"koi-koi\\" or \\"finish\\".")

545
src/main/scala/model/Game.scala
model
GameStatePendingKoiKoi
Class
model.GameStatePendingKoiKoi
handleMatch
18384
18408
360
handleMatch
DefDef
false
0
false
override def handleMatch

546
src/main/scala/model/Game.scala
model
GameStatePendingKoiKoi
Object
model.GameStatePendingKoiKoi
$lessinit$greater$default$4
17306
17306
331
$lessinit$greater$default$4
DefDef
false
0
false


547
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
matchedDeck
19201
19225
377
matchedDeck
DefDef
false
0
false
override def matchedDeck

548
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
queuedCard
19251
19274
378
queuedCard
DefDef
false
0
false
override def queuedCard

549
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
handleMatch
19485
19563
384
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError("You first have to create a new game, see \\"help\\".")

550
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
handleMatch
19423
19447
384
handleMatch
DefDef
false
0
false
override def handleMatch

551
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
handleDiscard
19747
19825
390
updateGameStateWithError
Apply
false
0
false
updateGameStateWithError("You first have to create a new game, see \\"help\\".")

552
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
handleDiscard
19695
19721
390
handleDiscard
DefDef
false
0
false
override def handleDiscard

553
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
updateGameStateWithError
19936
19973
396
updateGameStateWithError
DefDef
false
0
false
override def updateGameStateWithError

554
src/main/scala/model/Game.scala
model
GameStateSummary
Class
model.GameStateSummary
updateGameStateWithDisplayType
20185
20228
402
updateGameStateWithDisplayType
DefDef
false
0
false
override def updateGameStateWithDisplayType

555
src/main/scala/model/Game.scala
model
GameStateSummary
Object
model.GameStateSummary
$lessinit$greater$default$7
19170
19170
376
$lessinit$greater$default$7
DefDef
false
0
false


556
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
players
20707
20717
413
empty
Select
false
0
false
List.empty

557
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
players
20670
20690
413
players
DefDef
false
0
false
override def players

558
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
deck
20753
20763
414
empty
Select
false
0
false
List.empty

559
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
deck
20722
20739
414
deck
DefDef
false
0
false
override def deck

560
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
board
20801
20811
415
empty
Select
false
0
false
List.empty

561
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
board
20769
20787
415
board
DefDef
false
0
false
override def board

562
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
stdout
20817
20836
416
stdout
DefDef
false
0
false
override def stdout

563
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
handleMatch
20993
21017
422
handleMatch
DefDef
false
0
false
override def handleMatch

564
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
handleDiscard
21261
21287
430
handleDiscard
DefDef
false
0
false
override def handleDiscard

565
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
updateGameStateWithError
21492
21529
438
updateGameStateWithError
DefDef
false
0
false
override def updateGameStateWithError

566
src/main/scala/model/Game.scala
model
GameStateUninitialized
Class
model.GameStateUninitialized
updateGameStateWithDisplayType
21742
21785
446
updateGameStateWithDisplayType
DefDef
false
0
false
override def updateGameStateWithDisplayType

567
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
981
1021
24
pollMultiple
Apply
false
0
false
Deck.pollMultiple(Deck.defaultDeck(), 8)

568
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
999
1017
24
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

569
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
978
978
24
apply
Apply
true
0
false


570
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1054
1088
25
getOrElse
Apply
false
0
false
customBoard.getOrElse(polledBoard)

571
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1167
1239
28
exists
Apply
false
0
false
actualPolledBoard.groupBy(_.month).exists((_, cards) => cards.size >= 4)

572
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1167
1201
28
groupBy
Apply
false
0
false
actualPolledBoard.groupBy(_.month)

573
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
1223
1233
28
size
Select
false
0
false
cards.size

574
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1255
1314
29
newGame
Apply
false
0
false
newGame(firstPlayer, secondPlayer, firstScore, secondScore)

575
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1255
1262
29
newGame$default$5
Select
false
0
false
newGame

576
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1255
1262
29
newGame$default$6
Select
false
0
false
newGame

577
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1255
1262
29
newGame$default$7
Select
false
0
false
newGame

578
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1241
1324
28
<none>
Block
true
0
false
{\n            newGame(firstPlayer, secondPlayer, firstScore, secondScore)\n        }

579
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1472
1594
32
collect
Apply
false
0
false
actualPolledBoard.groupBy(_.month).collect {\n                case (month, cards) if cards.size == 3 => month\n            }

580
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1472
1506
32
groupBy
Apply
false
0
false
actualPolledBoard.groupBy(_.month)

581
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
1556
1566
33
size
Select
false
0
false
cards.size

582
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
1572
1580
33
<none>
Block
true
0
false
=> month

583
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1472
1600
34
toSet
Select
false
0
false
actualPolledBoard.groupBy(_.month).collect {\n                case (month, cards) if cards.size == 3 => month\n            }.toSet

584
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1631
1784
35
map
Apply
false
0
false
actualPolledBoard.map { card =>\n                if (groupedMonths.contains(card.month)) card.copy(grouped = true)\n                else card\n            }

585
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
1683
1717
36
contains
Apply
false
0
false
groupedMonths.contains(card.month)

586
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
1719
1744
36
copy
Apply
true
0
false
card.copy(grouped = true)

587
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
1766
1770
37
card
Ident
true
0
false
card

588
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1829
1970
39
initializePlayers
Apply
false
0
false
initializePlayers(firstPlayer, secondPlayer, firstScore, secondScore, deck, customHandFirst = customHandFirst, customHandSec = customHandSec)

589
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1826
1826
39
apply
Apply
true
0
false


590
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2065
2127
41
exists
Apply
false
0
false
instantWinCombinations.exists(_.evaluate(playerList.head) > 0)

591
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
2095
2122
41
evaluate
Apply
false
0
false
_.evaluate(playerList.head)

592
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
2106
2121
41
head
Select
false
0
false
playerList.head

593
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2147
2207
42
exists
Apply
false
0
false
instantWinCombinations.exists(_.evaluate(playerList(1)) > 0)

594
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
2177
2202
42
evaluate
Apply
false
0
false
_.evaluate(playerList(1))

595
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
2188
2201
42
apply
Apply
false
0
false
playerList(1)

596
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2240
2281
43
calculateInstantWinScore
Apply
false
0
false
calculateInstantWinScore(playerList.head)

597
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2265
2280
43
head
Select
false
0
false
playerList.head

598
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2309
2348
44
calculateInstantWinScore
Apply
false
0
false
calculateInstantWinScore(playerList(1))

599
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2334
2347
44
apply
Apply
false
0
false
playerList(1)

600
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2365
2377
45
handleKoiKoi$default$6
Select
false
0
false
handleKoiKoi

601
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2365
2450
45
handleKoiKoi
Apply
false
0
false
handleKoiKoi(playerList, firstS, secS, deck = updatedDeck, board = Deck(actualBoard))

602
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2209
2464
42
<none>
Block
true
0
false
{\n                val firstS = calculateInstantWinScore(playerList.head)\n                val secS = calculateInstantWinScore(playerList(1))\n                handleKoiKoi(playerList, firstS, secS, deck = updatedDeck, board = Deck(actualBoard))\n            }

603
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
2470
2793
46
<none>
Block
true
0
false
{\n                model.GameStatePlanned(\n                    players = playerList,\n                    deck = updatedDeck,\n                    board = Deck(actualBoard),\n                    stdout = None,\n                    stderr = None,\n                    displayType = DisplayType.GAME\n                )\n            }

604
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
1330
2803
30
<none>
Block
true
0
false
{\n            // If 3 cards of the same month are dealt, group them -> easily detect a match of a whole month\n            val groupedMonths = actualPolledBoard.groupBy(_.month).collect {\n                case (month, cards) if cards.size == 3 => month\n            }.toSet\n            val actualBoard = actualPolledBoard.map { card =>\n                if (groupedMonths.contains(card.month)) card.copy(grouped = true)\n                else card\n            }\n            val (playerList, updatedDeck) = initializePlayers(firstPlayer, secondPlayer, firstScore, secondScore, deck, customHandFirst = customHandFirst, customHandSec = customHandSec)\n            /* Check if a player has been dealt an instant win combination */\n            if (instantWinCombinations.exists(_.evaluate(playerList.head) > 0)\n                || instantWinCombinations.exists(_.evaluate(playerList(1)) > 0)) {\n                val firstS = calculateInstantWinScore(playerList.head)\n                val secS = calculateInstantWinScore(playerList(1))\n                handleKoiKoi(playerList, firstS, secS, deck = updatedDeck, board = Deck(actualBoard))\n            } else {\n                model.GameStatePlanned(\n                    players = playerList,\n                    deck = updatedDeck,\n                    board = Deck(actualBoard),\n                    stdout = None,\n                    stderr = None,\n                    displayType = DisplayType.GAME\n                )\n            }\n        }

605
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame
707
731
23
newGame
DefDef
false
0
false
@tailrec\n    def newGame

606
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame$default$3
793
793
23
newGame$default$3
DefDef
false
0
false


607
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame$default$4
815
815
23
newGame$default$4
DefDef
false
0
false


608
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame$default$5
852
852
23
newGame$default$5
DefDef
false
0
false


609
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame$default$6
890
890
23
newGame$default$6
DefDef
false
0
false


610
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
newGame$default$7
926
926
23
newGame$default$7
DefDef
false
0
false


611
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
initializePlayers
3626
4375
72
foldLeft
Apply
false
0
false
(1 to 2).foldLeft((List.empty[Player], deck)) {\n            case ((players, currentDeck), n) =>\n                val (cards, newDeck) = Deck.pollMultiple(currentDeck, 8)\n                val name = if (n == 1) firstPlayer else secondPlayer\n                val score = if (n == 1) firstScore else secondScore\n                val hand = if (n == 1) customHandFirst else customHandSec\n                (players :+ Player(\n                    name = name,\n                    hand = if hand.isDefined then hand.get else Deck(cards),\n                    side = Deck(List.empty),\n                    score = score,\n                    calledKoiKoi = false,\n                    yakusToIgnore = List.empty\n                ), newDeck\n                )\n        }

612
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
initializePlayers
3627
3633
72
to
Apply
false
0
false
1 to 2

613
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
initializePlayers
3627
3628
72
intWrapper
Apply
false
0
false
1

614
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
initializePlayers
3645
3655
72
empty
Select
false
0
false
List.empty

615
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3761
3794
74
pollMultiple
Apply
false
0
false
Deck.pollMultiple(currentDeck, 8)

616
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3758
3758
74
apply
Apply
true
0
false


617
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3834
3845
75
firstPlayer
Ident
true
0
false
firstPlayer

618
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3851
3863
75
secondPlayer
Ident
true
0
false
secondPlayer

619
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3904
3914
76
firstScore
Ident
true
0
false
firstScore

620
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3920
3931
76
secondScore
Ident
true
0
false
secondScore

621
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3971
3986
77
customHandFirst
Ident
true
0
false
customHandFirst

622
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3992
4005
77
customHandSec
Ident
true
0
false
customHandSec

623
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
4023
4338
78
:+
Apply
false
0
false
players :+ Player(\n                    name = name,\n                    hand = if hand.isDefined then hand.get else Deck(cards),\n                    side = Deck(List.empty),\n                    score = score,\n                    calledKoiKoi = false,\n                    yakusToIgnore = List.empty\n                )

624
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
4105
4119
80
isDefined
Select
false
0
false
hand.isDefined

625
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
4125
4133
80
get
Select
false
0
false
hand.get

626
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
4125
4133
80
get
Select
true
0
false
hand.get

627
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
4139
4150
80
apply
Apply
true
0
false
Deck(cards)

628
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
4184
4194
81
empty
Select
false
0
false
List.empty

629
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
4310
4320
84
empty
Select
false
0
false
List.empty

630
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
3738
4365
74
<none>
Block
true
0
false
val (cards, newDeck) = Deck.pollMultiple(currentDeck, 8)\n                val name = if (n == 1) firstPlayer else secondPlayer\n                val score = if (n == 1) firstScore else secondScore\n                val hand = if (n == 1) customHandFirst else customHandSec\n                (players :+ Player(\n                    name = name,\n                    hand = if hand.isDefined then hand.get else Deck(cards),\n                    side = Deck(List.empty),\n                    score = score,\n                    calledKoiKoi = false,\n                    yakusToIgnore = List.empty\n                ), newDeck\n                )

631
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
initializePlayers
3406
3427
71
initializePlayers
DefDef
false
0
false
def initializePlayers

632
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
initializePlayers$default$6
3550
3550
71
initializePlayers$default$6
DefDef
false
0
false


633
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
initializePlayers$default$7
3586
3586
71
initializePlayers$default$7
DefDef
false
0
false


634
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5049
5061
102
players
Select
false
0
false
game.players

635
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5049
5066
102
head
Select
false
0
false
game.players.head

636
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5117
5150
103
evaluateScore
Apply
false
0
false
evaluateScore(game.players, 2, 1)

637
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5131
5143
103
players
Select
false
0
false
game.players

638
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5114
5114
103
apply
Apply
true
0
false


639
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5163
5226
104
handleKoiKoi
Apply
false
0
false
handleKoiKoi(game.players, firstS, secS, game.board, game.deck)

640
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5176
5188
104
players
Select
false
0
false
game.players

641
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5204
5214
104
board
Select
false
0
false
game.board

642
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5216
5225
104
deck
Select
false
0
false
game.deck

643
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5163
5175
104
handleKoiKoi$default$6
Select
false
0
false
handleKoiKoi

644
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5081
5236
102
<none>
Block
true
0
false
{ \n            val (firstS, secS) = evaluateScore(game.players, 2, 1)\n            handleKoiKoi(game.players, firstS, secS, game.board, game.deck)\n        }

645
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5299
5314
107
apply
Apply
false
0
false
game.players(1)

646
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5299
5311
107
players
Select
false
0
false
game.players

647
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5366
5399
108
evaluateScore
Apply
false
0
false
evaluateScore(game.players, 2, 0)

648
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5380
5392
108
players
Select
false
0
false
game.players

649
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5363
5363
108
apply
Apply
true
0
false


650
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5412
5475
109
handleKoiKoi
Apply
false
0
false
handleKoiKoi(game.players, firstS, secS, game.board, game.deck)

651
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5425
5437
109
players
Select
false
0
false
game.players

652
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5453
5463
109
board
Select
false
0
false
game.board

653
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5465
5474
109
deck
Select
false
0
false
game.deck

654
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5412
5424
109
handleKoiKoi$default$6
Select
false
0
false
handleKoiKoi

655
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5329
5485
107
<none>
Block
true
0
false
{  \n            val (firstS, secS) = evaluateScore(game.players, 2, 0)\n            handleKoiKoi(game.players, firstS, secS, game.board, game.deck)\n        }

656
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5572
5635
113
filter
Apply
false
0
false
yakuCombinations.filter(c => c.evaluate(game.players.head) > 0)

657
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
5601
5630
113
evaluate
Apply
false
0
false
c.evaluate(game.players.head)

658
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
5612
5624
113
players
Select
false
0
false
game.players

659
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
5612
5629
113
head
Select
false
0
false
game.players.head

660
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5698
5853
115
apply
Apply
false
0
false
List(\n                    game.players.head.copy(\n                        yakusToIgnore = yakuList\n                    ), game.players(1)\n                )

661
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5724
5736
116
players
Select
false
0
false
game.players

662
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5724
5741
116
head
Select
false
0
false
game.players.head

663
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5820
5835
118
apply
Apply
false
0
false
game.players(1)

664
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5820
5832
118
players
Select
false
0
false
game.players

665
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5878
5887
120
deck
Select
false
0
false
game.deck

666
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5913
5923
121
board
Select
false
0
false
game.board

667
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
6003
6127
123
s
Apply
false
0
false
s"You scored a yaku: \\n${yakuList.map(c => s"\\t- ${c.unicode}\\n").mkString("\\n")}You can now either finish or call koi-koi."

668
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
6028
6083
123
mkString
Apply
false
0
false
yakuList.map(c => s"\\t- ${c.unicode}\\n").mkString("\\n")

669
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
6028
6068
123
map
Apply
false
0
false
yakuList.map(c => s"\\t- ${c.unicode}\\n")

670
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
6046
6067
123
s
Apply
false
0
false
s"\\t- ${c.unicode}\\n"

671
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5543
6183
112
<none>
Block
true
0
false
{\n            val yakuList = yakuCombinations.filter(c => c.evaluate(game.players.head) > 0)\n            GameStatePendingKoiKoi(\n                players = List(\n                    game.players.head.copy(\n                        yakusToIgnore = yakuList\n                    ), game.players(1)\n                ),\n                deck = game.deck,\n                board = game.board,\n                displayType = DisplayType.GAME,\n                stdout = Some(s"You scored a yaku: \\n${yakuList.map(c => s"\\t- ${c.unicode}\\n").mkString("\\n")}You can now either finish or call koi-koi."),\n                stderr = None\n            )\n        }

672
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
5295
6183
107
<none>
If
true
0
false
if (game.players(1).calledKoiKoi) {  \n            val (firstS, secS) = evaluateScore(game.players, 2, 0)\n            handleKoiKoi(game.players, firstS, secS, game.board, game.deck)\n        } \n        /* No one called koi-koi before */\n        else {\n            val yakuList = yakuCombinations.filter(c => c.evaluate(game.players.head) > 0)\n            GameStatePendingKoiKoi(\n                players = List(\n                    game.players.head.copy(\n                        yakusToIgnore = yakuList\n                    ), game.players(1)\n                ),\n                deck = game.deck,\n                board = game.board,\n                displayType = DisplayType.GAME,\n                stdout = Some(s"You scored a yaku: \\n${yakuList.map(c => s"\\t- ${c.unicode}\\n").mkString("\\n")}You can now either finish or call koi-koi."),\n                stderr = None\n            )\n        }

673
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiHandler
4944
4961
100
koiKoiHandler
DefDef
false
0
false
def koiKoiHandler

674
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
handleKoiKoi
6860
6930
143
apply
Apply
false
0
false
List(players.head.copy(score = firstS), players(1).copy(score = secS))

675
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
handleKoiKoi
6865
6877
143
head
Select
false
0
false
players.head

676
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
handleKoiKoi
6900
6910
143
apply
Apply
false
0
false
players(1)

677
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
handleKoiKoi
6666
6682
141
handleKoiKoi
DefDef
false
0
false
def handleKoiKoi

678
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
handleKoiKoi$default$6
6783
6783
141
handleKoiKoi$default$6
DefDef
false
0
false


679
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7502
7568
162
apply
Apply
false
0
false
List(game.players(1), game.players.head.copy(calledKoiKoi = true))

680
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7507
7522
162
apply
Apply
false
0
false
game.players(1)

681
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7507
7519
162
players
Select
false
0
false
game.players

682
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7524
7536
162
players
Select
false
0
false
game.players

683
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7524
7541
162
head
Select
false
0
false
game.players.head

684
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7589
7598
163
deck
Select
false
0
false
game.deck

685
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7620
7630
164
board
Select
false
0
false
game.board

686
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
koiKoiCallHandler
7400
7421
160
koiKoiCallHandler
DefDef
false
0
false
def koiKoiCallHandler

687
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
calculateInstantWinScore
7986
8108
178
foldLeft
Apply
false
0
false
instantWinCombinations.foldLeft(0) {\n            case (acc, yaku) =>\n                acc + yaku.evaluate(player)\n        }

688
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8077
8098
180
evaluate
Apply
false
0
false
yaku.evaluate(player)

689
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8052
8098
179
<none>
Block
true
0
false
=>\n                acc + yaku.evaluate(player)

690
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
calculateInstantWinScore
7916
7952
177
calculateInstantWinScore
DefDef
false
0
false
private def calculateInstantWinScore

691
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
evaluateScore
8561
8573
193
head
Select
false
0
false
players.head

692
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
evaluateScore
8600
8722
193
foldLeft
Apply
false
0
false
yakuCombinations.foldLeft(0) {\n            case (acc, yaku) =>\n                acc + yaku.evaluate(players.head)\n        }

693
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8685
8712
195
evaluate
Apply
false
0
false
yaku.evaluate(players.head)

694
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8699
8711
195
head
Select
false
0
false
players.head

695
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8660
8712
194
<none>
Block
true
0
false
=>\n                acc + yaku.evaluate(players.head)

696
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
evaluateScore
8749
8759
197
apply
Apply
false
0
false
players(1)

697
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
evaluateScore
8784
8904
197
foldLeft
Apply
false
0
false
yakuCombinations.foldLeft(0) {\n            case (acc, yaku) =>\n                acc + yaku.evaluate(players(1))\n        }

698
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8869
8894
199
evaluate
Apply
false
0
false
yaku.evaluate(players(1))

699
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8883
8893
199
apply
Apply
false
0
false
players(1)

700
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
8844
8894
198
<none>
Block
true
0
false
=>\n                acc + yaku.evaluate(players(1))

701
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
evaluateScore
8437
8454
192
evaluateScore
DefDef
false
0
false
def evaluateScore

702
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
playerHasScoredNewYaku
9194
9241
211
exists
Apply
false
0
false
yakuCombinations.exists(_.evaluate(player) > 0)

703
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
9218
9236
211
evaluate
Apply
false
0
false
_.evaluate(player)

704
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
playerHasScoredNewYaku
9257
9304
212
filter
Apply
false
0
false
yakuCombinations.filter(_.evaluate(player) > 0)

705
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
$anonfun
9281
9299
212
evaluate
Apply
false
0
false
_.evaluate(player)

706
src/main/scala/model/GameManager.scala
model
GameManager
Object
model.GameManager
playerHasScoredNewYaku
9130
9156
210
playerHasScoredNewYaku
DefDef
false
0
false
def playerHasScoredNewYaku

707
src/main/scala/view/ComponentDecoraters.scala
view
$anon
Class
view.$anon
<init>
794
836
34
onAction_=
Apply
false
0
false
onAction = handle {\n        action\n      }

708
src/main/scala/view/ComponentDecoraters.scala
view
$anon
Class
view.$anon
<init>
805
836
34
handle
Apply
false
0
false
handle {\n        action\n      }

709
src/main/scala/view/ComponentDecoraters.scala
view
BasicButton
Class
view.BasicButton
render
737
756
33
render
DefDef
false
0
false
override def render

710
src/main/scala/view/ComponentDecoraters.scala
view
$anon
Class
view.$anon
<init>
1173
1182
51
$lessinit$greater$default$1
Select
false
0
false
TextField

711
src/main/scala/view/ComponentDecoraters.scala
view
$anon
Class
view.$anon
<init>
1191
1210
52
promptText_=
Apply
false
0
false
promptText = prompt

712
src/main/scala/view/ComponentDecoraters.scala
view
BasicTextField
Class
view.BasicTextField
render
1134
1153
51
render
DefDef
false
0
false
override def render

713
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
render
1661
1679
69
render
Apply
false
0
false
component.render()

714
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
render
1746
1825
72
style_=
Apply
false
0
false
textField.style = styles.map { case (key, value) => s"$key: $value;" }.mkString

715
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
render
1764
1816
72
map
Apply
false
0
false
styles.map { case (key, value) => s"$key: $value;" }

716
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
$anonfun
1798
1814
72
s
Apply
false
0
false
s"$key: $value;"

717
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
$anonfun
1795
1814
72
<none>
Block
true
0
false
=> s"$key: $value;"

718
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
render
1764
1825
72
mkString
Select
false
0
false
styles.map { case (key, value) => s"$key: $value;" }.mkString

719
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
render
1746
1845
72
<none>
Block
true
0
false
textField.style = styles.map { case (key, value) => s"$key: $value;" }.mkString\n          textField

720
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
render
1861
1868
74
<none>
Block
true
0
false
=> node

721
src/main/scala/view/ComponentDecoraters.scala
view
StyleDecorator
Class
view.StyleDecorator
render
1612
1631
68
render
DefDef
false
0
false
override def render

722
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2373
2391
92
render
Apply
false
0
false
component.render()

723
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2470
2482
95
style
Select
false
0
false
button.style

724
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2470
2488
95
value
Select
false
0
false
button.style.value

725
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2499
2609
96
onMouseEntered_=
Apply
false
0
false
button.onMouseEntered = _ => button.style = hoverStyles.map { case (key, value) => s"$key: $value;" }.mkString

726
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
$anonfun
2528
2609
96
style_=
Apply
false
0
false
button.style = hoverStyles.map { case (key, value) => s"$key: $value;" }.mkString

727
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
$anonfun
2543
2600
96
map
Apply
false
0
false
hoverStyles.map { case (key, value) => s"$key: $value;" }

728
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
$anonfun
2582
2598
96
s
Apply
false
0
false
s"$key: $value;"

729
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
$anonfun
2579
2598
96
<none>
Block
true
0
false
=> s"$key: $value;"

730
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
$anonfun
2543
2609
96
mkString
Select
false
0
false
hoverStyles.map { case (key, value) => s"$key: $value;" }.mkString

731
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2620
2674
97
onMouseExited_=
Apply
false
0
false
button.onMouseExited = _ => button.style = normalStyle

732
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
$anonfun
2648
2674
97
style_=
Apply
false
0
false
button.style = normalStyle

733
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2452
2691
95
<none>
Block
true
0
false
val normalStyle = button.style.value\n          button.onMouseEntered = _ => button.style = hoverStyles.map { case (key, value) => s"$key: $value;" }.mkString\n          button.onMouseExited = _ => button.style = normalStyle\n          button

734
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2707
2714
99
<none>
Block
true
0
false
=> node

735
src/main/scala/view/ComponentDecoraters.scala
view
HoverEffectDecorator
Class
view.HoverEffectDecorator
render
2324
2343
91
render
DefDef
false
0
false
override def render

736
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
<init>
1208
1213
39
apply
Apply
false
0
false
Map()

737
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
1989
2013
67
add
Apply
false
0
false
GameController.add(this)

738
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2160
2174
71
primary
Select
false
0
false
Screen.primary

739
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2160
2187
71
visualBounds
Select
false
0
false
Screen.primary.visualBounds

740
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2160
2194
71
height
Select
false
0
false
Screen.primary.visualBounds.height

741
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2208
2222
72
primary
Select
false
0
false
Screen.primary

742
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2208
2235
72
visualBounds
Select
false
0
false
Screen.primary.visualBounds

743
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2208
2241
72
width
Select
false
0
false
Screen.primary.visualBounds.width

744
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2262
2536
73
toMap
Apply
false
0
false
(for (i <- 0 until 49) yield {\n            i -> new Image(getClass.getResourceAsStream(s"/img/card/$i.png"),\n                requestedWidth = vw*0.055, requestedHeight = vw*0.055*1.5, preserveRatio = true, smooth = true)   // Hanafuda card size ratio is 2/3\n        }).toMap

745
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2263
2529
73
map
Apply
false
0
false
for (i <- 0 until 49) yield {\n            i -> new Image(getClass.getResourceAsStream(s"/img/card/$i.png"),\n                requestedWidth = vw*0.055, requestedHeight = vw*0.055*1.5, preserveRatio = true, smooth = true)   // Hanafuda card size ratio is 2/3\n        }

746
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2273
2283
73
until
Apply
false
0
false
0 until 49

747
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2273
2274
73
intWrapper
Apply
false
0
false
0

748
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
2305
2482
74
->
Apply
false
0
false
i -> new Image(getClass.getResourceAsStream(s"/img/card/$i.png"),\n                requestedWidth = vw*0.055, requestedHeight = vw*0.055*1.5, preserveRatio = true, smooth = true)

749
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
2310
2482
74
<init>
Apply
false
0
false
new Image(getClass.getResourceAsStream(s"/img/card/$i.png"),\n                requestedWidth = vw*0.055, requestedHeight = vw*0.055*1.5, preserveRatio = true, smooth = true)

750
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
2320
2369
74
getResourceAsStream
Apply
false
0
false
getClass.getResourceAsStream(s"/img/card/$i.png")

751
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
2349
2368
74
s
Apply
false
0
false
s"/img/card/$i.png"

752
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2624
2642
80
title_=
Apply
false
0
false
title = "Hanafuda"

753
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2655
2665
81
width_=
Apply
false
0
false
width = vw

754
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2678
2689
82
height_=
Apply
false
0
false
height = vh

755
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2702
2719
83
resizable_=
Apply
false
0
false
resizable = false

756
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2732
2804
84
+=
Apply
false
0
false
icons += new Image(getClass.getResourceAsStream("/img/logo/koikoi.png"))

757
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2732
2737
84
icons
Select
false
0
false
icons

758
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2741
2804
84
sfxImage2jfx
Apply
false
0
false
new Image(getClass.getResourceAsStream("/img/logo/koikoi.png"))

759
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2741
2804
84
<init>
Apply
false
0
false
new Image(getClass.getResourceAsStream("/img/logo/koikoi.png"))

760
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2751
2803
84
getResourceAsStream
Apply
false
0
false
getClass.getResourceAsStream("/img/logo/koikoi.png")

761
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
2817
2906
85
onCloseRequest_=
Apply
false
0
false
onCloseRequest = _ => {\n                GameController.processInput("exit")\n            }

762
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
2857
2892
86
processInput
Apply
false
0
false
GameController.processInput("exit")

763
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2925
2959
89
scene_=
Apply
false
0
false
stage.scene = sceneUninitialized()

764
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
2939
2959
89
sceneUninitialized
Apply
false
0
false
sceneUninitialized()

765
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
start
1895
1913
65
start
DefDef
false
0
false
override def start

766
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3273
3278
100
$lessinit$greater$default$1
Select
false
0
false
Scene

767
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3319
3328
101
$lessinit$greater$default$1
Select
false
0
false
StackPane

768
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3343
3925
102
background_=
Apply
false
0
false
background = new Background(Array(\n                new BackgroundImage(\n                    new Image("/img/background/main_menu.png",\n                        requestedWidth = vw, requestedHeight = vh,\n                        preserveRatio = true, smooth = true, backgroundLoading = false),\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundPosition.Center,\n                    new BackgroundSize(\n                        vw, vh, true, true, false, true\n                    )\n                )\n            ))

769
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3356
3925
102
<init>
Apply
false
0
false
new Background(Array(\n                new BackgroundImage(\n                    new Image("/img/background/main_menu.png",\n                        requestedWidth = vw, requestedHeight = vh,\n                        preserveRatio = true, smooth = true, backgroundLoading = false),\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundPosition.Center,\n                    new BackgroundSize(\n                        vw, vh, true, true, false, true\n                    )\n                )\n            ))

770
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3371
3924
102
apply
Apply
false
0
false
Array(\n                new BackgroundImage(\n                    new Image("/img/background/main_menu.png",\n                        requestedWidth = vw, requestedHeight = vh,\n                        preserveRatio = true, smooth = true, backgroundLoading = false),\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundPosition.Center,\n                    new BackgroundSize(\n                        vw, vh, true, true, false, true\n                    )\n                )\n            )

771
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3394
3910
103
<init>
Apply
false
0
false
new BackgroundImage(\n                    new Image("/img/background/main_menu.png",\n                        requestedWidth = vw, requestedHeight = vh,\n                        preserveRatio = true, smooth = true, backgroundLoading = false),\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundRepeat.NoRepeat,\n                    BackgroundPosition.Center,\n                    new BackgroundSize(\n                        vw, vh, true, true, false, true\n                    )\n                )

772
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3435
3632
104
<init>
Apply
false
0
false
new Image("/img/background/main_menu.png",\n                        requestedWidth = vw, requestedHeight = vh,\n                        preserveRatio = true, smooth = true, backgroundLoading = false)

773
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3795
3892
110
<init>
Apply
false
0
false
new BackgroundSize(\n                        vw, vh, true, true, false, true\n                    )

774
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
3968
4010
115
createStyledTextField
Apply
false
0
false
createStyledTextField("First player name")

775
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4023
4056
116
prefWidth_=
Apply
false
0
false
textField_p1.prefWidth = vw * 0.1

776
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4069
4104
117
prefHeight_=
Apply
false
0
false
textField_p1.prefHeight = vh * 0.03

777
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4147
4190
118
createStyledTextField
Apply
false
0
false
createStyledTextField("Second Player name")

778
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4203
4236
119
prefWidth_=
Apply
false
0
false
textField_p2.prefWidth = vw * 0.1

779
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4249
4284
120
prefHeight_=
Apply
false
0
false
textField_p2.prefHeight = vh * 0.03

780
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4323
4332
121
$lessinit$greater$default$1
Select
false
0
false
ImageView

781
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4351
4386
122
padding_=
Apply
false
0
false
padding = Insets(vh * 0.2, 0, 0, 0)

782
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4361
4386
122
apply
Apply
false
0
false
Insets(vh * 0.2, 0, 0, 0)

783
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4403
4444
123
image_=
Apply
false
0
false
image = new Image("/img/logo/koikoi.png")

784
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4411
4444
123
<init>
Apply
false
0
false
new Image("/img/logo/koikoi.png")

785
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4461
4481
124
fitWidth_=
Apply
false
0
false
fitWidth = vw * 0.15

786
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4498
4518
125
preserveRatio_=
Apply
false
0
false
preserveRatio = true

787
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4535
4564
126
alignmentInParent_=
Apply
false
0
false
alignmentInParent = TopCenter

788
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4581
4729
127
effect_=
Apply
false
0
false
effect = new DropShadow {\n                    color = Color.Black\n                    radius = 10\n                    spread = 0.2\n                }

789
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4594
4604
127
$lessinit$greater$default$1
Select
false
0
false
DropShadow

790
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4627
4646
128
color_=
Apply
false
0
false
color = Color.Black

791
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4667
4678
129
radius_=
Apply
false
0
false
radius = 10

792
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4699
4711
130
spread_=
Apply
false
0
false
spread = 0.2

793
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4826
4848
136
alignment_=
Apply
false
0
false
alignment = Pos.Center

794
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4865
4885
137
spacing_=
Apply
false
0
false
spacing = vh * 0.075

795
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
4928
5681
138
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Start", (e: ActionEvent) => {\n                    val player1Name = textField_p1.text.value\n                    val player2Name = textField_p2.text.value\n                    if (player1Name.isEmpty || player2Name.isEmpty) {\n                        if (player1Name.isEmpty) {\n                            textField_p1.promptText = "Enter Player 1 name"\n                        }\n                        if (player2Name.isEmpty) {\n                            textField_p2.promptText = "Enter Player 2 name"\n                        }\n                    } else {\n                        GameController.processInput(s"start $player1Name $player2Name")\n                        DisplayType.GAME\n                    }\n                })

796
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5021
5038
139
text
Select
false
0
false
textField_p1.text

797
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5021
5044
139
value
Select
false
0
false
textField_p1.text.value

798
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5083
5100
140
text
Select
false
0
false
textField_p2.text

799
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5083
5106
140
value
Select
false
0
false
textField_p2.text.value

800
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5131
5150
141
isEmpty
Apply
false
0
false
player1Name.isEmpty

801
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5154
5173
141
isEmpty
Apply
false
0
false
player2Name.isEmpty

802
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5205
5224
142
isEmpty
Apply
false
0
false
player1Name.isEmpty

803
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5256
5303
143
promptText_=
Apply
false
0
false
textField_p1.promptText = "Enter Player 1 name"

804
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5226
5329
142
<none>
Block
true
0
false
{\n                            textField_p1.promptText = "Enter Player 1 name"\n                        }

805
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5329
5329
144
<none>
Literal
true
0
false


806
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5358
5377
145
isEmpty
Apply
false
0
false
player2Name.isEmpty

807
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5409
5456
146
promptText_=
Apply
false
0
false
textField_p2.promptText = "Enter Player 2 name"

808
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5379
5482
145
<none>
Block
true
0
false
{\n                            textField_p2.promptText = "Enter Player 2 name"\n                        }

809
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5482
5482
147
<none>
Literal
true
0
false


810
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5175
5504
141
<none>
Block
true
0
false
{\n                        if (player1Name.isEmpty) {\n                            textField_p1.promptText = "Enter Player 1 name"\n                        }\n                        if (player2Name.isEmpty) {\n                            textField_p2.promptText = "Enter Player 2 name"\n                        }\n                    }

811
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5536
5599
149
processInput
Apply
false
0
false
GameController.processInput(s"start $player1Name $player2Name")

812
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5564
5598
149
s
Apply
false
0
false
s"start $player1Name $player2Name"

813
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
5510
5662
148
<none>
Block
true
0
false
{\n                        GameController.processInput(s"start $player1Name $player2Name")\n                        DisplayType.GAME\n                    }

814
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
5698
5730
153
prefWidth_=
Apply
false
0
false
startButton.prefWidth = vw * 0.1

815
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
5747
6006
154
children_=
Apply
false
0
false
children = List(\n                    new HBox {\n                        alignment = Pos.Center\n                        spacing = vw * 0.01\n                        children = List(textField_p1, textField_p2)\n                    }, startButton\n                )

816
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
5758
6006
154
apply
Apply
false
0
false
List(\n                    new HBox {\n                        alignment = Pos.Center\n                        spacing = vw * 0.01\n                        children = List(textField_p1, textField_p2)\n                    }, startButton\n                )

817
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
5819
5841
156
alignment_=
Apply
false
0
false
alignment = Pos.Center

818
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
5866
5885
157
spacing_=
Apply
false
0
false
spacing = vw * 0.01

819
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
5910
5953
158
children_=
Apply
false
0
false
children = List(textField_p1, textField_p2)

820
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
5921
5953
158
apply
Apply
false
0
false
List(textField_p1, textField_p2)

821
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6033
6060
162
children_=
Apply
false
0
false
children = List(logo, vbox)

822
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6044
6060
162
apply
Apply
false
0
false
List(logo, vbox)

823
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6079
6094
164
root_=
Apply
false
0
false
root = rootPane

824
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
sceneUninitialized
3235
3257
100
sceneUninitialized
DefDef
false
0
false
def sceneUninitialized

825
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6324
6329
174
$lessinit$greater$default$1
Select
false
0
false
Scene

826
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6374
6383
175
$lessinit$greater$default$1
Select
false
0
false
StackPane

827
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6402
6865
176
background_=
Apply
false
0
false
background = new Background(Array(\n                    new BackgroundImage(\n                        new Image("/img/background/board.png"),\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundPosition.Center,\n                        new BackgroundSize(\n                            vw, vh, true, true, false, true\n                        )\n                    )\n                ))

828
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6415
6865
176
<init>
Apply
false
0
false
new Background(Array(\n                    new BackgroundImage(\n                        new Image("/img/background/board.png"),\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundPosition.Center,\n                        new BackgroundSize(\n                            vw, vh, true, true, false, true\n                        )\n                    )\n                ))

829
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6430
6864
176
apply
Apply
false
0
false
Array(\n                    new BackgroundImage(\n                        new Image("/img/background/board.png"),\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundPosition.Center,\n                        new BackgroundSize(\n                            vw, vh, true, true, false, true\n                        )\n                    )\n                )

830
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6457
6846
177
<init>
Apply
false
0
false
new BackgroundImage(\n                        new Image("/img/background/board.png"),\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundRepeat.NoRepeat,\n                        BackgroundPosition.Center,\n                        new BackgroundSize(\n                            vw, vh, true, true, false, true\n                        )\n                    )

831
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6502
6540
178
<init>
Apply
false
0
false
new Image("/img/background/board.png")

832
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
6719
6824
182
<init>
Apply
false
0
false
new BackgroundSize(\n                            vw, vh, true, true, false, true\n                        )

833
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7161
7209
189
contains
Apply
false
0
false
gameState.players.head.hand.cards.contains(card)

834
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7161
7178
189
players
Select
false
0
false
gameState.players

835
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7161
7183
189
head
Select
false
0
false
gameState.players.head

836
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7293
7335
190
apply
Apply
true
0
false
(selectedBoardCard, selectedBoardCardPane)

837
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7341
7381
190
apply
Apply
true
0
false
(selectedHandCard, selectedHandCardPane)

838
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7496
7593
192
apply
Apply
true
0
false
((c: Option[Card]) => selectedBoardCard = c, (p: Option[StackPane]) => selectedBoardCardPane = p)

839
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7627
7722
193
apply
Apply
true
0
false
((c: Option[Card]) => selectedHandCard = c, (p: Option[StackPane]) => selectedHandCardPane = p)

840
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7752
7779
195
contains
Apply
false
0
false
selectedCard.contains(card)

841
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7811
7846
196
scaleX_=
Apply
false
0
false
cardStackPane.scaleX = defaultScale

842
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7875
7910
197
scaleY_=
Apply
false
0
false
cardStackPane.scaleY = defaultScale

843
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7939
7975
198
effect_=
Apply
false
0
false
cardStackPane.effect = defaultEffect

844
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8004
8025
199
apply
Apply
false
0
false
setSelectedCard(None)

845
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8054
8079
200
apply
Apply
false
0
false
setSelectedCardPane(None)

846
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7781
8105
195
<none>
Block
true
0
false
{\n                            cardStackPane.scaleX = defaultScale\n                            cardStackPane.scaleY = defaultScale\n                            cardStackPane.effect = defaultEffect\n                            setSelectedCard(None)\n                            setSelectedCardPane(None)\n                        }

847
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8141
8383
202
foreach
Apply
false
0
false
selectedCardPane.foreach { pane =>\n                                pane.scaleX = defaultScale\n                                pane.scaleY = defaultScale\n                                pane.effect = defaultEffect\n                            }

848
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
8208
8234
203
scaleX_=
Apply
false
0
false
pane.scaleX = defaultScale

849
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
8267
8293
204
scaleY_=
Apply
false
0
false
pane.scaleY = defaultScale

850
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
8326
8353
205
effect_=
Apply
false
0
false
pane.effect = defaultEffect

851
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8412
8439
207
apply
Apply
false
0
false
setSelectedCard(Some(card))

852
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8468
8508
208
apply
Apply
false
0
false
setSelectedCardPane(Some(cardStackPane))

853
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8537
8576
209
scaleX_=
Apply
false
0
false
cardStackPane.scaleX = highlightedScale

854
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8605
8644
210
scaleY_=
Apply
false
0
false
cardStackPane.scaleY = highlightedScale

855
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8673
8713
211
effect_=
Apply
false
0
false
cardStackPane.effect = highlightedEffect

856
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8111
8739
201
<none>
Block
true
0
false
{\n                            selectedCardPane.foreach { pane =>\n                                pane.scaleX = defaultScale\n                                pane.scaleY = defaultScale\n                                pane.effect = defaultEffect\n                            }\n                            setSelectedCard(Some(card))\n                            setSelectedCardPane(Some(cardStackPane))\n                            cardStackPane.scaleX = highlightedScale\n                            cardStackPane.scaleY = highlightedScale\n                            cardStackPane.effect = highlightedEffect\n                        }

857
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
7211
8761
189
<none>
Block
true
0
false
{\n                        val (selectedCard, selectedCardPane) = if (isBoardCard) (selectedBoardCard, selectedBoardCardPane) else (selectedHandCard, selectedHandCardPane)\n                        val (setSelectedCard, setSelectedCardPane) =\n                            if (isBoardCard) ((c: Option[Card]) => selectedBoardCard = c, (p: Option[StackPane]) => selectedBoardCardPane = p)\n                            else ((c: Option[Card]) => selectedHandCard = c, (p: Option[StackPane]) => selectedHandCardPane = p)\n\n                        if (selectedCard.contains(card)) {\n                            cardStackPane.scaleX = defaultScale\n                            cardStackPane.scaleY = defaultScale\n                            cardStackPane.effect = defaultEffect\n                            setSelectedCard(None)\n                            setSelectedCardPane(None)\n                        } else {\n                            selectedCardPane.foreach { pane =>\n                                pane.scaleX = defaultScale\n                                pane.scaleY = defaultScale\n                                pane.effect = defaultEffect\n                            }\n                            setSelectedCard(Some(card))\n                            setSelectedCardPane(Some(cardStackPane))\n                            cardStackPane.scaleX = highlightedScale\n                            cardStackPane.scaleY = highlightedScale\n                            cardStackPane.effect = highlightedEffect\n                        }\n                    }

858
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
8761
8761
213
<none>
Literal
true
0
false


859
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
onMouseClicked
6883
6901
188
onMouseClicked
DefDef
false
0
false
def onMouseClicked

860
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
createCard
8897
8918
217
apply
Apply
false
0
false
cardCache(card.index)

861
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
8963
8972
218
$lessinit$greater$default$1
Select
false
0
false
StackPane

862
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
8999
9146
219
children_=
Apply
false
0
false
children = new ImageView {\n                            image = cardImage\n                            preserveRatio = true\n                        }

863
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9014
9023
219
$lessinit$greater$default$1
Select
false
0
false
ImageView

864
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9054
9071
220
image_=
Apply
false
0
false
image = cardImage

865
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9100
9120
221
preserveRatio_=
Apply
false
0
false
preserveRatio = true

866
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9171
9351
223
effect_=
Apply
false
0
false
effect = new DropShadow {\n                            color = Color.Black\n                            radius = 10\n                            spread = 0.2\n                        }

867
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9184
9194
223
$lessinit$greater$default$1
Select
false
0
false
DropShadow

868
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9225
9244
224
color_=
Apply
false
0
false
color = Color.Black

869
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9273
9284
225
radius_=
Apply
false
0
false
radius = 10

870
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9313
9325
226
spread_=
Apply
false
0
false
spread = 0.2

871
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9509
9519
231
$lessinit$greater$default$1
Select
false
0
false
DropShadow

872
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9546
9565
232
color_=
Apply
false
0
false
color = Color.Black

873
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9590
9601
233
radius_=
Apply
false
0
false
radius = 10

874
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9626
9638
234
spread_=
Apply
false
0
false
spread = 0.2

875
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9709
9719
236
$lessinit$greater$default$1
Select
false
0
false
DropShadow

876
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9746
9765
237
color_=
Apply
false
0
false
color = Color.Black

877
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9790
9801
238
radius_=
Apply
false
0
false
radius = 20

878
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
9826
9838
239
spread_=
Apply
false
0
false
spread = 0.4

879
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
createCard
9881
10049
241
onMouseClicked_=
Apply
false
0
false
cardStackPane.onMouseClicked = (event: MouseEvent) => onMouseClicked(card, cardStackPane, isBoardCard, defaultScale, highlightedScale, defaultEffect, highlightedEffect)

880
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
createCard
9912
10049
241
eventClosureWrapperWithParam
Apply
false
0
false
(event: MouseEvent) => onMouseClicked(card, cardStackPane, isBoardCard, defaultScale, highlightedScale, defaultEffect, highlightedEffect)

881
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
9935
10049
241
onMouseClicked
Apply
false
0
false
onMouseClicked(card, cardStackPane, isBoardCard, defaultScale, highlightedScale, defaultEffect, highlightedEffect)

882
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
createCard
8797
8811
216
createCard
DefDef
false
0
false
def createCard

883
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10169
10191
246
alignment_=
Apply
false
0
false
alignment = Pos.Center

884
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10212
10230
247
spacing_=
Apply
false
0
false
spacing = vw*0.005

885
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10251
10386
248
children_=
Apply
false
0
false
children = gameState.players(1).hand.cards.map(card => createCard(false, Card(CardMonth.BACK, CardType.BACK, CardName.BACK, false, 0)))

886
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10262
10386
248
map
Apply
false
0
false
gameState.players(1).hand.cards.map(card => createCard(false, Card(CardMonth.BACK, CardType.BACK, CardName.BACK, false, 0)))

887
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10262
10282
248
apply
Apply
false
0
false
gameState.players(1)

888
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10262
10279
248
players
Select
false
0
false
gameState.players

889
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10306
10385
248
createCard
Apply
false
0
false
createCard(false, Card(CardMonth.BACK, CardType.BACK, CardName.BACK, false, 0))

890
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10482
10490
251
$lessinit$greater$default$1
Select
false
0
false
GridPane

891
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10513
10535
252
alignment_=
Apply
false
0
false
alignment = Pos.Center

892
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10556
10573
253
hgap_=
Apply
false
0
false
hgap = vw * 0.005

893
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10594
10616
254
vgap_=
Apply
false
0
false
vgap = vh * 0.03 * 0.5

894
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10659
10674
256
board
Select
false
0
false
gameState.board

895
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10659
10687
256
length
Select
false
0
false
gameState.board.cards.length

896
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10718
11075
258
foreach
Apply
false
0
false
for (i <- 0 until halfSize) {\n                        val card = if (gameState.board.cards.length > i) createCard(true, gameState.board.cards(i)) else new Region()\n                        add(card, i, 0)\n                        GridPane.setHalignment(card, HPos.CENTER)\n                        GridPane.setValignment(card, VPos.CENTER)\n                    }

897
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10728
10744
258
until
Apply
false
0
false
0 until halfSize

898
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
10728
10729
258
intWrapper
Apply
false
0
false
0

899
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10787
10802
259
board
Select
false
0
false
gameState.board

900
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10787
10815
259
length
Select
false
0
false
gameState.board.cards.length

901
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10821
10863
259
createCard
Apply
false
0
false
createCard(true, gameState.board.cards(i))

902
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10838
10862
259
apply
Apply
false
0
false
gameState.board.cards(i)

903
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10838
10853
259
board
Select
false
0
false
gameState.board

904
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10821
10863
259
createCard
Apply
true
0
false
createCard(true, gameState.board.cards(i))

905
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10869
10881
259
<init>
Apply
false
0
false
new Region()

906
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10873
10879
259
$lessinit$greater$default$1
Select
false
0
false
Region

907
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10869
10881
259
<init>
Apply
true
0
false
new Region()

908
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10906
10921
260
add
Apply
false
0
false
add(card, i, 0)

909
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
10946
10987
261
setHalignment
Apply
false
0
false
GridPane.setHalignment(card, HPos.CENTER)

910
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11012
11053
262
setValignment
Apply
false
0
false
GridPane.setValignment(card, VPos.CENTER)

911
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11097
11492
265
foreach
Apply
false
0
false
for (i <- halfSize until gameState.board.cards.length) {\n                        val card = if (gameState.board.cards.length > i) createCard(true, gameState.board.cards(i)) else new Region()\n                        add(card, i - halfSize, 1)\n                        GridPane.setHalignment(card, HPos.CENTER)\n                        GridPane.setValignment(card, VPos.CENTER)\n                    }

912
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11107
11150
265
until
Apply
false
0
false
halfSize until gameState.board.cards.length

913
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11107
11115
265
intWrapper
Apply
false
0
false
halfSize

914
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11122
11137
265
board
Select
false
0
false
gameState.board

915
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11122
11150
265
length
Select
false
0
false
gameState.board.cards.length

916
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11193
11208
266
board
Select
false
0
false
gameState.board

917
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11193
11221
266
length
Select
false
0
false
gameState.board.cards.length

918
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11227
11269
266
createCard
Apply
false
0
false
createCard(true, gameState.board.cards(i))

919
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11244
11268
266
apply
Apply
false
0
false
gameState.board.cards(i)

920
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11244
11259
266
board
Select
false
0
false
gameState.board

921
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11227
11269
266
createCard
Apply
true
0
false
createCard(true, gameState.board.cards(i))

922
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11275
11287
266
<init>
Apply
false
0
false
new Region()

923
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11279
11285
266
$lessinit$greater$default$1
Select
false
0
false
Region

924
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11275
11287
266
<init>
Apply
true
0
false
new Region()

925
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11312
11338
267
add
Apply
false
0
false
add(card, i - halfSize, 1)

926
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11363
11404
268
setHalignment
Apply
false
0
false
GridPane.setHalignment(card, HPos.CENTER)

927
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11429
11470
269
setValignment
Apply
false
0
false
GridPane.setValignment(card, VPos.CENTER)

928
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11581
11603
274
alignment_=
Apply
false
0
false
alignment = Pos.Center

929
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11624
11642
275
spacing_=
Apply
false
0
false
spacing = vw*0.005

930
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11663
11744
276
children_=
Apply
false
0
false
children = gameState.players.head.hand.cards.map(card => createCard(false, card))

931
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11674
11744
276
map
Apply
false
0
false
gameState.players.head.hand.cards.map(card => createCard(false, card))

932
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11674
11691
276
players
Select
false
0
false
gameState.players

933
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11674
11696
276
head
Select
false
0
false
gameState.players.head

934
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
11720
11743
276
createCard
Apply
false
0
false
createCard(false, card)

935
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11859
11881
280
alignment_=
Apply
false
0
false
alignment = Pos.Center

936
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11902
11920
281
spacing_=
Apply
false
0
false
spacing = vw*0.005

937
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11945
11966
282
matchedDeck
Select
false
0
false
gameState.matchedDeck

938
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11945
11976
282
isDefined
Select
false
0
false
gameState.matchedDeck.isDefined

939
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12004
12083
283
children_=
Apply
false
0
false
children = gameState.matchedDeck.get.cards.map(card => createCard(false, card))

940
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12015
12083
283
map
Apply
false
0
false
gameState.matchedDeck.get.cards.map(card => createCard(false, card))

941
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12015
12036
283
matchedDeck
Select
false
0
false
gameState.matchedDeck

942
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12015
12040
283
get
Select
false
0
false
gameState.matchedDeck.get

943
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
12059
12082
283
createCard
Apply
false
0
false
createCard(false, card)

944
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
11978
12130
282
<none>
Block
true
0
false
{\n                        children = gameState.matchedDeck.get.cards.map(card => createCard(false, card)) // Display matched cards\n                    }

945
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12130
12130
284
<none>
Literal
true
0
false


946
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12221
12243
288
alignment_=
Apply
false
0
false
alignment = Pos.Center

947
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12264
12281
289
spacing_=
Apply
false
0
false
spacing = vh*0.03

948
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12302
12347
290
children_=
Apply
false
0
false
children = List(topRow, middleRow, bottomRow)

949
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12313
12347
290
apply
Apply
false
0
false
List(topRow, middleRow, bottomRow)

950
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12469
12539
294
getOrElse
Apply
false
0
false
gameState.queuedCard.map(createCard(false, _)).getOrElse(new Region())

951
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12469
12515
294
map
Apply
false
0
false
gameState.queuedCard.map(createCard(false, _))

952
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12469
12489
294
queuedCard
Select
false
0
false
gameState.queuedCard

953
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
12494
12514
294
createCard
Apply
false
0
false
createCard(false, _)

954
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12526
12538
294
<init>
Apply
false
0
false
new Region()

955
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12530
12536
294
$lessinit$greater$default$1
Select
false
0
false
Region

956
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12560
12608
295
padding_=
Apply
false
0
false
singleCardRow.padding = Insets(0, vw*0.05, 0, 0)

957
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12584
12608
295
apply
Apply
false
0
false
Insets(0, vw*0.05, 0, 0)

958
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12629
12651
296
alignment_=
Apply
false
0
false
alignment = Pos.Center

959
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12672
12690
297
spacing_=
Apply
false
0
false
spacing = vw*0.005

960
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12711
12859
298
children_=
Apply
false
0
false
children = List(\n                        singleCardRow,\n                        cardLayout,\n                        matchedRow\n                    )

961
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12722
12859
298
apply
Apply
false
0
false
List(\n                        singleCardRow,\n                        cardLayout,\n                        matchedRow\n                    )

962
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12894
12955
304
children_=
Apply
false
0
false
children = List(combinedLayout, createGameTaskbar(gameState))

963
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12905
12955
304
apply
Apply
false
0
false
List(combinedLayout, createGameTaskbar(gameState))

964
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12926
12954
304
createGameTaskbar
Apply
false
0
false
createGameTaskbar(gameState)

965
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
12982
12997
306
root_=
Apply
false
0
false
root = rootPane

966
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
gameScene
6265
6278
173
gameScene
DefDef
false
0
false
def gameScene

967
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13265
13270
317
$lessinit$greater$default$1
Select
false
0
false
Scene

968
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13304
13313
318
$lessinit$greater$default$1
Select
false
0
false
StackPane

969
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
createCard
13410
13431
320
apply
Apply
false
0
false
cardCache(card.index)

970
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13456
13465
321
$lessinit$greater$default$1
Select
false
0
false
StackPane

971
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13492
13800
322
children_=
Apply
false
0
false
children = new ImageView {\n                            image = cardImage\n                            fitWidth = vw * 0.055 * 0.5\n                            fitHeight = vw * 0.055 * 1.5 * 0.5\n                            smooth = true\n                            preserveRatio = true\n                        }

972
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13507
13516
322
$lessinit$greater$default$1
Select
false
0
false
ImageView

973
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13547
13564
323
image_=
Apply
false
0
false
image = cardImage

974
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13593
13620
324
fitWidth_=
Apply
false
0
false
fitWidth = vw * 0.055 * 0.5

975
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13649
13683
325
fitHeight_=
Apply
false
0
false
fitHeight = vw * 0.055 * 1.5 * 0.5

976
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13712
13725
326
smooth_=
Apply
false
0
false
smooth = true

977
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13754
13774
327
preserveRatio_=
Apply
false
0
false
preserveRatio = true

978
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13825
14005
329
effect_=
Apply
false
0
false
effect = new DropShadow {\n                            color = Color.Black\n                            radius = 10\n                            spread = 0.2\n                        }

979
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13838
13848
329
$lessinit$greater$default$1
Select
false
0
false
DropShadow

980
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13879
13898
330
color_=
Apply
false
0
false
color = Color.Black

981
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13927
13938
331
radius_=
Apply
false
0
false
radius = 10

982
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
13967
13979
332
spread_=
Apply
false
0
false
spread = 0.2

983
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14030
14049
334
padding_=
Apply
false
0
false
padding = Insets(0)

984
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14040
14049
334
apply
Apply
false
0
false
Insets(0)

985
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
createCard
13332
13346
319
createCard
DefDef
false
0
false
def createCard

986
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14230
14252
340
alignment_=
Apply
false
0
false
alignment = Pos.Center

987
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14277
14297
341
spacing_=
Apply
false
0
false
spacing = 0.025 * vh

988
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14322
14820
342
children_=
Apply
false
0
false
children = List(\n                            new Label(title) {\n                                style = "-fx-font-size: 16px; -fx-text-fill: black;"\n                            },\n                            new FlowPane {\n                                alignment = Pos.Center\n                                hgap = 0.005 * vh\n                                vgap = 0.005 * vh\n                                children = cards.map(createCard)\n                            }\n                        )

989
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14333
14820
342
apply
Apply
false
0
false
List(\n                            new Label(title) {\n                                style = "-fx-font-size: 16px; -fx-text-fill: black;"\n                            },\n                            new FlowPane {\n                                alignment = Pos.Center\n                                hgap = 0.005 * vh\n                                vgap = 0.005 * vh\n                                children = cards.map(createCard)\n                            }\n                        )

990
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14418
14470
344
style_=
Apply
false
0
false
style = "-fx-font-size: 16px; -fx-text-fill: black;"

991
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14534
14542
346
$lessinit$greater$default$1
Select
false
0
false
FlowPane

992
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14577
14599
347
alignment_=
Apply
false
0
false
alignment = Pos.Center

993
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14632
14649
348
hgap_=
Apply
false
0
false
hgap = 0.005 * vh

994
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14682
14699
349
vgap_=
Apply
false
0
false
vgap = 0.005 * vh

995
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14732
14764
350
children_=
Apply
false
0
false
children = cards.map(createCard)

996
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14743
14764
350
map
Apply
false
0
false
cards.map(createCard)

997
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
14753
14763
350
createCard
Apply
false
0
false
createCard

998
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
createCombinationRow
14107
14131
338
createCombinationRow
DefDef
false
0
false
def createCombinationRow

999
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14897
17116
356
apply
Apply
false
0
false
List(\n                    createCombinationRow("Gokō (五光) \\"Five Hikari\\" 10pts.", Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI)),\n                    createCombinationRow("Shikō (四光) \\"Four Hikari\\" 8pts.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN)),\n                    createCombinationRow("Ame-Shikō (雨四光) \\"Rainy Four Hikari\\" 7pts.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI)),\n                    createCombinationRow("Sankō (三光) \\"Three Hikari\\" 6pts.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN)),\n                    createCombinationRow("Tsukimi-zake (月見酒) \\"Moon Viewing\\" 5pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP)),\n                    createCombinationRow("Hanami-zake (花見酒) \\"Cherry Blossom Viewing\\" 5pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP)),\n                    createCombinationRow("Inoshikachō (猪鹿蝶) \\"Boar, Deer, Butterfly\\" 5pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES)),\n                    createCombinationRow("Tane (タネ) 1pt.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE)),\n                    createCombinationRow("Akatan Aotan no Chōfuku (赤短青短の重複) \\"Red Poem, Blue Poem\\" 10pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU)),\n                    createCombinationRow("Akatan (赤短) \\"Red Poem\\" 5pts.", Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU)),\n                    createCombinationRow("Aotan (青短) \\"Blue Poem\\" 5pts.", Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU)),\n                    createCombinationRow("Tanzaku (短冊) \\"Ribbons\\" 1pt.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU)),\n                    createCombinationRow("Kasu (カス) 1pt.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.KASU))\n                )

1000
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14923
15043
357
createCombinationRow
Apply
false
0
false
createCombinationRow("Gokō (五光) \\"Five Hikari\\" 10pts.", Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI))

1001
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14980
15042
357
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI)

1002
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
14980
14998
357
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1003
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15065
15221
358
createCombinationRow
Apply
false
0
false
createCombinationRow("Shikō (四光) \\"Four Hikari\\" 8pts.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN))

1004
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15122
15220
358
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN)

1005
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15122
15140
358
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1006
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15243
15379
359
createCombinationRow
Apply
false
0
false
createCombinationRow("Ame-Shikō (雨四光) \\"Rainy Four Hikari\\" 7pts.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI))

1007
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15311
15378
359
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI)

1008
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15311
15329
359
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1009
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15401
15558
360
createCombinationRow
Apply
false
0
false
createCombinationRow("Sankō (三光) \\"Three Hikari\\" 6pts.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN))

1010
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15459
15557
360
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN)

1011
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15459
15477
360
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1012
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15580
15747
361
createCombinationRow
Apply
false
0
false
createCombinationRow("Tsukimi-zake (月見酒) \\"Moon Viewing\\" 5pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP))

1013
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15646
15746
361
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP)

1014
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15646
15664
361
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1015
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15769
15948
362
createCombinationRow
Apply
false
0
false
createCombinationRow("Hanami-zake (花見酒) \\"Cherry Blossom Viewing\\" 5pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP))

1016
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15844
15947
362
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP)

1017
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15844
15862
362
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1018
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
15970
16179
363
createCombinationRow
Apply
false
0
false
createCombinationRow("Inoshikachō (猪鹿蝶) \\"Boar, Deer, Butterfly\\" 5pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES))

1019
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16044
16178
363
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES)

1020
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16044
16062
363
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1021
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16201
16306
364
createCombinationRow
Apply
false
0
false
createCombinationRow("Tane (タネ) 1pt.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE))

1022
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16240
16305
364
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE)

1023
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16240
16258
364
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1024
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16328
16532
365
createCombinationRow
Apply
false
0
false
createCombinationRow("Akatan Aotan no Chōfuku (赤短青短の重複) \\"Red Poem, Blue Poem\\" 10pts.", Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU))

1025
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16417
16531
365
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU)

1026
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16417
16435
365
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1027
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16554
16680
366
createCombinationRow
Apply
false
0
false
createCombinationRow("Akatan (赤短) \\"Red Poem\\" 5pts.", Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU))

1028
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16609
16679
366
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU)

1029
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16609
16627
366
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1030
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16702
16826
367
createCombinationRow
Apply
false
0
false
createCombinationRow("Aotan (青短) \\"Blue Poem\\" 5pts.", Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU))

1031
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16757
16825
367
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU)

1032
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16757
16775
367
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1033
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16848
16971
368
createCombinationRow
Apply
false
0
false
createCombinationRow("Tanzaku (短冊) \\"Ribbons\\" 1pt.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU))

1034
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16902
16970
368
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU)

1035
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16902
16920
368
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1036
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
16993
17098
369
createCombinationRow
Apply
false
0
false
createCombinationRow("Kasu (カス) 1pt.", Deck.defaultDeck().cards.filter(c => c.cardType == CardType.KASU))

1037
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17032
17097
369
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.KASU)

1038
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17032
17050
369
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1039
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17163
17173
372
$lessinit$greater$default$1
Select
false
0
false
ScrollPane

1040
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17196
18232
373
content_=
Apply
false
0
false
content = new FlowPane {\n                        alignment = Pos.TopCenter\n                        hgap = vw * 0.01\n                        vgap = vh * 0.02\n                        children = combinations\n                        padding = Insets(0.05*vh, 0, 0, 0)\n                        background = new Background(Array(\n                            new BackgroundImage(\n                                new Image("/img/background/board.png",\n                                    requestedWidth = vw, requestedHeight = vh,\n                                    preserveRatio = false, smooth = true, backgroundLoading = false),\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundPosition.Center,\n                                new BackgroundSize(\n                                    vw, vh, false, false, false, false\n                                )\n                            )\n                        ))\n                    }

1041
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17210
17218
373
$lessinit$greater$default$1
Select
false
0
false
FlowPane

1042
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17245
17270
374
alignment_=
Apply
false
0
false
alignment = Pos.TopCenter

1043
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17295
17311
375
hgap_=
Apply
false
0
false
hgap = vw * 0.01

1044
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17336
17352
376
vgap_=
Apply
false
0
false
vgap = vh * 0.02

1045
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17377
17400
377
children_=
Apply
false
0
false
children = combinations

1046
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17425
17459
378
padding_=
Apply
false
0
false
padding = Insets(0.05*vh, 0, 0, 0)

1047
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17435
17459
378
apply
Apply
false
0
false
Insets(0.05*vh, 0, 0, 0)

1048
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17484
18210
379
background_=
Apply
false
0
false
background = new Background(Array(\n                            new BackgroundImage(\n                                new Image("/img/background/board.png",\n                                    requestedWidth = vw, requestedHeight = vh,\n                                    preserveRatio = false, smooth = true, backgroundLoading = false),\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundPosition.Center,\n                                new BackgroundSize(\n                                    vw, vh, false, false, false, false\n                                )\n                            )\n                        ))

1049
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17497
18210
379
<init>
Apply
false
0
false
new Background(Array(\n                            new BackgroundImage(\n                                new Image("/img/background/board.png",\n                                    requestedWidth = vw, requestedHeight = vh,\n                                    preserveRatio = false, smooth = true, backgroundLoading = false),\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundPosition.Center,\n                                new BackgroundSize(\n                                    vw, vh, false, false, false, false\n                                )\n                            )\n                        ))

1050
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17512
18209
379
apply
Apply
false
0
false
Array(\n                            new BackgroundImage(\n                                new Image("/img/background/board.png",\n                                    requestedWidth = vw, requestedHeight = vh,\n                                    preserveRatio = false, smooth = true, backgroundLoading = false),\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundPosition.Center,\n                                new BackgroundSize(\n                                    vw, vh, false, false, false, false\n                                )\n                            )\n                        )

1051
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17547
18183
380
<init>
Apply
false
0
false
new BackgroundImage(\n                                new Image("/img/background/board.png",\n                                    requestedWidth = vw, requestedHeight = vh,\n                                    preserveRatio = false, smooth = true, backgroundLoading = false),\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundRepeat.NoRepeat,\n                                BackgroundPosition.Center,\n                                new BackgroundSize(\n                                    vw, vh, false, false, false, false\n                                )\n                            )

1052
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
17600
17818
381
<init>
Apply
false
0
false
new Image("/img/background/board.png",\n                                    requestedWidth = vw, requestedHeight = vh,\n                                    preserveRatio = false, smooth = true, backgroundLoading = false)

1053
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18029
18153
387
<init>
Apply
false
0
false
new BackgroundSize(\n                                    vw, vh, false, false, false, false\n                                )

1054
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18253
18270
393
fitToWidth_=
Apply
false
0
false
fitToWidth = true

1055
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18291
18309
394
fitToHeight_=
Apply
false
0
false
fitToHeight = true

1056
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18330
18375
395
hbarPolicy_=
Apply
false
0
false
hbarPolicy = ScrollPane.ScrollBarPolicy.Never

1057
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18396
18444
396
vbarPolicy_=
Apply
false
0
false
vbarPolicy = ScrollPane.ScrollBarPolicy.AsNeeded

1058
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18465
18488
397
vgrow_=
Apply
false
0
false
vgrow = Priority.Always

1059
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18542
18570
399
createGameTaskbar
Apply
false
0
false
createGameTaskbar(gameState)

1060
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18587
18843
400
children_=
Apply
false
0
false
children = List(\n                    new VBox {\n                        alignment = Pos.Center\n                        vgrow = Priority.Always\n                        children = List(taskbarChild, combinationsLayout)\n                    }\n                )

1061
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18598
18843
400
apply
Apply
false
0
false
List(\n                    new VBox {\n                        alignment = Pos.Center\n                        vgrow = Priority.Always\n                        children = List(taskbarChild, combinationsLayout)\n                    }\n                )

1062
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18659
18681
402
alignment_=
Apply
false
0
false
alignment = Pos.Center

1063
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18706
18729
403
vgrow_=
Apply
false
0
false
vgrow = Priority.Always

1064
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18754
18803
404
children_=
Apply
false
0
false
children = List(taskbarChild, combinationsLayout)

1065
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18765
18803
404
apply
Apply
false
0
false
List(taskbarChild, combinationsLayout)

1066
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
18870
18885
408
root_=
Apply
false
0
false
root = rootPane

1067
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
combinationsScene
13198
13219
316
combinationsScene
DefDef
false
0
false
def combinationsScene

1068
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19160
19165
419
$lessinit$greater$default$1
Select
false
0
false
Scene

1069
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19193
19224
420
<init>
Apply
false
0
false
new Button("Continue the game")

1070
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19237
19257
421
layoutX_=
Apply
false
0
false
button.layoutX = 200

1071
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19270
19290
422
layoutY_=
Apply
false
0
false
button.layoutY = 150

1072
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19303
19411
423
onAction_=
Apply
false
0
false
button.onAction = (e:ActionEvent) => {\n                GameController.processInput("continue")\n            }

1073
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19321
19411
423
eventClosureWrapperWithParam
Apply
false
0
false
(e:ActionEvent) => {\n                GameController.processInput("continue")\n            }

1074
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
19358
19397
424
processInput
Apply
false
0
false
GameController.processInput("continue")

1075
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19424
19446
426
content_=
Apply
false
0
false
content = List(button)

1076
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19434
19446
426
apply
Apply
false
0
false
List(button)

1077
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
spoilerScene
19098
19114
418
spoilerScene
DefDef
false
0
false
def spoilerScene

1078
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19699
19704
437
$lessinit$greater$default$1
Select
false
0
false
Scene

1079
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19732
19750
438
<init>
Apply
false
0
false
new Button("Back")

1080
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19763
19783
439
layoutX_=
Apply
false
0
false
button.layoutX = 200

1081
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19796
19816
440
layoutY_=
Apply
false
0
false
button.layoutY = 150

1082
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19829
19937
441
onAction_=
Apply
false
0
false
button.onAction = (e:ActionEvent) => {\n                GameController.processInput("continue")\n            }

1083
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19847
19937
441
eventClosureWrapperWithParam
Apply
false
0
false
(e:ActionEvent) => {\n                GameController.processInput("continue")\n            }

1084
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
19884
19923
442
processInput
Apply
false
0
false
GameController.processInput("continue")

1085
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19950
19972
444
content_=
Apply
false
0
false
content = List(button)

1086
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
19960
19972
444
apply
Apply
false
0
false
List(button)

1087
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
summaryScene
19637
19653
436
summaryScene
DefDef
false
0
false
def summaryScene

1088
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
20259
20277
456
<init>
Apply
false
0
false
new Button("Back")

1089
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
20290
20310
457
layoutX_=
Apply
false
0
false
button.layoutX = 200

1090
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
20323
20343
458
layoutY_=
Apply
false
0
false
button.layoutY = 150

1091
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
20356
20464
459
onAction_=
Apply
false
0
false
button.onAction = (e:ActionEvent) => {\n                GameController.processInput("continue")\n            }

1092
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
20374
20464
459
eventClosureWrapperWithParam
Apply
false
0
false
(e:ActionEvent) => {\n                GameController.processInput("continue")\n            }

1093
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
20411
20450
460
processInput
Apply
false
0
false
GameController.processInput("continue")

1094
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
20477
20499
462
content_=
Apply
false
0
false
content = List(button)

1095
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
20487
20499
462
apply
Apply
false
0
false
List(button)

1096
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
helpScene
20157
20170
454
helpScene
DefDef
false
0
false
def helpScene

1097
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
20836
20948
475
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Help", (e: ActionEvent) => {\n            GameController.processInput("help")\n        })

1098
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
20902
20937
476
processInput
Apply
false
0
false
GameController.processInput("help")

1099
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
20971
21717
478
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Match", (e: ActionEvent) => {\n            gameState match\n                case _: GameStatePlanned if selectedHandCard.isDefined && selectedBoardCard.isDefined =>\n                    val handCardIndex = gameState.players.head.hand.cards.indexOf(selectedHandCard.get) + 1\n                    val boardCardIndex = gameState.board.cards.indexOf(selectedBoardCard.get) + 1\n                    GameController.processInput(s"match $handCardIndex $boardCardIndex")\n                case _: GameStateRandom if selectedBoardCard.isDefined =>\n                    GameController.processInput(s"match ${gameState.board.cards.indexOf(selectedBoardCard.get) + 1}")\n                case _ =>\n            //TODO error reporting\n        })

1100
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21098
21124
480
isDefined
Select
false
0
false
selectedHandCard.isDefined

1101
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21128
21155
480
isDefined
Select
false
0
false
selectedBoardCard.isDefined

1102
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21199
21262
481
indexOf
Apply
false
0
false
gameState.players.head.hand.cards.indexOf(selectedHandCard.get)

1103
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21199
21216
481
players
Select
false
0
false
gameState.players

1104
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21199
21221
481
head
Select
false
0
false
gameState.players.head

1105
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21241
21261
481
get
Select
false
0
false
selectedHandCard.get

1106
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21308
21360
482
indexOf
Apply
false
0
false
gameState.board.cards.indexOf(selectedBoardCard.get)

1107
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21308
21323
482
board
Select
false
0
false
gameState.board

1108
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21338
21359
482
get
Select
false
0
false
selectedBoardCard.get

1109
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21385
21453
483
processInput
Apply
false
0
false
GameController.processInput(s"match $handCardIndex $boardCardIndex")

1110
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21413
21452
483
s
Apply
false
0
false
s"match $handCardIndex $boardCardIndex"

1111
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21179
21453
481
<none>
Block
true
0
false
val handCardIndex = gameState.players.head.hand.cards.indexOf(selectedHandCard.get) + 1\n                    val boardCardIndex = gameState.board.cards.indexOf(selectedBoardCard.get) + 1\n                    GameController.processInput(s"match $handCardIndex $boardCardIndex")

1112
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21497
21524
484
isDefined
Select
false
0
false
selectedBoardCard.isDefined

1113
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21548
21645
485
processInput
Apply
false
0
false
GameController.processInput(s"match ${gameState.board.cards.indexOf(selectedBoardCard.get) + 1}")

1114
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21576
21644
485
s
Apply
false
0
false
s"match ${gameState.board.cards.indexOf(selectedBoardCard.get) + 1}"

1115
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21586
21638
485
indexOf
Apply
false
0
false
gameState.board.cards.indexOf(selectedBoardCard.get)

1116
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21586
21601
485
board
Select
false
0
false
gameState.board

1117
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21616
21637
485
get
Select
false
0
false
selectedBoardCard.get

1118
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21525
21645
484
<none>
Block
true
0
false
=>\n                    GameController.processInput(s"match ${gameState.board.cards.indexOf(selectedBoardCard.get) + 1}")

1119
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21669
21671
486
<none>
Block
true
0
false
=>

1120
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
21740
22203
489
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Discard", (e: ActionEvent) => {\n            gameState match\n                case _: GameStatePlanned if selectedHandCard.isDefined =>\n                    GameController.processInput(s"discard ${gameState.players.head.hand.cards.indexOf(selectedHandCard.get) + 1}")\n                case _: GameStateRandom =>\n                    GameController.processInput("discard")\n                case _ =>\n            //TODO error reporting\n        })

1121
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21869
21895
491
isDefined
Select
false
0
false
selectedHandCard.isDefined

1122
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21919
22029
492
processInput
Apply
false
0
false
GameController.processInput(s"discard ${gameState.players.head.hand.cards.indexOf(selectedHandCard.get) + 1}")

1123
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21947
22028
492
s
Apply
false
0
false
s"discard ${gameState.players.head.hand.cards.indexOf(selectedHandCard.get) + 1}"

1124
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21959
22022
492
indexOf
Apply
false
0
false
gameState.players.head.hand.cards.indexOf(selectedHandCard.get)

1125
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21959
21976
492
players
Select
false
0
false
gameState.players

1126
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21959
21981
492
head
Select
false
0
false
gameState.players.head

1127
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22001
22021
492
get
Select
false
0
false
selectedHandCard.get

1128
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
21896
22029
491
<none>
Block
true
0
false
=>\n                    GameController.processInput(s"discard ${gameState.players.head.hand.cards.indexOf(selectedHandCard.get) + 1}")

1129
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22093
22131
494
processInput
Apply
false
0
false
GameController.processInput("discard")

1130
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22070
22131
493
<none>
Block
true
0
false
=>\n                    GameController.processInput("discard")

1131
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22155
22157
495
<none>
Block
true
0
false
=>

1132
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
22226
22414
498
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Combinations", (e: ActionEvent) => {\n            GameController.processInput(if gameState.displayType == DisplayType.COMBINATIONS then "con" else "com")\n        })

1133
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22300
22403
499
processInput
Apply
false
0
false
GameController.processInput(if gameState.displayType == DisplayType.COMBINATIONS then "con" else "com")

1134
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22331
22352
499
displayType
Select
false
0
false
gameState.displayType

1135
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22386
22391
499
<none>
Literal
true
0
false
"con"

1136
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22397
22402
499
<none>
Literal
true
0
false
"com"

1137
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
22437
22549
501
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Undo", (e: ActionEvent) => {\n            GameController.processInput("undo")\n        })

1138
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22503
22538
502
processInput
Apply
false
0
false
GameController.processInput("undo")

1139
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
22572
22684
504
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Redo", (e: ActionEvent) => {\n            GameController.processInput("redo")\n        })

1140
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22638
22673
505
processInput
Apply
false
0
false
GameController.processInput("redo")

1141
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
22707
22819
507
createGameTaskbarButton
Apply
false
0
false
createGameTaskbarButton("Exit", (e: ActionEvent) => {\n            GameController.processInput("exit")\n        })

1142
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
$anonfun
22773
22808
508
processInput
Apply
false
0
false
GameController.processInput("exit")

1143
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
22850
22856
511
$lessinit$greater$default$1
Select
false
0
false
Region

1144
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
22871
22894
512
hgrow_=
Apply
false
0
false
hgrow = Priority.Always

1145
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
22935
22941
514
$lessinit$greater$default$1
Select
false
0
false
Region

1146
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
22956
22979
515
hgrow_=
Apply
false
0
false
hgrow = Priority.Always

1147
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23002
23009
517
$lessinit$greater$default$1
Select
false
0
false
ToolBar

1148
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23024
23060
518
alignmentInParent_=
Apply
false
0
false
alignmentInParent = Pos.BottomCenter

1149
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23073
23093
519
padding_=
Apply
false
0
false
padding = Insets(10)

1150
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23083
23093
519
apply
Apply
false
0
false
Insets(10)

1151
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23106
23410
520
items_=
Apply
false
0
false
items = List(\n                leftSpacer,\n                new HBox {\n                    alignment = Pos.Center\n                    spacing = 20\n                    children = List(button1, button2, button3, button4, button5, button6, button7)\n                },\n                rightSpacer\n            )

1152
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23114
23410
520
apply
Apply
false
0
false
List(\n                leftSpacer,\n                new HBox {\n                    alignment = Pos.Center\n                    spacing = 20\n                    children = List(button1, button2, button3, button4, button5, button6, button7)\n                },\n                rightSpacer\n            )

1153
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23195
23217
523
alignment_=
Apply
false
0
false
alignment = Pos.Center

1154
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23238
23250
524
spacing_=
Apply
false
0
false
spacing = 20

1155
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23271
23349
525
children_=
Apply
false
0
false
children = List(button1, button2, button3, button4, button5, button6, button7)

1156
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23282
23349
525
apply
Apply
false
0
false
List(button1, button2, button3, button4, button5, button6, button7)

1157
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23423
23463
529
style_=
Apply
false
0
false
style = "-fx-background-color: #231F20;"

1158
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbar
20757
20778
474
createGameTaskbar
DefDef
false
0
false
def createGameTaskbar

1159
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23890
24097
542
style_=
Apply
false
0
false
style = "-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1160
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23898
24097
542
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1161
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23898
24053
542
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;"

1162
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23898
24009
542
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;"

1163
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
23898
23970
542
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;"

1164
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
24110
24339
547
onMouseEntered_=
Apply
false
0
false
onMouseEntered = _ => style = "-fx-background-color: #595FAB;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1165
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24132
24339
547
style_=
Apply
false
0
false
style = "-fx-background-color: #595FAB;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1166
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24140
24339
547
+
Apply
false
0
false
"-fx-background-color: #595FAB;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1167
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24140
24295
547
+
Apply
false
0
false
"-fx-background-color: #595FAB;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;"

1168
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24140
24251
547
+
Apply
false
0
false
"-fx-background-color: #595FAB;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;"

1169
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24140
24212
547
+
Apply
false
0
false
"-fx-background-color: #595FAB;" +\n              "-fx-text-fill: white;"

1170
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
<init>
24352
24580
552
onMouseExited_=
Apply
false
0
false
onMouseExited = _ => style = "-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1171
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24373
24580
552
style_=
Apply
false
0
false
style = "-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1172
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24381
24580
552
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;" +\n              "-fx-background-radius: 5;"

1173
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24381
24536
552
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;" +\n              "-fx-padding: 10 20 10 20;"

1174
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24381
24492
552
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;" +\n              "-fx-font-size: 14px;"

1175
src/main/scala/view/GUIManager.scala
view
$anon
Class
view.$anon
$anonfun
24381
24453
552
+
Apply
false
0
false
"-fx-background-color: #B82025;" +\n              "-fx-text-fill: white;"

1176
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbarButton
24599
24623
558
onAction_=
Apply
false
0
false
button.onAction = action

1177
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbarButton
24617
24623
558
eventClosureWrapperWithParam
Apply
false
0
false
action

1178
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createGameTaskbarButton
23747
23774
540
createGameTaskbarButton
DefDef
false
0
false
def createGameTaskbarButton

1179
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
24935
24965
569
<init>
Apply
false
0
false
new BasicTextField(textString)

1180
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
24987
25259
570
apply
Apply
false
0
false
Map(\n            "-fx-background-color" -> "#231F20",\n            "-fx-text-fill" -> "white",\n            "-fx-font-size" -> "14px",\n            "-fx-font-family" -> "Ubuntu",\n            "-fx-padding" -> "10 20 10 20",\n            "-fx-background-radius" -> "5"\n        )

1181
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25004
25039
571
->
Apply
false
0
false
"-fx-background-color" -> "#231F20"

1182
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25053
25079
572
->
Apply
false
0
false
"-fx-text-fill" -> "white"

1183
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25093
25118
573
->
Apply
false
0
false
"-fx-font-size" -> "14px"

1184
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25132
25161
574
->
Apply
false
0
false
"-fx-font-family" -> "Ubuntu"

1185
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25175
25205
575
->
Apply
false
0
false
"-fx-padding" -> "10 20 10 20"

1186
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25219
25249
576
->
Apply
false
0
false
"-fx-background-radius" -> "5"

1187
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25290
25332
578
<init>
Apply
false
0
false
new StyleDecorator(basicTextField, styles)

1188
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
25341
25365
579
render
Apply
false
0
false
styledTextField.render()

1189
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
createStyledTextField
24845
24870
568
createStyledTextField
DefDef
false
0
false
def createStyledTextField

1190
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25587
26384
588
runLater
Apply
false
0
false
Platform.runLater {\n            if (gameState.isInstanceOf[GameStateUninitialized]) {\n                stage.scene = sceneUninitialized()\n            } else {\n                gameState.displayType match {\n                    case DisplayType.GAME =>\n                        stage.scene = gameScene(gameState)\n\n                    case DisplayType.COMBINATIONS =>\n                        stage.scene = combinationsScene(gameState)\n\n                    case DisplayType.SPOILER =>\n                        stage.scene = spoilerScene(gameState)\n\n                    case DisplayType.SUMMARY =>\n                        stage.scene = summaryScene(gameState)\n\n                    case DisplayType.HELP =>\n                        stage.scene = helpScene(gameState)\n                }\n            }\n        }

1191
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25689
25723
590
scene_=
Apply
false
0
false
stage.scene = sceneUninitialized()

1192
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25703
25723
590
sceneUninitialized
Apply
false
0
false
sceneUninitialized()

1193
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25671
25737
589
<none>
Block
true
0
false
{\n                stage.scene = sceneUninitialized()\n            }

1194
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25761
25782
592
displayType
Select
false
0
false
gameState.displayType

1195
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25860
25894
594
scene_=
Apply
false
0
false
stage.scene = gameScene(gameState)

1196
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25874
25894
594
gameScene
Apply
false
0
false
gameScene(gameState)

1197
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25833
25894
593
<none>
Block
true
0
false
=>\n                        stage.scene = gameScene(gameState)

1198
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25973
26015
597
scene_=
Apply
false
0
false
stage.scene = combinationsScene(gameState)

1199
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25987
26015
597
combinationsScene
Apply
false
0
false
combinationsScene(gameState)

1200
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25946
26015
596
<none>
Block
true
0
false
=>\n                        stage.scene = combinationsScene(gameState)

1201
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26089
26126
600
scene_=
Apply
false
0
false
stage.scene = spoilerScene(gameState)

1202
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26103
26126
600
spoilerScene
Apply
false
0
false
spoilerScene(gameState)

1203
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26062
26126
599
<none>
Block
true
0
false
=>\n                        stage.scene = spoilerScene(gameState)

1204
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26200
26237
603
scene_=
Apply
false
0
false
stage.scene = summaryScene(gameState)

1205
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26214
26237
603
summaryScene
Apply
false
0
false
summaryScene(gameState)

1206
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26173
26237
602
<none>
Block
true
0
false
=>\n                        stage.scene = summaryScene(gameState)

1207
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26308
26342
606
scene_=
Apply
false
0
false
stage.scene = helpScene(gameState)

1208
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26322
26342
606
helpScene
Apply
false
0
false
helpScene(gameState)

1209
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
26281
26342
605
<none>
Block
true
0
false
=>\n                        stage.scene = helpScene(gameState)

1210
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25743
26374
591
<none>
Block
true
0
false
{\n                gameState.displayType match {\n                    case DisplayType.GAME =>\n                        stage.scene = gameScene(gameState)\n\n                    case DisplayType.COMBINATIONS =>\n                        stage.scene = combinationsScene(gameState)\n\n                    case DisplayType.SPOILER =>\n                        stage.scene = spoilerScene(gameState)\n\n                    case DisplayType.SUMMARY =>\n                        stage.scene = summaryScene(gameState)\n\n                    case DisplayType.HELP =>\n                        stage.scene = helpScene(gameState)\n                }\n            }

1211
src/main/scala/view/GUIManager.scala
view
GUIManager
Object
view.GUIManager
update
25527
25546
587
update
DefDef
false
0
false
override def update

1212
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
572
593
21
displayType
Select
false
0
false
gameState.displayType

1213
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
637
665
22
print
Apply
false
0
false
print(printBoard(gameState))

1214
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
643
664
22
printBoard
Apply
false
0
false
printBoard(gameState)

1215
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
634
665
22
<none>
Block
true
0
false
=> print(printBoard(gameState))

1216
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
711
742
23
print
Apply
false
0
false
print(printOverview(gameState))

1217
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
717
741
23
printOverview
Apply
false
0
false
printOverview(gameState)

1218
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
708
742
23
<none>
Block
true
0
false
=> print(printOverview(gameState))

1219
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
780
798
24
print
Apply
false
0
false
print(printHelp())

1220
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
786
797
24
printHelp
Apply
false
0
false
printHelp()

1221
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
777
798
24
<none>
Block
true
0
false
=> print(printHelp())

1222
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
839
860
25
print
Apply
false
0
false
print(printSpoiler())

1223
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
845
859
25
printSpoiler
Apply
false
0
false
printSpoiler()

1224
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
836
860
25
<none>
Block
true
0
false
=> print(printSpoiler())

1225
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
901
931
26
print
Apply
false
0
false
print(printSummary(gameState))

1226
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
907
930
26
printSummary
Apply
false
0
false
printSummary(gameState)

1227
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
898
931
26
<none>
Block
true
0
false
=> print(printSummary(gameState))

1228
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
update
512
531
20
update
DefDef
false
0
false
override def update

1229
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1196
1387
36
wrapRefArray
Apply
false
0
false
s"""╔══════╗\n                      |║      ║\n                      |║      ║\n                      |║      ║\n                      |╚══════╝\n                      |""".stripMargin.split("\\n")

1230
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1196
1387
41
split
Apply
false
0
false
s"""╔══════╗\n                      |║      ║\n                      |║      ║\n                      |║      ║\n                      |╚══════╝\n                      |""".stripMargin.split("\\n")

1231
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1196
1363
36
augmentString
Apply
false
0
false
s"""╔══════╗\n                      |║      ║\n                      |║      ║\n                      |║      ║\n                      |╚══════╝\n                      |"""

1232
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1196
1363
36
s
Apply
false
0
false
s"""╔══════╗\n                      |║      ║\n                      |║      ║\n                      |║      ║\n                      |╚══════╝\n                      |"""

1233
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1196
1375
41
stripMargin
Select
false
0
false
s"""╔══════╗\n                      |║      ║\n                      |║      ║\n                      |║      ║\n                      |╚══════╝\n                      |""".stripMargin

1234
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1196
1394
41
toList
Select
false
0
false
s"""╔══════╗\n                      |║      ║\n                      |║      ║\n                      |║      ║\n                      |╚══════╝\n                      |""".stripMargin.split("\\n").toList

1235
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1420
1464
42
wrapRefArray
Apply
false
0
false
((" " * 8 + "\\n") * 4 + " " * 8).split("\\n")

1236
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1420
1464
42
split
Apply
false
0
false
((" " * 8 + "\\n") * 4 + " " * 8).split("\\n")

1237
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1421
1451
42
+
Apply
false
0
false
(" " * 8 + "\\n") * 4 + " " * 8

1238
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1421
1441
42
*
Apply
false
0
false
(" " * 8 + "\\n") * 4

1239
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1422
1436
42
augmentString
Apply
false
0
false
" " * 8 + "\\n"

1240
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1422
1436
42
+
Apply
false
0
false
" " * 8 + "\\n"

1241
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1422
1429
42
*
Apply
false
0
false
" " * 8

1242
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1422
1425
42
augmentString
Apply
false
0
false
" "

1243
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1444
1451
42
*
Apply
false
0
false
" " * 8

1244
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1444
1447
42
augmentString
Apply
false
0
false
" "

1245
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1420
1471
42
toList
Select
false
0
false
((" " * 8 + "\\n") * 4 + " " * 8).split("\\n").toList

1246
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1494
1588
44
mkString
Apply
false
0
false
List.fill(game.players(1).hand.cards.size)(card).transpose.map(_.mkString(" ")).mkString("\\n")

1247
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1494
1573
44
map
Apply
false
0
false
List.fill(game.players(1).hand.cards.size)(card).transpose.map(_.mkString(" "))

1248
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1494
1552
44
transpose
Apply
false
0
false
List.fill(game.players(1).hand.cards.size)(card).transpose

1249
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1494
1542
44
fill
Apply
false
0
false
List.fill(game.players(1).hand.cards.size)(card)

1250
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1504
1519
44
apply
Apply
false
0
false
game.players(1)

1251
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1504
1516
44
players
Select
false
0
false
game.players

1252
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1504
1535
44
size
Select
false
0
false
game.players(1).hand.cards.size

1253
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
1557
1572
44
mkString
Apply
false
0
false
_.mkString(" ")

1254
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1613
1623
46
board
Select
false
0
false
game.board

1255
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1613
1634
46
size
Select
false
0
false
game.board.cards.size

1256
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1659
1669
47
board
Select
false
0
false
game.board

1257
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1659
1680
47
size
Select
false
0
false
game.board.cards.size

1258
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1695
1705
47
board
Select
false
0
false
game.board

1259
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1695
1716
47
size
Select
false
0
false
game.board.cards.size

1260
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1695
1718
47
/
Apply
true
0
false
game.board.cards.size/2

1261
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1725
1735
47
board
Select
false
0
false
game.board

1262
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1725
1746
47
size
Select
false
0
false
game.board.cards.size

1263
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1725
1750
47
+
Apply
true
0
false
game.board.cards.size/2+1

1264
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1656
1750
47
<none>
If
true
0
false
if game.board.cards.size % 2 == 0 then game.board.cards.size/2 else  game.board.cards.size/2+1

1265
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1768
1769
48
<none>
Literal
true
0
false
4

1266
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
2352
59
mkString
Apply
false
0
false
game.board.cards.slice(0, bound).map(_.unicode)\n            .prependedAll(game.queuedCard match {\n                case Some(c) => List.fill(1)(cardSpacer).prepended(c.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .appendedAll(List.fill(1)(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(0, d.cards.size/2).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .transpose.map(_.mkString(" ")).mkString("\\n")

1267
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
2337
59
map
Apply
false
0
false
game.board.cards.slice(0, bound).map(_.unicode)\n            .prependedAll(game.queuedCard match {\n                case Some(c) => List.fill(1)(cardSpacer).prepended(c.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .appendedAll(List.fill(1)(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(0, d.cards.size/2).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .transpose.map(_.mkString(" "))

1268
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
2316
49
transpose
Apply
false
0
false
game.board.cards.slice(0, bound).map(_.unicode)\n            .prependedAll(game.queuedCard match {\n                case Some(c) => List.fill(1)(cardSpacer).prepended(c.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .appendedAll(List.fill(1)(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(0, d.cards.size/2).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .transpose

1269
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
2293
55
appendedAll
Apply
false
0
false
game.board.cards.slice(0, bound).map(_.unicode)\n            .prependedAll(game.queuedCard match {\n                case Some(c) => List.fill(1)(cardSpacer).prepended(c.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .appendedAll(List.fill(1)(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(0, d.cards.size/2).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })

1270
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
2094
54
appendedAll
Apply
false
0
false
game.board.cards.slice(0, bound).map(_.unicode)\n            .prependedAll(game.queuedCard match {\n                case Some(c) => List.fill(1)(cardSpacer).prepended(c.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .appendedAll(List.fill(1)(cardSpacer))

1271
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
2043
50
prependedAll
Apply
false
0
false
game.board.cards.slice(0, bound).map(_.unicode)\n            .prependedAll(game.queuedCard match {\n                case Some(c) => List.fill(1)(cardSpacer).prepended(c.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })

1272
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
1846
49
map
Apply
false
0
false
game.board.cards.slice(0, bound).map(_.unicode)

1273
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
1831
49
slice
Apply
false
0
false
game.board.cards.slice(0, bound)

1274
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1799
1809
49
board
Select
false
0
false
game.board

1275
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
1836
1845
49
unicode
Select
false
0
false
_.unicode

1276
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1873
1888
50
queuedCard
Select
false
0
false
game.queuedCard

1277
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1929
1974
51
prepended
Apply
false
0
false
List.fill(1)(cardSpacer).prepended(c.unicode)

1278
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1929
1953
51
fill
Apply
false
0
false
List.fill(1)(cardSpacer)

1279
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1964
1973
51
unicode
Select
false
0
false
c.unicode

1280
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1926
1974
51
<none>
Block
true
0
false
=> List.fill(1)(cardSpacer).prepended(c.unicode)

1281
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2004
2028
52
fill
Apply
false
0
false
List.fill(2)(cardSpacer)

1282
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2001
2028
52
<none>
Block
true
0
false
=> List.fill(2)(cardSpacer)

1283
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2069
2093
54
fill
Apply
false
0
false
List.fill(1)(cardSpacer)

1284
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2120
2136
55
matchedDeck
Select
false
0
false
game.matchedDeck

1285
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2177
2224
56
map
Apply
false
0
false
d.cards.slice(0, d.cards.size/2).map(_.unicode)

1286
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2177
2209
56
slice
Apply
false
0
false
d.cards.slice(0, d.cards.size/2)

1287
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2194
2206
56
size
Select
false
0
false
d.cards.size

1288
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
2214
2223
56
unicode
Select
false
0
false
_.unicode

1289
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2174
2224
56
<none>
Block
true
0
false
=> d.cards.slice(0, d.cards.size/2).map(_.unicode)

1290
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2254
2278
57
fill
Apply
false
0
false
List.fill(2)(cardSpacer)

1291
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2251
2278
57
<none>
Block
true
0
false
=> List.fill(2)(cardSpacer)

1292
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
2321
2336
59
mkString
Apply
false
0
false
_.mkString(" ")

1293
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
3057
71
mkString
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size).map(_.unicode).prependedAll(List.fill(2)(cardSpacer))\n            .appendedAll(List.fill(\n                if game.board.cards.size < 8\n                    then if game.board.cards.size < 5 then game.board.cards.size+1 else 5 - (game.board.cards.size-bound)\n                else if game.board.cards.size % 2 == 0 then 1 else 2\n            )(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(d.cards.size/2, d.cards.size).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .transpose.map(_.mkString(" ")).mkString("\\n")

1294
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
3042
71
map
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size).map(_.unicode).prependedAll(List.fill(2)(cardSpacer))\n            .appendedAll(List.fill(\n                if game.board.cards.size < 8\n                    then if game.board.cards.size < 5 then game.board.cards.size+1 else 5 - (game.board.cards.size-bound)\n                else if game.board.cards.size % 2 == 0 then 1 else 2\n            )(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(d.cards.size/2, d.cards.size).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .transpose.map(_.mkString(" "))

1295
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
3021
61
transpose
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size).map(_.unicode).prependedAll(List.fill(2)(cardSpacer))\n            .appendedAll(List.fill(\n                if game.board.cards.size < 8\n                    then if game.board.cards.size < 5 then game.board.cards.size+1 else 5 - (game.board.cards.size-bound)\n                else if game.board.cards.size % 2 == 0 then 1 else 2\n            )(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(d.cards.size/2, d.cards.size).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })\n            .transpose

1296
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
2998
67
appendedAll
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size).map(_.unicode).prependedAll(List.fill(2)(cardSpacer))\n            .appendedAll(List.fill(\n                if game.board.cards.size < 8\n                    then if game.board.cards.size < 5 then game.board.cards.size+1 else 5 - (game.board.cards.size-bound)\n                else if game.board.cards.size % 2 == 0 then 1 else 2\n            )(cardSpacer))\n            .appendedAll(game.matchedDeck match {\n                case Some(d) => d.cards.slice(d.cards.size/2, d.cards.size).map(_.unicode)\n                case None => List.fill(2)(cardSpacer)\n            })

1297
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
2788
62
appendedAll
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size).map(_.unicode).prependedAll(List.fill(2)(cardSpacer))\n            .appendedAll(List.fill(\n                if game.board.cards.size < 8\n                    then if game.board.cards.size < 5 then game.board.cards.size+1 else 5 - (game.board.cards.size-bound)\n                else if game.board.cards.size % 2 == 0 then 1 else 2\n            )(cardSpacer))

1298
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
2489
61
prependedAll
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size).map(_.unicode).prependedAll(List.fill(2)(cardSpacer))

1299
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
2450
61
map
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size).map(_.unicode)

1300
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
2435
61
slice
Apply
false
0
false
game.board.cards.slice(bound, game.board.cards.size)

1301
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2383
2393
61
board
Select
false
0
false
game.board

1302
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2413
2423
61
board
Select
false
0
false
game.board

1303
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2413
2434
61
size
Select
false
0
false
game.board.cards.size

1304
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
2440
2449
61
unicode
Select
false
0
false
_.unicode

1305
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2464
2488
61
fill
Apply
false
0
false
List.fill(2)(cardSpacer)

1306
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2515
2787
66
fill
Apply
false
0
false
List.fill(\n                if game.board.cards.size < 8\n                    then if game.board.cards.size < 5 then game.board.cards.size+1 else 5 - (game.board.cards.size-bound)\n                else if game.board.cards.size % 2 == 0 then 1 else 2\n            )(cardSpacer)

1307
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2545
2555
63
board
Select
false
0
false
game.board

1308
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2545
2566
63
size
Select
false
0
false
game.board.cards.size

1309
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2599
2609
64
board
Select
false
0
false
game.board

1310
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2599
2620
64
size
Select
false
0
false
game.board.cards.size

1311
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2630
2640
64
board
Select
false
0
false
game.board

1312
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2630
2651
64
size
Select
false
0
false
game.board.cards.size

1313
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2630
2653
64
+
Apply
true
0
false
game.board.cards.size+1

1314
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2664
2674
64
board
Select
false
0
false
game.board

1315
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2664
2685
64
size
Select
false
0
false
game.board.cards.size

1316
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2659
2691
64
-
Apply
true
0
false
5 - (game.board.cards.size-bound

1317
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2596
2692
64
<none>
If
true
0
false
if game.board.cards.size < 5 then game.board.cards.size+1 else 5 - (game.board.cards.size-bound)

1318
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2717
2727
65
board
Select
false
0
false
game.board

1319
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2717
2738
65
size
Select
false
0
false
game.board.cards.size

1320
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2753
2754
65
<none>
Literal
true
0
false
1

1321
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2760
2761
65
<none>
Literal
true
0
false
2

1322
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2714
2761
65
<none>
If
true
0
false
if game.board.cards.size % 2 == 0 then 1 else 2

1323
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2814
2830
67
matchedDeck
Select
false
0
false
game.matchedDeck

1324
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2871
2929
68
map
Apply
false
0
false
d.cards.slice(d.cards.size/2, d.cards.size).map(_.unicode)

1325
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2871
2914
68
slice
Apply
false
0
false
d.cards.slice(d.cards.size/2, d.cards.size)

1326
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2885
2897
68
size
Select
false
0
false
d.cards.size

1327
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2901
2913
68
size
Select
false
0
false
d.cards.size

1328
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
2919
2928
68
unicode
Select
false
0
false
_.unicode

1329
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2868
2929
68
<none>
Block
true
0
false
=> d.cards.slice(d.cards.size/2, d.cards.size).map(_.unicode)

1330
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2959
2983
69
fill
Apply
false
0
false
List.fill(2)(cardSpacer)

1331
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
2956
2983
69
<none>
Block
true
0
false
=> List.fill(2)(cardSpacer)

1332
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
3026
3041
71
mkString
Apply
false
0
false
_.mkString(" ")

1333
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3083
3172
73
mkString
Apply
false
0
false
game.players.head.hand.cards.map(_.unicode).transpose.map(_.mkString(" ")).mkString("\\n")

1334
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3083
3157
73
map
Apply
false
0
false
game.players.head.hand.cards.map(_.unicode).transpose.map(_.mkString(" "))

1335
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3083
3136
73
transpose
Apply
false
0
false
game.players.head.hand.cards.map(_.unicode).transpose

1336
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3083
3126
73
map
Apply
false
0
false
game.players.head.hand.cards.map(_.unicode)

1337
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3083
3095
73
players
Select
false
0
false
game.players

1338
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3083
3100
73
head
Select
false
0
false
game.players.head

1339
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
3116
3125
73
unicode
Select
false
0
false
_.unicode

1340
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
3141
3156
73
mkString
Apply
false
0
false
_.mkString(" ")

1341
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3198
3209
75
stdout
Select
false
0
false
game.stdout

1342
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3251
3267
76
s
Apply
false
0
false
s"\\n[]: $stdout"

1343
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3248
3267
76
<none>
Block
true
0
false
=> s"\\n[]: $stdout"

1344
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3290
3295
77
<none>
Block
true
0
false
=> ""

1345
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3331
3342
80
stderr
Select
false
0
false
game.stderr

1346
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3384
3405
81
s
Apply
false
0
false
s"\\n[error]: $stderr"

1347
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3381
3405
81
<none>
Block
true
0
false
=> s"\\n[error]: $stderr"

1348
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3428
3433
82
<none>
Block
true
0
false
=> ""

1349
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3672
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow + "\\n" + lowerMiddleRow + "\\n\\n" + bottomRow + stdoutRow + stderrRow + "\\n"

1350
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3665
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow + "\\n" + lowerMiddleRow + "\\n\\n" + bottomRow + stdoutRow + stderrRow

1351
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3653
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow + "\\n" + lowerMiddleRow + "\\n\\n" + bottomRow + stdoutRow

1352
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3641
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow + "\\n" + lowerMiddleRow + "\\n\\n" + bottomRow

1353
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3629
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow + "\\n" + lowerMiddleRow + "\\n\\n"

1354
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3620
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow + "\\n" + lowerMiddleRow

1355
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3603
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow + "\\n"

1356
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3596
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n" + upperMiddleRow

1357
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3579
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow + "\\n\\n"

1358
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3570
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"\n            + topRow

1359
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3453
3549
85
+
Apply
false
0
false
clearScreen + s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"

1360
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3467
3549
85
s
Apply
false
0
false
s"Current player: ${game.players.head.name}\\tPoints: ${game.players.head.score}\\n"

1361
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3487
3499
85
players
Select
false
0
false
game.players

1362
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3487
3504
85
head
Select
false
0
false
game.players.head

1363
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3522
3534
85
players
Select
false
0
false
game.players

1364
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
3522
3539
85
head
Select
false
0
false
game.players.head

1365
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printBoard
1133
1147
35
printBoard
DefDef
false
0
false
def printBoard

1366
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printHelp
3848
6698
96
+
Apply
false
0
false
clearScreen +\n            """\n              |╔════════════════════════════════════════════════════════════════════════╗\n              |║                                Hanafuda Help                           ║\n              |╠════════════════════════════════════════════════════════════════════════╣\n              |║ Welcome to Hanafuda! Here are the commands you can use:                ║\n              |║                                                                        ║\n              |║ 1. start <firstPlayer> <secondPlayer>                                  ║\n              |║    - Starts a new game with the given player names.                    ║\n              |║                                                                        ║\n              |║ 2. continue [shortcut "con"]                                           ║\n              |║    - return to the current game.                                       ║\n              |║                                                                        ║\n              |║ 2. match <x> <y>                                                       ║\n              |║    - Matches cards at positions x and y on the board.                  ║\n              |║                                                                        ║\n              |║ 3. discard [<x>]                                                       ║\n              |║    - discard card at given number.                                     ║\n              |║    - argument x is only to be provided when discarding from hand       ║\n              |║                                                                        ║\n              |║ 4. new                                                                 ║\n              |║    - takes player names and creates a new game from scratch            ║\n              |║                                                                        ║\n              |║ 5. combinations [shortcut "com"]                                       ║\n              |║    - Displays the possible combinations of cards.                      ║\n              |║                                                                        ║\n              |║ 6. help                                                                ║\n              |║    - Displays this help page.                                          ║\n              |║                                                                        ║\n              |║ 7. exit                                                                ║\n              |║    - Exits the game.                                                   ║\n              |║                                                                        ║\n              |╚════════════════════════════════════════════════════════════════════════╝\n              |""".stripMargin

1367
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printHelp
3874
6686
97
augmentString
Apply
false
0
false
"""\n              |╔════════════════════════════════════════════════════════════════════════╗\n              |║                                Hanafuda Help                           ║\n              |╠════════════════════════════════════════════════════════════════════════╣\n              |║ Welcome to Hanafuda! Here are the commands you can use:                ║\n              |║                                                                        ║\n              |║ 1. start <firstPlayer> <secondPlayer>                                  ║\n              |║    - Starts a new game with the given player names.                    ║\n              |║                                                                        ║\n              |║ 2. continue [shortcut "con"]                                           ║\n              |║    - return to the current game.                                       ║\n              |║                                                                        ║\n              |║ 2. match <x> <y>                                                       ║\n              |║    - Matches cards at positions x and y on the board.                  ║\n              |║                                                                        ║\n              |║ 3. discard [<x>]                                                       ║\n              |║    - discard card at given number.                                     ║\n              |║    - argument x is only to be provided when discarding from hand       ║\n              |║                                                                        ║\n              |║ 4. new                                                                 ║\n              |║    - takes player names and creates a new game from scratch            ║\n              |║                                                                        ║\n              |║ 5. combinations [shortcut "com"]                                       ║\n              |║    - Displays the possible combinations of cards.                      ║\n              |║                                                                        ║\n              |║ 6. help                                                                ║\n              |║    - Displays this help page.                                          ║\n              |║                                                                        ║\n              |║ 7. exit                                                                ║\n              |║    - Exits the game.                                                   ║\n              |║                                                                        ║\n              |╚════════════════════════════════════════════════════════════════════════╝\n              |"""

1368
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printHelp
3874
6698
129
stripMargin
Select
false
0
false
"""\n              |╔════════════════════════════════════════════════════════════════════════╗\n              |║                                Hanafuda Help                           ║\n              |╠════════════════════════════════════════════════════════════════════════╣\n              |║ Welcome to Hanafuda! Here are the commands you can use:                ║\n              |║                                                                        ║\n              |║ 1. start <firstPlayer> <secondPlayer>                                  ║\n              |║    - Starts a new game with the given player names.                    ║\n              |║                                                                        ║\n              |║ 2. continue [shortcut "con"]                                           ║\n              |║    - return to the current game.                                       ║\n              |║                                                                        ║\n              |║ 2. match <x> <y>                                                       ║\n              |║    - Matches cards at positions x and y on the board.                  ║\n              |║                                                                        ║\n              |║ 3. discard [<x>]                                                       ║\n              |║    - discard card at given number.                                     ║\n              |║    - argument x is only to be provided when discarding from hand       ║\n              |║                                                                        ║\n              |║ 4. new                                                                 ║\n              |║    - takes player names and creates a new game from scratch            ║\n              |║                                                                        ║\n              |║ 5. combinations [shortcut "com"]                                       ║\n              |║    - Displays the possible combinations of cards.                      ║\n              |║                                                                        ║\n              |║ 6. help                                                                ║\n              |║    - Displays this help page.                                          ║\n              |║                                                                        ║\n              |║ 7. exit                                                                ║\n              |║    - Exits the game.                                                   ║\n              |║                                                                        ║\n              |╚════════════════════════════════════════════════════════════════════════╝\n              |""".stripMargin

1369
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printHelp
3785
3798
94
printHelp
DefDef
false
0
false
def printHelp

1370
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSpoiler
6922
9010
140
+
Apply
false
0
false
clearScreen +\n              """\n                |╔════════════════════════════════════════════════════════════════════════╗\n                |║                          Spoiler Protection                            ║\n                |╠════════════════════════════════════════════════════════════════════════╣\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                  Type "continue" to advance the game                   ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |╚════════════════════════════════════════════════════════════════════════╝\n                |""".stripMargin

1371
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSpoiler
6950
8998
141
augmentString
Apply
false
0
false
"""\n                |╔════════════════════════════════════════════════════════════════════════╗\n                |║                          Spoiler Protection                            ║\n                |╠════════════════════════════════════════════════════════════════════════╣\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                  Type "continue" to advance the game                   ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |╚════════════════════════════════════════════════════════════════════════╝\n                |"""

1372
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSpoiler
6950
9010
164
stripMargin
Select
false
0
false
"""\n                |╔════════════════════════════════════════════════════════════════════════╗\n                |║                          Spoiler Protection                            ║\n                |╠════════════════════════════════════════════════════════════════════════╣\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                  Type "continue" to advance the game                   ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |║                                                                        ║\n                |╚════════════════════════════════════════════════════════════════════════╝\n                |""".stripMargin

1373
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSpoiler
6856
6872
138
printSpoiler
DefDef
false
0
false
def printSpoiler

1374
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9328
9339
176
length
Apply
false
0
false
name.length

1375
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9346
9367
176
+
Apply
false
0
false
name.take(17) + "..."

1376
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9346
9359
176
take
Apply
false
0
false
name.take(17)

1377
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9346
9350
176
augmentString
Apply
false
0
false
name

1378
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9346
9367
176
+
Apply
true
0
false
name.take(17) + "..."

1379
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9373
9392
176
padTo
Apply
false
0
false
name.padTo(20, ' ')

1380
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9373
9377
176
augmentString
Apply
false
0
false
name

1381
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9373
9392
176
padTo
Apply
true
0
false
name.padTo(20, ' ')

1382
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
formatPlayerName
9265
9285
175
formatPlayerName
DefDef
false
0
false
def formatPlayerName

1383
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9431
10167
178
+
Apply
false
0
false
clearScreen +\n            s"""\n               |╔═══════════════════════════════════════════════════════════════════════╗\n               |║                                Summary                                ║\n               |╠═══════════════════════════════════════════════════════════════════════╣\n               |║                         Score of each player                          ║\n               |╠═════════════════════════╦══════════════════════╦══════════════════════╣\n               |║          Yaku           ║ ${formatPlayerName(game.players.head.name)} ║ ${formatPlayerName(game.players(1).name)} ║\n               |╠═════════════════════════╬══════════════════════╬══════════════════════╣\n               |""".stripMargin

1384
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9457
10155
179
augmentString
Apply
false
0
false
s"""\n               |╔═══════════════════════════════════════════════════════════════════════╗\n               |║                                Summary                                ║\n               |╠═══════════════════════════════════════════════════════════════════════╣\n               |║                         Score of each player                          ║\n               |╠═════════════════════════╦══════════════════════╦══════════════════════╣\n               |║          Yaku           ║ ${formatPlayerName(game.players.head.name)} ║ ${formatPlayerName(game.players(1).name)} ║\n               |╠═════════════════════════╬══════════════════════╬══════════════════════╣\n               |"""

1385
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9457
10155
179
s
Apply
false
0
false
s"""\n               |╔═══════════════════════════════════════════════════════════════════════╗\n               |║                                Summary                                ║\n               |╠═══════════════════════════════════════════════════════════════════════╣\n               |║                         Score of each player                          ║\n               |╠═════════════════════════╦══════════════════════╦══════════════════════╣\n               |║          Yaku           ║ ${formatPlayerName(game.players.head.name)} ║ ${formatPlayerName(game.players(1).name)} ║\n               |╠═════════════════════════╬══════════════════════╬══════════════════════╣\n               |"""

1386
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9958
9998
185
formatPlayerName
Apply
false
0
false
formatPlayerName(game.players.head.name)

1387
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9975
9987
185
players
Select
false
0
false
game.players

1388
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9975
9992
185
head
Select
false
0
false
game.players.head

1389
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10004
10042
185
formatPlayerName
Apply
false
0
false
formatPlayerName(game.players(1).name)

1390
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10021
10036
185
apply
Apply
false
0
false
game.players(1)

1391
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10021
10033
185
players
Select
false
0
false
game.players

1392
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9457
10167
187
stripMargin
Select
false
0
false
s"""\n               |╔═══════════════════════════════════════════════════════════════════════╗\n               |║                                Summary                                ║\n               |╠═══════════════════════════════════════════════════════════════════════╣\n               |║                         Score of each player                          ║\n               |╠═════════════════════════╦══════════════════════╦══════════════════════╣\n               |║          Yaku           ║ ${formatPlayerName(game.players.head.name)} ║ ${formatPlayerName(game.players(1).name)} ║\n               |╠═════════════════════════╬══════════════════════╬══════════════════════╣\n               |""".stripMargin

1393
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10199
10637
193
mkString
Apply
false
0
false
yakuCombinations.appendedAll(instantWinCombinations).map { combo =>\n            val player1Score = if (game.asInstanceOf[GameStateSummary].outOfCardsEnding) 0 else combo.evaluate(game.players.head)\n            val player2Score = if (game.asInstanceOf[GameStateSummary].outOfCardsEnding) 0 else combo.evaluate(game.players(1))\n            f"║ ${combo.unicodeShort}%-23s ║ $player1Score%-20d ║ $player2Score%-20d ║"\n        }.mkString("\\n")

1394
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10199
10622
189
map
Apply
false
0
false
yakuCombinations.appendedAll(instantWinCombinations).map { combo =>\n            val player1Score = if (game.asInstanceOf[GameStateSummary].outOfCardsEnding) 0 else combo.evaluate(game.players.head)\n            val player2Score = if (game.asInstanceOf[GameStateSummary].outOfCardsEnding) 0 else combo.evaluate(game.players(1))\n            f"║ ${combo.unicodeShort}%-23s ║ $player1Score%-20d ║ $player2Score%-20d ║"\n        }

1395
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10199
10251
189
appendedAll
Apply
false
0
false
yakuCombinations.appendedAll(instantWinCombinations)

1396
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10356
10357
190
<none>
Literal
true
0
false
0

1397
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10363
10396
190
evaluate
Apply
false
0
false
combo.evaluate(game.players.head)

1398
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10378
10390
190
players
Select
false
0
false
game.players

1399
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10378
10395
190
head
Select
false
0
false
game.players.head

1400
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10363
10396
190
evaluate
Apply
true
0
false
combo.evaluate(game.players.head)

1401
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10486
10487
191
<none>
Literal
true
0
false
0

1402
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10493
10524
191
evaluate
Apply
false
0
false
combo.evaluate(game.players(1))

1403
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10508
10523
191
apply
Apply
false
0
false
game.players(1)

1404
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10508
10520
191
players
Select
false
0
false
game.players

1405
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10493
10524
191
evaluate
Apply
true
0
false
combo.evaluate(game.players(1))

1406
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
10537
10612
192
f
Apply
false
0
false
f"║ ${combo.unicodeShort}%-23s ║ $player1Score%-20d ║ $player2Score%-20d ║"

1407
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10679
10790
196
augmentString
Apply
false
0
false
"""\n              |╚═════════════════════════╩══════════════════════╩══════════════════════╝\n              |"""

1408
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10679
10802
198
stripMargin
Select
false
0
false
"""\n              |╚═════════════════════════╩══════════════════════╩══════════════════════╝\n              |""".stripMargin

1409
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10812
10859
200
+
Apply
false
0
false
summaryHeader + combinationRows + summaryFooter

1410
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
10812
10843
200
+
Apply
false
0
false
summaryHeader + combinationRows

1411
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printSummary
9211
9227
174
printSummary
DefDef
false
0
false
def printSummary

1412
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11182
11393
211
+
Apply
false
0
false
"Gokō (五光) \\"Five Hikari\\"\\t10pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1413
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11182
11384
211
+
Apply
false
0
false
"Gokō (五光) \\"Five Hikari\\"\\t10pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1414
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11236
11384
211
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1415
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11236
11369
211
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1416
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11236
11348
211
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose

1417
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11236
11338
211
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c))

1418
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11236
11298
211
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.HIKARI)

1419
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11236
11254
211
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1420
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
11308
11337
211
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1421
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
11353
11368
211
mkString
Apply
false
0
false
_.mkString(" ")

1422
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11414
11661
212
+
Apply
false
0
false
"Shikō (四光) \\"Four Hikari\\"\\t8pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1423
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11414
11652
212
+
Apply
false
0
false
"Shikō (四光) \\"Four Hikari\\"\\t8pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1424
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11468
11652
212
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1425
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11468
11637
212
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1426
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11468
11616
212
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose

1427
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11468
11606
212
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c))

1428
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11468
11566
212
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN)

1429
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11468
11486
212
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1430
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
11576
11605
212
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1431
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
11621
11636
212
mkString
Apply
false
0
false
_.mkString(" ")

1432
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11685
11920
213
+
Apply
false
0
false
"Ame-Shikō (雨四光) \\"Rainy Four Hikari\\"\\t7pts.\\t(Rain + any other 3)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1433
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11685
11911
213
+
Apply
false
0
false
"Ame-Shikō (雨四光) \\"Rainy Four Hikari\\"\\t7pts.\\t(Rain + any other 3)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1434
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11758
11911
213
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1435
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11758
11896
213
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1436
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11758
11875
213
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c)).transpose

1437
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11758
11865
213
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI).map(c => colorizeOverviewCard(game, c))

1438
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11758
11825
213
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI)

1439
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11758
11776
213
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1440
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
11835
11864
213
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1441
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
11880
11895
213
mkString
Apply
false
0
false
_.mkString(" ")

1442
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11941
12199
214
+
Apply
false
0
false
"Sankō (三光) \\"Three Hikari\\"\\t6pts.\\t(Any 3 excluding Rain)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1443
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11941
12190
214
+
Apply
false
0
false
"Sankō (三光) \\"Three Hikari\\"\\t6pts.\\t(Any 3 excluding Rain)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1444
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12006
12190
214
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1445
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12006
12175
214
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1446
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12006
12154
214
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c)).transpose

1447
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12006
12144
214
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN).map(c => colorizeOverviewCard(game, c))

1448
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12006
12104
214
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.HIKARI && c.cardName != CardName.RAIN)

1449
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12006
12024
214
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1450
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
12114
12143
214
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1451
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
12159
12174
214
mkString
Apply
false
0
false
_.mkString(" ")

1452
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12226
12484
215
+
Apply
false
0
false
"Tsukimi-zake (月見酒) \\"Moon Viewing\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1453
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12226
12475
215
+
Apply
false
0
false
"Tsukimi-zake (月見酒) \\"Moon Viewing\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1454
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12289
12475
215
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1455
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12289
12460
215
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1456
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12289
12439
215
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose

1457
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12289
12429
215
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c))

1458
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12289
12389
215
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.MOON || c.cardName == CardName.SAKE_CUP)

1459
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12289
12307
215
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1460
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
12399
12428
215
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1461
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
12444
12459
215
mkString
Apply
false
0
false
_.mkString(" ")

1462
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12510
12780
216
+
Apply
false
0
false
"Hanami-zake (花見酒) \\"Cherry Blossom Viewing\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1463
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12510
12771
216
+
Apply
false
0
false
"Hanami-zake (花見酒) \\"Cherry Blossom Viewing\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1464
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12582
12771
216
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1465
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12582
12756
216
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1466
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12582
12735
216
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c)).transpose

1467
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12582
12725
216
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP).map(c => colorizeOverviewCard(game, c))

1468
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12582
12685
216
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.CURTAIN || c.cardName == CardName.SAKE_CUP)

1469
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12582
12600
216
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1470
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
12695
12724
216
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1471
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
12740
12755
216
mkString
Apply
false
0
false
_.mkString(" ")

1472
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12807
13107
217
+
Apply
false
0
false
"Inoshikachō (猪鹿蝶) \\"Boar, Deer, Butterfly\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1473
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12807
13098
217
+
Apply
false
0
false
"Inoshikachō (猪鹿蝶) \\"Boar, Deer, Butterfly\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1474
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12878
13098
217
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1475
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12878
13083
217
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1476
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12878
13062
217
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES).map(c => colorizeOverviewCard(game, c)).transpose

1477
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12878
13052
217
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES).map(c => colorizeOverviewCard(game, c))

1478
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12878
13012
217
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.BOAR || c.cardName == CardName.DEER || c.cardName == CardName.BUTTERFLIES)

1479
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
12878
12896
217
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1480
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13022
13051
217
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1481
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13067
13082
217
mkString
Apply
false
0
false
_.mkString(" ")

1482
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13127
13345
218
+
Apply
false
0
false
"Tane (タネ) \\t1pt.\\t(Any 5 Tane, +1pt for each extra)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1483
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13127
13336
218
+
Apply
false
0
false
"Tane (タネ) \\t1pt.\\t(Any 5 Tane, +1pt for each extra)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1484
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13185
13336
218
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1485
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13185
13321
218
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1486
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13185
13300
218
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE).map(c => colorizeOverviewCard(game, c)).transpose

1487
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13185
13290
218
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE).map(c => colorizeOverviewCard(game, c))

1488
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13185
13250
218
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANE)

1489
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13185
13203
218
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1490
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13260
13289
218
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1491
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13305
13320
218
mkString
Apply
false
0
false
_.mkString(" ")

1492
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13372
13667
219
+
Apply
false
0
false
"Akatan Aotan no Chōfuku (赤短青短の重複) \\"Red Poem, Blue Poem\\"\\t10pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1493
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13372
13658
219
+
Apply
false
0
false
"Akatan Aotan no Chōfuku (赤短青短の重複) \\"Red Poem, Blue Poem\\"\\t10pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1494
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13458
13658
219
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1495
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13458
13643
219
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1496
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13458
13622
219
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose

1497
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13458
13612
219
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c))

1498
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13458
13572
219
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardName == CardName.POETRY_TANZAKU || c.cardName == CardName.BLUE_TANZAKU)

1499
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13458
13476
219
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1500
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13582
13611
219
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1501
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13627
13642
219
mkString
Apply
false
0
false
_.mkString(" ")

1502
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13689
13906
220
+
Apply
false
0
false
"Akatan (赤短) \\"Red Poem\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1503
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13689
13897
220
+
Apply
false
0
false
"Akatan (赤短) \\"Red Poem\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1504
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13741
13897
220
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1505
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13741
13882
220
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1506
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13741
13861
220
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose

1507
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13741
13851
220
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU).map(c => colorizeOverviewCard(game, c))

1508
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13741
13811
220
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.POETRY_TANZAKU)

1509
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13741
13759
220
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1510
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13821
13850
220
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1511
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
13866
13881
220
mkString
Apply
false
0
false
_.mkString(" ")

1512
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13927
14142
221
+
Apply
false
0
false
"Aotan (青短) \\"Blue Poem\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1513
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13927
14133
221
+
Apply
false
0
false
"Aotan (青短) \\"Blue Poem\\"\\t5pts.\\t(exact yaku)\\n" + Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1514
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13979
14133
221
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1515
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13979
14118
221
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1516
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13979
14097
221
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose

1517
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13979
14087
221
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU).map(c => colorizeOverviewCard(game, c))

1518
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13979
14047
221
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardName == CardName.BLUE_TANZAKU)

1519
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
13979
13997
221
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1520
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14057
14086
221
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1521
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14102
14117
221
mkString
Apply
false
0
false
_.mkString(" ")

1522
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14165
14403
222
+
Apply
false
0
false
"Tanzaku (短冊) \\"Ribbons\\"\\t1pt.\\t(Any 5 Tanzaku, +1pt for each extra)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n") + "\\n\\n"

1523
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14165
14394
222
+
Apply
false
0
false
"Tanzaku (短冊) \\"Ribbons\\"\\t1pt.\\t(Any 5 Tanzaku, +1pt for each extra)\\n" + Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1524
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14240
14394
222
mkString
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" ")).mkString("\\n")

1525
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14240
14379
222
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose.map(_.mkString(" "))

1526
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14240
14358
222
transpose
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU).map(c => colorizeOverviewCard(game, c)).transpose

1527
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14240
14348
222
map
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU).map(c => colorizeOverviewCard(game, c))

1528
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14240
14308
222
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(c => c.cardType == CardType.TANZAKU)

1529
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14240
14258
222
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1530
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14318
14347
222
colorizeOverviewCard
Apply
false
0
false
colorizeOverviewCard(game, c)

1531
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14363
14378
222
mkString
Apply
false
0
false
_.mkString(" ")

1532
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14457
14469
224
players
Select
false
0
false
game.players

1533
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14457
14474
224
head
Select
false
0
false
game.players.head

1534
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14476
14491
224
apply
Apply
false
0
false
game.players(1)

1535
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14476
14488
224
players
Select
false
0
false
game.players

1536
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14493
14503
224
empty
Select
false
0
false
List.empty

1537
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14560
15841
225
foldLeft
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.KASU).foldLeft(initialState) {\n                case ((tempHead, tempTail, acc), card) =>\n                    if (tempHead.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)) {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[32m$line\\u001b[0m")\n                        val updatedHead = tempHead.copy(side = Deck(tempHead.side.cards.patch(tempHead.side.cards.indexOf(card), Nil, 1)))\n                        (updatedHead, tempTail, acc :+ colorizedCard)\n                    } else if (tempTail.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)) {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[31m$line\\u001b[0m")\n                        val updatedTail = tempTail.copy(side = Deck(tempTail.side.cards.patch(tempTail.side.cards.indexOf(card), Nil, 1)))\n                        (tempHead, updatedTail, acc :+ colorizedCard)\n                    } else {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[0m$line\\u001b[0m")\n                        (tempHead, tempTail, acc :+ colorizedCard)\n                    }\n            }

1538
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14560
14620
225
filter
Apply
false
0
false
Deck.defaultDeck().cards.filter(_.cardType == CardType.KASU)

1539
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14560
14578
225
defaultDeck
Apply
false
0
false
Deck.defaultDeck()

1540
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14728
14844
227
exists
Apply
false
0
false
tempHead.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)

1541
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14892
14945
228
map
Apply
false
0
false
card.unicode.map(line => s"\\u001b[32m$line\\u001b[0m")

1542
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14892
14904
228
unicode
Select
false
0
false
card.unicode

1543
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14917
14944
228
s
Apply
false
0
false
s"\\u001b[32m$line\\u001b[0m"

1544
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15014
15082
229
patch
Apply
false
0
false
tempHead.side.cards.patch(tempHead.side.cards.indexOf(card), Nil, 1)

1545
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15040
15073
229
indexOf
Apply
false
0
false
tempHead.side.cards.indexOf(card)

1546
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15133
15153
230
:+
Apply
false
0
false
acc :+ colorizedCard

1547
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14846
15176
227
<none>
Block
true
0
false
{\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[32m$line\\u001b[0m")\n                        val updatedHead = tempHead.copy(side = Deck(tempHead.side.cards.patch(tempHead.side.cards.indexOf(card), Nil, 1)))\n                        (updatedHead, tempTail, acc :+ colorizedCard)\n                    }

1548
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15186
15302
231
exists
Apply
false
0
false
tempTail.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)

1549
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15350
15403
232
map
Apply
false
0
false
card.unicode.map(line => s"\\u001b[31m$line\\u001b[0m")

1550
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15350
15362
232
unicode
Select
false
0
false
card.unicode

1551
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15375
15402
232
s
Apply
false
0
false
s"\\u001b[31m$line\\u001b[0m"

1552
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15472
15540
233
patch
Apply
false
0
false
tempTail.side.cards.patch(tempTail.side.cards.indexOf(card), Nil, 1)

1553
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15498
15531
233
indexOf
Apply
false
0
false
tempTail.side.cards.indexOf(card)

1554
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15591
15611
234
:+
Apply
false
0
false
acc :+ colorizedCard

1555
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15304
15634
231
<none>
Block
true
0
false
{\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[31m$line\\u001b[0m")\n                        val updatedTail = tempTail.copy(side = Deck(tempTail.side.cards.patch(tempTail.side.cards.indexOf(card), Nil, 1)))\n                        (tempHead, updatedTail, acc :+ colorizedCard)\n                    }

1556
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15686
15738
236
map
Apply
false
0
false
card.unicode.map(line => s"\\u001b[0m$line\\u001b[0m")

1557
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15686
15698
236
unicode
Select
false
0
false
card.unicode

1558
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15711
15737
236
s
Apply
false
0
false
s"\\u001b[0m$line\\u001b[0m"

1559
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15784
15804
237
:+
Apply
false
0
false
acc :+ colorizedCard

1560
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15640
15827
235
<none>
Block
true
0
false
{\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[0m$line\\u001b[0m")\n                        (tempHead, tempTail, acc :+ colorizedCard)\n                    }

1561
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15182
15827
231
<none>
If
true
0
false
if (tempTail.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)) {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[31m$line\\u001b[0m")\n                        val updatedTail = tempTail.copy(side = Deck(tempTail.side.cards.patch(tempTail.side.cards.indexOf(card), Nil, 1)))\n                        (tempHead, updatedTail, acc :+ colorizedCard)\n                    } else {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[0m$line\\u001b[0m")\n                        (tempHead, tempTail, acc :+ colorizedCard)\n                    }

1562
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
14701
15827
226
<none>
Block
true
0
false
=>\n                    if (tempHead.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)) {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[32m$line\\u001b[0m")\n                        val updatedHead = tempHead.copy(side = Deck(tempHead.side.cards.patch(tempHead.side.cards.indexOf(card), Nil, 1)))\n                        (updatedHead, tempTail, acc :+ colorizedCard)\n                    } else if (tempTail.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)) {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[31m$line\\u001b[0m")\n                        val updatedTail = tempTail.copy(side = Deck(tempTail.side.cards.patch(tempTail.side.cards.indexOf(card), Nil, 1)))\n                        (tempHead, updatedTail, acc :+ colorizedCard)\n                    } else {\n                        val colorizedCard = card.unicode.map(line => s"\\u001b[0m$line\\u001b[0m")\n                        (tempHead, tempTail, acc :+ colorizedCard)\n                    }

1563
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
14557
14557
225
colorizedCards
Typed
true
0
false


1564
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
15854
16072
240
+
Apply
false
0
false
"Kasu (カス) \\t1pt.\\t(Any 10 Kasu, +1pt for each extra)\\n" +\n                colorizedCards.grouped(10)\n                    .map(_.transpose.map(_.mkString(" ")).mkString("\\n"))\n                    .mkString("\\n") + "\\n"

1565
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
15854
16065
240
+
Apply
false
0
false
"Kasu (カス) \\t1pt.\\t(Any 10 Kasu, +1pt for each extra)\\n" +\n                colorizedCards.grouped(10)\n                    .map(_.transpose.map(_.mkString(" ")).mkString("\\n"))\n                    .mkString("\\n")

1566
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
15929
16065
243
mkString
Apply
false
0
false
colorizedCards.grouped(10)\n                    .map(_.transpose.map(_.mkString(" ")).mkString("\\n"))\n                    .mkString("\\n")

1567
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
15929
16029
242
map
Apply
false
0
false
colorizedCards.grouped(10)\n                    .map(_.transpose.map(_.mkString(" ")).mkString("\\n"))

1568
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
15929
15955
241
grouped
Apply
false
0
false
colorizedCards.grouped(10)

1569
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15981
16028
242
mkString
Apply
false
0
false
_.transpose.map(_.mkString(" ")).mkString("\\n")

1570
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15981
16013
242
map
Apply
false
0
false
_.transpose.map(_.mkString(" "))

1571
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15981
15992
242
transpose
Apply
false
0
false
_.transpose

1572
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
15997
16012
242
mkString
Apply
false
0
false
_.mkString(" ")

1573
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16247
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake + inoshikacho + tane + akatanAotan + akatan + aotan + tanzaku + kasu

1574
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16240
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake + inoshikacho + tane + akatanAotan + akatan + aotan + tanzaku

1575
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16230
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake + inoshikacho + tane + akatanAotan + akatan + aotan

1576
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16222
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake + inoshikacho + tane + akatanAotan + akatan

1577
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16213
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake + inoshikacho + tane + akatanAotan

1578
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16199
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake + inoshikacho + tane

1579
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16192
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake + inoshikacho

1580
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16178
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake + hanamiZake

1581
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16165
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko + tsukimiZake

1582
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16151
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko + sanko

1583
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16143
245
+
Apply
false
0
false
clearScreen + goko + shiko + ameShiko

1584
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16132
245
+
Apply
false
0
false
clearScreen + goko + shiko

1585
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
16106
16124
245
+
Apply
false
0
false
clearScreen + goko

1586
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
printOverview
11116
11133
210
printOverview
DefDef
false
0
false
def printOverview

1587
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16642
16767
257
exists
Apply
false
0
false
game.players.head.side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)

1588
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16642
16654
257
players
Select
false
0
false
game.players

1589
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16642
16659
257
head
Select
false
0
false
game.players.head

1590
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16771
16821
257
map
Apply
false
0
false
c.unicode.map(line => s"\\u001b[32m$line\\u001b[0m")

1591
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16771
16780
257
unicode
Select
false
0
false
c.unicode

1592
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
16793
16820
257
s
Apply
false
0
false
s"\\u001b[32m$line\\u001b[0m"

1593
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16768
16821
257
<none>
Block
true
0
false
=> c.unicode.map(line => s"\\u001b[32m$line\\u001b[0m")

1594
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16840
16963
258
exists
Apply
false
0
false
game.players(1).side.cards.exists(c => c.month == card.month && c.cardType == card.cardType && c.cardName == card.cardName)

1595
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16840
16855
258
apply
Apply
false
0
false
game.players(1)

1596
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16840
16852
258
players
Select
false
0
false
game.players

1597
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16967
17017
258
map
Apply
false
0
false
c.unicode.map(line => s"\\u001b[31m$line\\u001b[0m")

1598
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16967
16976
258
unicode
Select
false
0
false
c.unicode

1599
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
16989
17016
258
s
Apply
false
0
false
s"\\u001b[31m$line\\u001b[0m"

1600
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16964
17017
258
<none>
Block
true
0
false
=> c.unicode.map(line => s"\\u001b[31m$line\\u001b[0m")

1601
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
17036
17088
259
map
Apply
false
0
false
card.unicode.map(line => s"\\u001b[0m$line\\u001b[0m")

1602
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
17036
17048
259
unicode
Select
false
0
false
card.unicode

1603
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
$anonfun
17061
17087
259
s
Apply
false
0
false
s"\\u001b[0m$line\\u001b[0m"

1604
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
17033
17088
259
<none>
Block
true
0
false
=> card.unicode.map(line => s"\\u001b[0m$line\\u001b[0m")

1605
src/main/scala/view/TUIManager.scala
view
TUIManager
Object
view.TUIManager
colorizeOverviewCard
16541
16565
256
colorizeOverviewCard
DefDef
false
0
false
def colorizeOverviewCard

